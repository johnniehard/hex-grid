{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/honeycomb-grid/dist/honeycomb.esm.min.js","../../src/Svg.svelte","../../src/Hexagon.svelte","../../src/hexagon.ts","../../src/neighbors.ts","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = append_empty_stylesheet(node).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.44.3' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","\"undefined\"!=typeof globalThis?globalThis:\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self&&self;var t=function(t,n){return t(n={exports:{}},n.exports),n.exports}((function(t,n){\n/*! axis.js v1.2.1 | (c) 2016 @toddmotto | https://github.com/toddmotto/axis */\nt.exports=function(){var t={},n=\"Array Object String Date RegExp Function Boolean Number Null Undefined\".split(\" \");function r(){return Object.prototype.toString.call(this).slice(8,-1)}for(var e=n.length;e--;)t[\"is\"+n[e]]=function(t){return function(n){return r.call(n)===t}}(n[e]);return t}()})),n=t.isObject,r=t.isNumber,e=t.isArray,i=t.isString;function s(t,n){return n+t*(1&n)>>1}function o(t,n){return(t%n+n)%n}function u(t,n){if(!/^(N|S)?(E|W)?$/i.test(t))throw new Error(`Invalid compass direction: ${t}. Choose from E, SE, S, SW, W, NW, N or NE.`);if(n=n.toLowerCase(),t=t.toUpperCase(),\"pointy\"===n&&[\"N\",\"S\"].includes(t))throw new Error(`Direction ${t} is ambiguous for pointy hexes. Did you mean ${t}E or ${t}W?`);if(\"flat\"===n&&[\"E\",\"W\"].includes(t))throw new Error(`Direction ${t} is ambiguous for flat hexes. Did you mean N${t} or S${t}?`);return{pointy:{E:0,SE:1,SW:2,W:3,NW:4,NE:5},flat:{SE:0,S:1,SW:2,NW:3,N:4,NE:5}}[n][t]}function c(t,n){return r(t)||r(n)?r(t)?r(n)||(n=t):t=n:t=n=0,{x:t,y:n}}const a=[{q:1,r:0,s:-1},{q:0,r:1,s:-1},{q:-1,r:1,s:0},{q:-1,r:0,s:1},{q:0,r:-1,s:1},{q:1,r:-1,s:0}],h=[{q:2,r:-1,s:-1},{q:1,r:1,s:-2},{q:-1,r:2,s:-1},{q:-2,r:1,s:1},{q:-1,r:-1,s:2},{q:1,r:-2,s:1}],f={q:1e-6,r:1e-6,s:-2e-6};function l(t){return r(t)?this[t]:this[this.indexOf(t)]}function d({isValidHex:t}){return function(n,e){if(!t(e))return this;const i=r(n)?n:this.indexOf(n);return i<0?this.push(e):this[i]=e,this}}function x(t,n){const r=t.distance(n),e=1/Math.max(r,1);let i=[];for(let s=0;s<=r;s++){const r=t.nudge().lerp(n.nudge(),e*s).round();i.push(this.get(r))}return i}function y({isValidHex:t}){return function(n,r=0,e=!0){if(!t(n))throw new Error(`Invalid center hex: ${n}.`);if(!this.get(n))throw new Error(`Center hex with coordinates ${n} not present in grid.`);let i=[];for(let t=-r;t<=r;t++)for(let s=Math.max(-r,-t-r);s<=Math.min(r,-t+r);s++){const r=this.get(n.cubeToCartesian({q:n.q+t,r:n.r+s}));n.equals(r)&&!e||i.push(r)}return i.filter(Boolean)}}function p({isValidHex:t,signedModulo:n,compassToNumberDirection:r}){return function(e,s=\"all\",o=!1){if(!t(e))throw new Error(`Invalid hex: ${e}.`);const u=o?h:a;return\"all\"===s&&(s=[0,1,2,3,4,5]),[].concat(s).map(t=>{i(t)&&(t=r(t,e.orientation)),(t<0||t>5)&&(t=n(t,6));const{q:s,r:o}=u[t];return this.get(e.cubeToCartesian({q:e.q+s,r:e.r+o}))})}}function g(){if(0===this.length)return 0;const{0:t,length:n,[n-1]:r}=this[0].isPointy()?[...this].sort((t,n)=>n.s-t.s||t.q-n.q):[...this].sort((t,n)=>t.q-n.q);return r.toPoint().x-t.toPoint().x+this[0].width()}function b(){if(0===this.length)return 0;const{0:t,length:n,[n-1]:r}=this[0].isPointy()?[...this].sort((t,n)=>t.r-n.r):[...this].sort((t,n)=>n.s-t.s||t.r-n.r);return r.toPoint().y-t.toPoint().y+this[0].height()}function q({Hex:t}){return function(n,r){return t().fromPoint(n,r)}}function P({Grid:t,Hex:n}){return function({width:r,height:e,start:i,direction:s=1,onCreate:o=(()=>{})}){i=n(i);const[u,c,a]={1:[\"q\",\"r\",\"s\"],3:[\"r\",\"s\",\"q\"],5:[\"s\",\"q\",\"r\"]}[s],h=new t;h.width=r,h.height=e,h.start=i,h.direction=s;for(let t=0;t<r;t++)for(let r=0;r<e;r++){const e=n({[u]:t+i[u],[c]:r+i[c],[a]:-t-r+i[a]});o(e,h),h.push(e)}return h}}function w({Grid:t,Hex:n}){return function({size:r,start:e,direction:i=1,onCreate:s=(()=>{})}){e=n(e);const o={1:{rStart:()=>0,rEnd:t=>r-t},5:{rStart:t=>r-t,rEnd:()=>r+1}},{rStart:u,rEnd:c}=o[i],a=new t;a.size=r,a.start=e,a.direction=i;for(let t=0;t<r;t++)for(let r=u(t);r<c(t);r++){const i=n({q:t+e.q,r:r+e.r,s:-t-r+e.s});s(i,a),a.push(i)}return a}}function m({Grid:t,Hex:n}){return function({radius:r,center:e,onCreate:i=(()=>{})}){e=n(e);const s=new t;s.radius=r,s.center=e;for(let t=-r;t<=r;t++){const o=Math.max(-r,-t-r),u=Math.min(r,-t+r);for(let r=o;r<=u;r++){const o=n({q:t+e.q,r:r+e.r,s:-t-r+e.s});i(o,s),s.push(o)}}return s}}function H({Grid:t,Hex:n,compassToNumberDirection:r,signedModulo:e}){return function({width:o,height:u,start:c,direction:a=(n().isPointy()?0:1),onCreate:h=(()=>{})}){c=n(c),i(a)&&(a=r(a,c.orientation)),(a<0||a>5)&&(a=e(a,6));const[f,l,d]=[[\"q\",\"r\",\"s\"],[\"r\",\"q\",\"s\"],[\"r\",\"s\",\"q\"],[\"s\",\"r\",\"q\"],[\"s\",\"q\",\"r\"],[\"q\",\"s\",\"r\"]][a],[x,y]=c.isPointy()?[o,u]:[u,o],p=new t;p.width=o,p.height=u,p.start=c,p.direction=a;for(let t=0;t<y;t++){const r=s(c.offset,t);for(let e=-r;e<x-r;e++){const r=n({[f]:e+c[f],[l]:t+c[l],[d]:-e-t+c[d]});h(r,p),p.push(r)}}return p}}function O({Grid:t,Hex:n}){return function({radius:r,center:e,onCreate:i=(()=>{})}){e=n(e);const s=new t;s.radius=r,s.center=e;const{q:o,r:u,s:c}=e;let h=n({q:o,r:u-r,s:c+r});for(let t=0;t<6;t++)for(let e=0;e<r;e++){i(h,s),s.push(h);const{q:r,r:e,s:o}=a[t];h=n({q:h.q+r,r:h.r+e,s:h.s+o})}return s}}function j({Grid:t,Hex:n}){return function({radius:r,center:e,onCreate:i=(()=>{})}){e=n(e);let s=new t;i(e,s),s.push(e);for(let t=1;t<=r;t++)s=s.concat(this.ring({radius:t,center:e,onCreate:i}));return s.radius=r,s.center=e,s}}function M({Point:t}){return function(n,r){let e;return({x:e,y:r}=t(n,r)),t(this.x+e,this.y+r)}}function E({Point:t}){return function(n,r){let e;return({x:e,y:r}=t(n,r)),t(this.x-e,this.y-r)}}function C({Point:t}){return function(n,r){let e;return({x:e,y:r}=t(n,r)),t(this.x*e,this.y*r)}}function N({Point:t}){return function(n,r){let e;return({x:e,y:r}=t(n,r)),t(this.x/e,this.y/r)}}function S({ensureXY:t}){const i={add:M({Point:s}),subtract:E({Point:s}),multiply:C({Point:s}),divide:N({Point:s})};function s(s,o){let u;return u=r(s)?t(s,o):e(s)?t(...s):n(s)?t(s.x,s.y):t(0),Object.assign(Object.create(i),u)}return s}const R=S({ensureXY:c});class $ extends Array{static isValidHex(t){return!0===(t||{}).__isHoneycombHex}fill(){throw new TypeError(\"Grid.prototype.fill is not implemented\")}includes(t,n=0){return!!(this.indexOf(t,n)+1)}indexOf(t,n=0){const{length:r}=this;let e=Number(n);for(t=R(t),e=Math.max(e>=0?e:r+e,0);e<r;e++)if(this[e].equals(t))return e;return-1}lastIndexOf(t,n=this.length-1){const{length:r}=this;let e=Number(n);for(t=R(t),e=e>=0?Math.min(e,r-1):r+e;e>=0;e--)if(this[e].equals(t))return e;return-1}push(...t){return super.push(...t.filter($.isValidHex))}splice(t,n,...r){return null==n?super.splice(t):super.splice(t,n,...r.filter($.isValidHex))}unshift(...t){return super.unshift(...t.filter($.isValidHex))}}function v(t,n,r){return n in t?Object.defineProperty(t,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[n]=r,t}function T(t,n){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var e=Object.getOwnPropertySymbols(t);n&&(e=e.filter((function(n){return Object.getOwnPropertyDescriptor(t,n).enumerable}))),r.push.apply(r,e)}return r}function G(t){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?T(Object(r),!0).forEach((function(n){v(t,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):T(Object(r)).forEach((function(n){Object.defineProperty(t,n,Object.getOwnPropertyDescriptor(r,n))}))}return t}function D(t,n){if(null==t)return{};var r,e,i=function(t,n){if(null==t)return{};var r,e,i={},s=Object.keys(t);for(e=0;e<s.length;e++)r=s[e],n.indexOf(r)>=0||(i[r]=t[r]);return i}(t,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(t);for(e=0;e<s.length;e++)r=s[e],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(i[r]=t[r])}return i}function z({Hex:t}){return function(...n){return Object.assign(this,t(...n))}}function V(){return{x:this.x,y:this.y}}function W(){return{q:this.q,r:this.r,s:this.s}}function I({q:t,r:n}){let r,e;return this.isPointy()?(r=t+s(this.offset,n),e=n):(r=t,e=n+s(this.offset,t)),{x:r,y:e}}function X(){return\"pointy\"===this.orientation.toLowerCase()}function Y(){return\"flat\"===this.orientation.toLowerCase()}function B(){const{xRadius:t}=this.size;return this.isPointy()?t*Math.sqrt(3):2*t}function _(){const{yRadius:t}=this.size;return this.isPointy()?2*t:t*Math.sqrt(3)}function A({Point:t}){return function(){const n=this.width(),r=this.height(),{x:e,y:i}=this.origin;return this.isPointy()?[t(n-e,.25*r-i),t(n-e,.75*r-i),t(.5*n-e,r-i),t(0-e,.75*r-i),t(0-e,.25*r-i),t(.5*n-e,0-i)]:[t(n-e,.5*r-i),t(.75*n-e,r-i),t(.25*n-e,r-i),t(0-e,.5*r-i),t(.25*n-e,0-i),t(.75*n-e,0-i)]}}function L({Point:t}){return function(){const{x:n,y:r}=this.origin;return t(this.width()/2-n,this.height()/2-r)}}function k({Point:t}){return function(){const{q:n,r:r,size:e}=this,{xRadius:i,yRadius:s}=e;let o,u;return this.isPointy()?(o=i*Math.sqrt(3)*(n+r/2),u=3*s/2*r):(o=3*i/2*n,u=s*Math.sqrt(3)*(r+n/2)),t(o,u)}}function F({Point:t,Hex:n}){return function(r,e){const{xRadius:i,yRadius:s}=this.size;let o,u,c;return({x:o,y:e}=t(r,e).subtract(this.center())),this.isPointy()?(u=Math.sqrt(3)*o/(3*i)-e/(3*s),c=2/3*(e/s)):(u=2/3*(o/i),c=Math.sqrt(3)*e/(3*s)-o/(3*i)),n({q:u,r:c,s:-u-c}).round()}}function U({Hex:t,Point:n}){return function(r){const{x:e,y:i}=n(r);return t(this.x+e,this.y+i,G({},this))}}function J({Hex:t,Point:n}){return function(r){const{x:e,y:i}=n(r);return t(this.x-e,this.y-i,G({},this))}}function K({Point:t}){return function(n){if(null!=n&&(e(n)||r(n.x)&&r(n.y))){const{x:r,y:e}=t(n);return this.x===r&&this.y===e}return!1}}function Q(t){return Math.max(Math.abs(this.q-t.q),Math.abs(this.r-t.r),Math.abs(this.s-t.s))}function Z({Hex:t}){return function(){let{q:n,r:r,s:e}=this,i=Math.round(n),s=Math.round(r),o=Math.round(e);const u=Math.abs(n-i),c=Math.abs(r-s),a=Math.abs(e-o);return u>c&&u>a?i=-s-o:c>a?s=-i-o:o=-i-s,t(G(G({},this),{},{q:i,r:s,s:o}))}}function tt({Hex:t}){return function(n,r){const e=this.q*(1-r)+n.q*r,i=this.r*(1-r)+n.r*r;return t(G(G({},this),{},{q:e,r:i,s:-e-i}))}}function nt({Hex:t}){return function(){const{q:n,r:r,s:e}=f;return t(G(G({},this),{},{q:this.q+n,r:this.r+r,s:this.s+e}))}}function rt(){return`${this.x},${this.y}`}const et={thirdCoordinate:function(t,n){return-t-n}};const it=S({ensureXY:c}),st=function({ensureXY:t,normalizeRadiuses:i,Point:o}){return function(u={}){const c=function({Point:t}){return function(n,r){let e,i,o;return({x:e,y:r}=t(n,r)),this.isPointy()?(i=e-s(this.offset,r),o=r):(i=e,o=r-s(this.offset,e)),{q:i,r:o,s:-i-o}}}({Point:o}),a={__isHoneycombHex:!0,orientation:\"pointy\",origin:0,size:{xRadius:1,yRadius:1},offset:-1,get q(){return this.cartesianToCube(this).q},get r(){return this.cartesianToCube(this).r},get s(){return this.cartesianToCube(this).s},add:U({Hex:f,Point:o}),cartesian:V,cartesianToCube:c,center:L({Point:o}),coordinates:V,corners:A({Point:o}),cube:W,cubeToCartesian:I,distance:Q,equals:K({Point:o}),fromPoint:F({Point:o,Hex:f}),height:_,isFlat:Y,isPointy:X,lerp:tt({Hex:f}),nudge:nt({Hex:f}),round:Z({Hex:f}),set:z({Hex:f}),subtract:J({Hex:f,Point:o}),toCartesian:I,toCube:c,toPoint:k({Point:o}),toString:rt,width:B},h=Object.assign(a,u);function f(i,s,o={}){let u;if(n(i)){let{q:t,r:n,s:e}=i,c=D(i,[\"q\",\"r\",\"s\"]);if(r(t)||r(n)||r(e)){const r=t+n+e;if(Number.isNaN(r)||r>1e-12)throw new Error(`Cube coordinates must have a sum of 0. q: ${t}, r: ${n}, s: ${e}, sum: ${t+n+e}.`);({x:u,y:s}=h.cubeToCartesian({q:t,r:n,s:e}))}else({x:u,y:s}=i);o=c}else e(i)?([u,s]=i,o={}):u=i;return Object.assign(Object.create(h),Object.assign(o,t(u,s)))}return h.size=i(h.size,h.isPointy()),h.origin=o(h.origin),Object.assign(f,et,{toJSON:()=>u}),f}}({ensureXY:c,normalizeRadiuses:function(t,e){if(n(t)){if(r(t.xRadius)&&r(t.yRadius))return t;const{width:n,height:i}=t;if(r(n)&&r(i))return e?{xRadius:n/Math.sqrt(3),yRadius:i/2}:{xRadius:n/2,yRadius:i/Math.sqrt(3)}}if(r(t))return{xRadius:t,yRadius:t};throw new Error(`Invalid size: ${t}. Set it as a number or as an object containing width and height.`)},Point:it}),ot=function({extendHex:t,Grid:n,Point:i}){const{isValidHex:s}=n;return function(c=t()){function a(...t){return t=t.filter(Boolean),e(t[0])&&(0===t[0].length||t[0].some(t=>!r(t)))&&(t=t[0]),new n(...t.map(t=>c(t)))}return Object.assign(a,{Hex:c,isValidHex:s,pointToHex:q({Point:i,Hex:c}),parallelogram:P({Grid:n,Hex:c}),triangle:w({Grid:n,Hex:c}),hexagon:m({Grid:n,Hex:c}),rectangle:H({Grid:n,Hex:c,compassToNumberDirection:u,signedModulo:o}),ring:O({Grid:n,Hex:c}),spiral:j({Grid:n,Hex:c})}),Object.assign(n.prototype,{get:l,hexesBetween:x,hexesInRange:y({isValidHex:s}),neighborsOf:p({isValidHex:s,signedModulo:o,compassToNumberDirection:u}),pointHeight:b,pointWidth:g,set:d({isValidHex:s})}),a}}({extendHex:st,Grid:$,Point:it});export{it as Point,ot as defineGrid,st as extendHex};\n//# sourceMappingURL=honeycomb.esm.min.js.map\n","<script lang=\"ts\">\n    export let width: number;\n    export let height: number;\n</script>\n\n<svg\n    width={`${width}px`}\n    height={`${height}px`}\n    viewBox={`0 0 ${width} ${height}`}\n>\n    <slot />\n</svg>\n\n<style>\n    svg {\n        display: block;\n        /* border: 1px solid white; */\n        max-width: 100%;\n        height: auto;\n    }\n</style>","<script lang=\"ts\">\n    import { coordsToPath, hexagonCoords } from \"./hexagon\";\n\n    export let x: number;\n    export let y: number;\n    export let r: number;\n    // export let onclick: () => void;\n    export let active: boolean = false;\n\n    const hex = hexagonCoords(x, y, r);\n    const path = coordsToPath(hex);\n</script>\n\n<path d={path} on:click on:mouseenter class={active ? \"active\" : \"\"} />\n\n<style>\n    path {\n        fill: rgba(0, 0, 0, 0);\n    }\n    \n    path:hover {\n        fill: rgb(253, 34, 154);\n        transition: none;\n    }\n    \n    .active {\n        fill: rgb(253, 34, 154);\n    }\n</style>\n","export function hexagonCoords(x, y, r) {\n    const coords = [];\n    for (let a = 0; a < 6; a += (Math.PI * 2) / 6) {\n        coords.push([x + Math.cos(a) * r, y + Math.sin(a) * r]);\n    }\n    return coords;\n}\nexport function coordsToPath(coords, closed = true) {\n    let path = \"\";\n    coords.forEach((c, i) => {\n        if (i === 0) {\n            path += `M ${c[0]} ${c[1]} `;\n        }\n        path += `L ${c[0]} ${c[1]} `;\n    });\n    if (closed) {\n        path += `L ${coords[0][0]} ${coords[0][1]} `;\n    }\n    return path;\n}\n","export const neighbors = [\n    [\n        22,\n        1,\n        21\n    ],\n    [\n        23,\n        2,\n        0,\n        22\n    ],\n    [\n        24,\n        3,\n        1,\n        23\n    ],\n    [\n        25,\n        4,\n        2,\n        24\n    ],\n    [\n        26,\n        5,\n        3,\n        25\n    ],\n    [\n        27,\n        6,\n        4,\n        26\n    ],\n    [\n        28,\n        7,\n        5,\n        27\n    ],\n    [\n        29,\n        8,\n        6,\n        28\n    ],\n    [\n        30,\n        9,\n        7,\n        29\n    ],\n    [\n        31,\n        10,\n        8,\n        30\n    ],\n    [\n        32,\n        11,\n        9,\n        31\n    ],\n    [\n        33,\n        12,\n        10,\n        32\n    ],\n    [\n        34,\n        13,\n        11,\n        33\n    ],\n    [\n        35,\n        14,\n        12,\n        34\n    ],\n    [\n        36,\n        15,\n        13,\n        35\n    ],\n    [\n        37,\n        16,\n        14,\n        36\n    ],\n    [\n        38,\n        17,\n        15,\n        37\n    ],\n    [\n        39,\n        18,\n        16,\n        38\n    ],\n    [\n        40,\n        19,\n        17,\n        39\n    ],\n    [\n        41,\n        20,\n        18,\n        40\n    ],\n    [\n        42,\n        19,\n        41\n    ],\n    [\n        44,\n        22,\n        0,\n        43\n    ],\n    [\n        45,\n        23,\n        1,\n        0,\n        21,\n        44\n    ],\n    [\n        46,\n        24,\n        2,\n        1,\n        22,\n        45\n    ],\n    [\n        47,\n        25,\n        3,\n        2,\n        23,\n        46\n    ],\n    [\n        48,\n        26,\n        4,\n        3,\n        24,\n        47\n    ],\n    [\n        49,\n        27,\n        5,\n        4,\n        25,\n        48\n    ],\n    [\n        50,\n        28,\n        6,\n        5,\n        26,\n        49\n    ],\n    [\n        51,\n        29,\n        7,\n        6,\n        27,\n        50\n    ],\n    [\n        52,\n        30,\n        8,\n        7,\n        28,\n        51\n    ],\n    [\n        53,\n        31,\n        9,\n        8,\n        29,\n        52\n    ],\n    [\n        54,\n        32,\n        10,\n        9,\n        30,\n        53\n    ],\n    [\n        55,\n        33,\n        11,\n        10,\n        31,\n        54\n    ],\n    [\n        56,\n        34,\n        12,\n        11,\n        32,\n        55\n    ],\n    [\n        57,\n        35,\n        13,\n        12,\n        33,\n        56\n    ],\n    [\n        58,\n        36,\n        14,\n        13,\n        34,\n        57\n    ],\n    [\n        59,\n        37,\n        15,\n        14,\n        35,\n        58\n    ],\n    [\n        60,\n        38,\n        16,\n        15,\n        36,\n        59\n    ],\n    [\n        61,\n        39,\n        17,\n        16,\n        37,\n        60\n    ],\n    [\n        62,\n        40,\n        18,\n        17,\n        38,\n        61\n    ],\n    [\n        63,\n        41,\n        19,\n        18,\n        39,\n        62\n    ],\n    [\n        64,\n        42,\n        20,\n        19,\n        40,\n        63\n    ],\n    [\n        65,\n        20,\n        41,\n        64\n    ],\n    [\n        67,\n        44,\n        21,\n        66\n    ],\n    [\n        68,\n        45,\n        22,\n        21,\n        43,\n        67\n    ],\n    [\n        69,\n        46,\n        23,\n        22,\n        44,\n        68\n    ],\n    [\n        70,\n        47,\n        24,\n        23,\n        45,\n        69\n    ],\n    [\n        71,\n        48,\n        25,\n        24,\n        46,\n        70\n    ],\n    [\n        72,\n        49,\n        26,\n        25,\n        47,\n        71\n    ],\n    [\n        73,\n        50,\n        27,\n        26,\n        48,\n        72\n    ],\n    [\n        74,\n        51,\n        28,\n        27,\n        49,\n        73\n    ],\n    [\n        75,\n        52,\n        29,\n        28,\n        50,\n        74\n    ],\n    [\n        76,\n        53,\n        30,\n        29,\n        51,\n        75\n    ],\n    [\n        77,\n        54,\n        31,\n        30,\n        52,\n        76\n    ],\n    [\n        78,\n        55,\n        32,\n        31,\n        53,\n        77\n    ],\n    [\n        79,\n        56,\n        33,\n        32,\n        54,\n        78\n    ],\n    [\n        80,\n        57,\n        34,\n        33,\n        55,\n        79\n    ],\n    [\n        81,\n        58,\n        35,\n        34,\n        56,\n        80\n    ],\n    [\n        82,\n        59,\n        36,\n        35,\n        57,\n        81\n    ],\n    [\n        83,\n        60,\n        37,\n        36,\n        58,\n        82\n    ],\n    [\n        84,\n        61,\n        38,\n        37,\n        59,\n        83\n    ],\n    [\n        85,\n        62,\n        39,\n        38,\n        60,\n        84\n    ],\n    [\n        86,\n        63,\n        40,\n        39,\n        61,\n        85\n    ],\n    [\n        87,\n        64,\n        41,\n        40,\n        62,\n        86\n    ],\n    [\n        88,\n        65,\n        42,\n        41,\n        63,\n        87\n    ],\n    [\n        89,\n        42,\n        64,\n        88\n    ],\n    [\n        91,\n        67,\n        43,\n        90\n    ],\n    [\n        92,\n        68,\n        44,\n        43,\n        66,\n        91\n    ],\n    [\n        93,\n        69,\n        45,\n        44,\n        67,\n        92\n    ],\n    [\n        94,\n        70,\n        46,\n        45,\n        68,\n        93\n    ],\n    [\n        95,\n        71,\n        47,\n        46,\n        69,\n        94\n    ],\n    [\n        96,\n        72,\n        48,\n        47,\n        70,\n        95\n    ],\n    [\n        97,\n        73,\n        49,\n        48,\n        71,\n        96\n    ],\n    [\n        98,\n        74,\n        50,\n        49,\n        72,\n        97\n    ],\n    [\n        99,\n        75,\n        51,\n        50,\n        73,\n        98\n    ],\n    [\n        100,\n        76,\n        52,\n        51,\n        74,\n        99\n    ],\n    [\n        101,\n        77,\n        53,\n        52,\n        75,\n        100\n    ],\n    [\n        102,\n        78,\n        54,\n        53,\n        76,\n        101\n    ],\n    [\n        103,\n        79,\n        55,\n        54,\n        77,\n        102\n    ],\n    [\n        104,\n        80,\n        56,\n        55,\n        78,\n        103\n    ],\n    [\n        105,\n        81,\n        57,\n        56,\n        79,\n        104\n    ],\n    [\n        106,\n        82,\n        58,\n        57,\n        80,\n        105\n    ],\n    [\n        107,\n        83,\n        59,\n        58,\n        81,\n        106\n    ],\n    [\n        108,\n        84,\n        60,\n        59,\n        82,\n        107\n    ],\n    [\n        109,\n        85,\n        61,\n        60,\n        83,\n        108\n    ],\n    [\n        110,\n        86,\n        62,\n        61,\n        84,\n        109\n    ],\n    [\n        111,\n        87,\n        63,\n        62,\n        85,\n        110\n    ],\n    [\n        112,\n        88,\n        64,\n        63,\n        86,\n        111\n    ],\n    [\n        113,\n        89,\n        65,\n        64,\n        87,\n        112\n    ],\n    [\n        114,\n        65,\n        88,\n        113\n    ],\n    [\n        116,\n        91,\n        66,\n        115\n    ],\n    [\n        117,\n        92,\n        67,\n        66,\n        90,\n        116\n    ],\n    [\n        118,\n        93,\n        68,\n        67,\n        91,\n        117\n    ],\n    [\n        119,\n        94,\n        69,\n        68,\n        92,\n        118\n    ],\n    [\n        120,\n        95,\n        70,\n        69,\n        93,\n        119\n    ],\n    [\n        121,\n        96,\n        71,\n        70,\n        94,\n        120\n    ],\n    [\n        122,\n        97,\n        72,\n        71,\n        95,\n        121\n    ],\n    [\n        123,\n        98,\n        73,\n        72,\n        96,\n        122\n    ],\n    [\n        124,\n        99,\n        74,\n        73,\n        97,\n        123\n    ],\n    [\n        125,\n        100,\n        75,\n        74,\n        98,\n        124\n    ],\n    [\n        126,\n        101,\n        76,\n        75,\n        99,\n        125\n    ],\n    [\n        127,\n        102,\n        77,\n        76,\n        100,\n        126\n    ],\n    [\n        128,\n        103,\n        78,\n        77,\n        101,\n        127\n    ],\n    [\n        129,\n        104,\n        79,\n        78,\n        102,\n        128\n    ],\n    [\n        130,\n        105,\n        80,\n        79,\n        103,\n        129\n    ],\n    [\n        131,\n        106,\n        81,\n        80,\n        104,\n        130\n    ],\n    [\n        132,\n        107,\n        82,\n        81,\n        105,\n        131\n    ],\n    [\n        133,\n        108,\n        83,\n        82,\n        106,\n        132\n    ],\n    [\n        134,\n        109,\n        84,\n        83,\n        107,\n        133\n    ],\n    [\n        135,\n        110,\n        85,\n        84,\n        108,\n        134\n    ],\n    [\n        136,\n        111,\n        86,\n        85,\n        109,\n        135\n    ],\n    [\n        137,\n        112,\n        87,\n        86,\n        110,\n        136\n    ],\n    [\n        138,\n        113,\n        88,\n        87,\n        111,\n        137\n    ],\n    [\n        139,\n        114,\n        89,\n        88,\n        112,\n        138\n    ],\n    [\n        140,\n        89,\n        113,\n        139\n    ],\n    [\n        142,\n        116,\n        90,\n        141\n    ],\n    [\n        143,\n        117,\n        91,\n        90,\n        115,\n        142\n    ],\n    [\n        144,\n        118,\n        92,\n        91,\n        116,\n        143\n    ],\n    [\n        145,\n        119,\n        93,\n        92,\n        117,\n        144\n    ],\n    [\n        146,\n        120,\n        94,\n        93,\n        118,\n        145\n    ],\n    [\n        147,\n        121,\n        95,\n        94,\n        119,\n        146\n    ],\n    [\n        148,\n        122,\n        96,\n        95,\n        120,\n        147\n    ],\n    [\n        149,\n        123,\n        97,\n        96,\n        121,\n        148\n    ],\n    [\n        150,\n        124,\n        98,\n        97,\n        122,\n        149\n    ],\n    [\n        151,\n        125,\n        99,\n        98,\n        123,\n        150\n    ],\n    [\n        152,\n        126,\n        100,\n        99,\n        124,\n        151\n    ],\n    [\n        153,\n        127,\n        101,\n        100,\n        125,\n        152\n    ],\n    [\n        154,\n        128,\n        102,\n        101,\n        126,\n        153\n    ],\n    [\n        155,\n        129,\n        103,\n        102,\n        127,\n        154\n    ],\n    [\n        156,\n        130,\n        104,\n        103,\n        128,\n        155\n    ],\n    [\n        157,\n        131,\n        105,\n        104,\n        129,\n        156\n    ],\n    [\n        158,\n        132,\n        106,\n        105,\n        130,\n        157\n    ],\n    [\n        159,\n        133,\n        107,\n        106,\n        131,\n        158\n    ],\n    [\n        160,\n        134,\n        108,\n        107,\n        132,\n        159\n    ],\n    [\n        161,\n        135,\n        109,\n        108,\n        133,\n        160\n    ],\n    [\n        162,\n        136,\n        110,\n        109,\n        134,\n        161\n    ],\n    [\n        163,\n        137,\n        111,\n        110,\n        135,\n        162\n    ],\n    [\n        164,\n        138,\n        112,\n        111,\n        136,\n        163\n    ],\n    [\n        165,\n        139,\n        113,\n        112,\n        137,\n        164\n    ],\n    [\n        166,\n        140,\n        114,\n        113,\n        138,\n        165\n    ],\n    [\n        167,\n        114,\n        139,\n        166\n    ],\n    [\n        169,\n        142,\n        115,\n        168\n    ],\n    [\n        170,\n        143,\n        116,\n        115,\n        141,\n        169\n    ],\n    [\n        171,\n        144,\n        117,\n        116,\n        142,\n        170\n    ],\n    [\n        172,\n        145,\n        118,\n        117,\n        143,\n        171\n    ],\n    [\n        173,\n        146,\n        119,\n        118,\n        144,\n        172\n    ],\n    [\n        174,\n        147,\n        120,\n        119,\n        145,\n        173\n    ],\n    [\n        175,\n        148,\n        121,\n        120,\n        146,\n        174\n    ],\n    [\n        176,\n        149,\n        122,\n        121,\n        147,\n        175\n    ],\n    [\n        177,\n        150,\n        123,\n        122,\n        148,\n        176\n    ],\n    [\n        178,\n        151,\n        124,\n        123,\n        149,\n        177\n    ],\n    [\n        179,\n        152,\n        125,\n        124,\n        150,\n        178\n    ],\n    [\n        180,\n        153,\n        126,\n        125,\n        151,\n        179\n    ],\n    [\n        181,\n        154,\n        127,\n        126,\n        152,\n        180\n    ],\n    [\n        182,\n        155,\n        128,\n        127,\n        153,\n        181\n    ],\n    [\n        183,\n        156,\n        129,\n        128,\n        154,\n        182\n    ],\n    [\n        184,\n        157,\n        130,\n        129,\n        155,\n        183\n    ],\n    [\n        185,\n        158,\n        131,\n        130,\n        156,\n        184\n    ],\n    [\n        186,\n        159,\n        132,\n        131,\n        157,\n        185\n    ],\n    [\n        187,\n        160,\n        133,\n        132,\n        158,\n        186\n    ],\n    [\n        188,\n        161,\n        134,\n        133,\n        159,\n        187\n    ],\n    [\n        189,\n        162,\n        135,\n        134,\n        160,\n        188\n    ],\n    [\n        190,\n        163,\n        136,\n        135,\n        161,\n        189\n    ],\n    [\n        191,\n        164,\n        137,\n        136,\n        162,\n        190\n    ],\n    [\n        192,\n        165,\n        138,\n        137,\n        163,\n        191\n    ],\n    [\n        193,\n        166,\n        139,\n        138,\n        164,\n        192\n    ],\n    [\n        194,\n        167,\n        140,\n        139,\n        165,\n        193\n    ],\n    [\n        195,\n        140,\n        166,\n        194\n    ],\n    [\n        197,\n        169,\n        141,\n        196\n    ],\n    [\n        198,\n        170,\n        142,\n        141,\n        168,\n        197\n    ],\n    [\n        199,\n        171,\n        143,\n        142,\n        169,\n        198\n    ],\n    [\n        200,\n        172,\n        144,\n        143,\n        170,\n        199\n    ],\n    [\n        201,\n        173,\n        145,\n        144,\n        171,\n        200\n    ],\n    [\n        202,\n        174,\n        146,\n        145,\n        172,\n        201\n    ],\n    [\n        203,\n        175,\n        147,\n        146,\n        173,\n        202\n    ],\n    [\n        204,\n        176,\n        148,\n        147,\n        174,\n        203\n    ],\n    [\n        205,\n        177,\n        149,\n        148,\n        175,\n        204\n    ],\n    [\n        206,\n        178,\n        150,\n        149,\n        176,\n        205\n    ],\n    [\n        207,\n        179,\n        151,\n        150,\n        177,\n        206\n    ],\n    [\n        208,\n        180,\n        152,\n        151,\n        178,\n        207\n    ],\n    [\n        209,\n        181,\n        153,\n        152,\n        179,\n        208\n    ],\n    [\n        210,\n        182,\n        154,\n        153,\n        180,\n        209\n    ],\n    [\n        211,\n        183,\n        155,\n        154,\n        181,\n        210\n    ],\n    [\n        212,\n        184,\n        156,\n        155,\n        182,\n        211\n    ],\n    [\n        213,\n        185,\n        157,\n        156,\n        183,\n        212\n    ],\n    [\n        214,\n        186,\n        158,\n        157,\n        184,\n        213\n    ],\n    [\n        215,\n        187,\n        159,\n        158,\n        185,\n        214\n    ],\n    [\n        216,\n        188,\n        160,\n        159,\n        186,\n        215\n    ],\n    [\n        217,\n        189,\n        161,\n        160,\n        187,\n        216\n    ],\n    [\n        218,\n        190,\n        162,\n        161,\n        188,\n        217\n    ],\n    [\n        219,\n        191,\n        163,\n        162,\n        189,\n        218\n    ],\n    [\n        220,\n        192,\n        164,\n        163,\n        190,\n        219\n    ],\n    [\n        221,\n        193,\n        165,\n        164,\n        191,\n        220\n    ],\n    [\n        222,\n        194,\n        166,\n        165,\n        192,\n        221\n    ],\n    [\n        223,\n        195,\n        167,\n        166,\n        193,\n        222\n    ],\n    [\n        224,\n        167,\n        194,\n        223\n    ],\n    [\n        226,\n        197,\n        168,\n        225\n    ],\n    [\n        227,\n        198,\n        169,\n        168,\n        196,\n        226\n    ],\n    [\n        228,\n        199,\n        170,\n        169,\n        197,\n        227\n    ],\n    [\n        229,\n        200,\n        171,\n        170,\n        198,\n        228\n    ],\n    [\n        230,\n        201,\n        172,\n        171,\n        199,\n        229\n    ],\n    [\n        231,\n        202,\n        173,\n        172,\n        200,\n        230\n    ],\n    [\n        232,\n        203,\n        174,\n        173,\n        201,\n        231\n    ],\n    [\n        233,\n        204,\n        175,\n        174,\n        202,\n        232\n    ],\n    [\n        234,\n        205,\n        176,\n        175,\n        203,\n        233\n    ],\n    [\n        235,\n        206,\n        177,\n        176,\n        204,\n        234\n    ],\n    [\n        236,\n        207,\n        178,\n        177,\n        205,\n        235\n    ],\n    [\n        237,\n        208,\n        179,\n        178,\n        206,\n        236\n    ],\n    [\n        238,\n        209,\n        180,\n        179,\n        207,\n        237\n    ],\n    [\n        239,\n        210,\n        181,\n        180,\n        208,\n        238\n    ],\n    [\n        240,\n        211,\n        182,\n        181,\n        209,\n        239\n    ],\n    [\n        241,\n        212,\n        183,\n        182,\n        210,\n        240\n    ],\n    [\n        242,\n        213,\n        184,\n        183,\n        211,\n        241\n    ],\n    [\n        243,\n        214,\n        185,\n        184,\n        212,\n        242\n    ],\n    [\n        244,\n        215,\n        186,\n        185,\n        213,\n        243\n    ],\n    [\n        245,\n        216,\n        187,\n        186,\n        214,\n        244\n    ],\n    [\n        246,\n        217,\n        188,\n        187,\n        215,\n        245\n    ],\n    [\n        247,\n        218,\n        189,\n        188,\n        216,\n        246\n    ],\n    [\n        248,\n        219,\n        190,\n        189,\n        217,\n        247\n    ],\n    [\n        249,\n        220,\n        191,\n        190,\n        218,\n        248\n    ],\n    [\n        250,\n        221,\n        192,\n        191,\n        219,\n        249\n    ],\n    [\n        251,\n        222,\n        193,\n        192,\n        220,\n        250\n    ],\n    [\n        252,\n        223,\n        194,\n        193,\n        221,\n        251\n    ],\n    [\n        253,\n        224,\n        195,\n        194,\n        222,\n        252\n    ],\n    [\n        254,\n        195,\n        223,\n        253\n    ],\n    [\n        256,\n        226,\n        196,\n        255\n    ],\n    [\n        257,\n        227,\n        197,\n        196,\n        225,\n        256\n    ],\n    [\n        258,\n        228,\n        198,\n        197,\n        226,\n        257\n    ],\n    [\n        259,\n        229,\n        199,\n        198,\n        227,\n        258\n    ],\n    [\n        260,\n        230,\n        200,\n        199,\n        228,\n        259\n    ],\n    [\n        261,\n        231,\n        201,\n        200,\n        229,\n        260\n    ],\n    [\n        262,\n        232,\n        202,\n        201,\n        230,\n        261\n    ],\n    [\n        263,\n        233,\n        203,\n        202,\n        231,\n        262\n    ],\n    [\n        264,\n        234,\n        204,\n        203,\n        232,\n        263\n    ],\n    [\n        265,\n        235,\n        205,\n        204,\n        233,\n        264\n    ],\n    [\n        266,\n        236,\n        206,\n        205,\n        234,\n        265\n    ],\n    [\n        267,\n        237,\n        207,\n        206,\n        235,\n        266\n    ],\n    [\n        268,\n        238,\n        208,\n        207,\n        236,\n        267\n    ],\n    [\n        269,\n        239,\n        209,\n        208,\n        237,\n        268\n    ],\n    [\n        270,\n        240,\n        210,\n        209,\n        238,\n        269\n    ],\n    [\n        271,\n        241,\n        211,\n        210,\n        239,\n        270\n    ],\n    [\n        272,\n        242,\n        212,\n        211,\n        240,\n        271\n    ],\n    [\n        273,\n        243,\n        213,\n        212,\n        241,\n        272\n    ],\n    [\n        274,\n        244,\n        214,\n        213,\n        242,\n        273\n    ],\n    [\n        275,\n        245,\n        215,\n        214,\n        243,\n        274\n    ],\n    [\n        276,\n        246,\n        216,\n        215,\n        244,\n        275\n    ],\n    [\n        277,\n        247,\n        217,\n        216,\n        245,\n        276\n    ],\n    [\n        278,\n        248,\n        218,\n        217,\n        246,\n        277\n    ],\n    [\n        279,\n        249,\n        219,\n        218,\n        247,\n        278\n    ],\n    [\n        280,\n        250,\n        220,\n        219,\n        248,\n        279\n    ],\n    [\n        281,\n        251,\n        221,\n        220,\n        249,\n        280\n    ],\n    [\n        282,\n        252,\n        222,\n        221,\n        250,\n        281\n    ],\n    [\n        283,\n        253,\n        223,\n        222,\n        251,\n        282\n    ],\n    [\n        284,\n        254,\n        224,\n        223,\n        252,\n        283\n    ],\n    [\n        285,\n        224,\n        253,\n        284\n    ],\n    [\n        287,\n        256,\n        225,\n        286\n    ],\n    [\n        288,\n        257,\n        226,\n        225,\n        255,\n        287\n    ],\n    [\n        289,\n        258,\n        227,\n        226,\n        256,\n        288\n    ],\n    [\n        290,\n        259,\n        228,\n        227,\n        257,\n        289\n    ],\n    [\n        291,\n        260,\n        229,\n        228,\n        258,\n        290\n    ],\n    [\n        292,\n        261,\n        230,\n        229,\n        259,\n        291\n    ],\n    [\n        293,\n        262,\n        231,\n        230,\n        260,\n        292\n    ],\n    [\n        294,\n        263,\n        232,\n        231,\n        261,\n        293\n    ],\n    [\n        295,\n        264,\n        233,\n        232,\n        262,\n        294\n    ],\n    [\n        296,\n        265,\n        234,\n        233,\n        263,\n        295\n    ],\n    [\n        297,\n        266,\n        235,\n        234,\n        264,\n        296\n    ],\n    [\n        298,\n        267,\n        236,\n        235,\n        265,\n        297\n    ],\n    [\n        299,\n        268,\n        237,\n        236,\n        266,\n        298\n    ],\n    [\n        300,\n        269,\n        238,\n        237,\n        267,\n        299\n    ],\n    [\n        301,\n        270,\n        239,\n        238,\n        268,\n        300\n    ],\n    [\n        302,\n        271,\n        240,\n        239,\n        269,\n        301\n    ],\n    [\n        303,\n        272,\n        241,\n        240,\n        270,\n        302\n    ],\n    [\n        304,\n        273,\n        242,\n        241,\n        271,\n        303\n    ],\n    [\n        305,\n        274,\n        243,\n        242,\n        272,\n        304\n    ],\n    [\n        306,\n        275,\n        244,\n        243,\n        273,\n        305\n    ],\n    [\n        307,\n        276,\n        245,\n        244,\n        274,\n        306\n    ],\n    [\n        308,\n        277,\n        246,\n        245,\n        275,\n        307\n    ],\n    [\n        309,\n        278,\n        247,\n        246,\n        276,\n        308\n    ],\n    [\n        310,\n        279,\n        248,\n        247,\n        277,\n        309\n    ],\n    [\n        311,\n        280,\n        249,\n        248,\n        278,\n        310\n    ],\n    [\n        312,\n        281,\n        250,\n        249,\n        279,\n        311\n    ],\n    [\n        313,\n        282,\n        251,\n        250,\n        280,\n        312\n    ],\n    [\n        314,\n        283,\n        252,\n        251,\n        281,\n        313\n    ],\n    [\n        315,\n        284,\n        253,\n        252,\n        282,\n        314\n    ],\n    [\n        316,\n        285,\n        254,\n        253,\n        283,\n        315\n    ],\n    [\n        317,\n        254,\n        284,\n        316\n    ],\n    [\n        319,\n        287,\n        255,\n        318\n    ],\n    [\n        320,\n        288,\n        256,\n        255,\n        286,\n        319\n    ],\n    [\n        321,\n        289,\n        257,\n        256,\n        287,\n        320\n    ],\n    [\n        322,\n        290,\n        258,\n        257,\n        288,\n        321\n    ],\n    [\n        323,\n        291,\n        259,\n        258,\n        289,\n        322\n    ],\n    [\n        324,\n        292,\n        260,\n        259,\n        290,\n        323\n    ],\n    [\n        325,\n        293,\n        261,\n        260,\n        291,\n        324\n    ],\n    [\n        326,\n        294,\n        262,\n        261,\n        292,\n        325\n    ],\n    [\n        327,\n        295,\n        263,\n        262,\n        293,\n        326\n    ],\n    [\n        328,\n        296,\n        264,\n        263,\n        294,\n        327\n    ],\n    [\n        329,\n        297,\n        265,\n        264,\n        295,\n        328\n    ],\n    [\n        330,\n        298,\n        266,\n        265,\n        296,\n        329\n    ],\n    [\n        331,\n        299,\n        267,\n        266,\n        297,\n        330\n    ],\n    [\n        332,\n        300,\n        268,\n        267,\n        298,\n        331\n    ],\n    [\n        333,\n        301,\n        269,\n        268,\n        299,\n        332\n    ],\n    [\n        334,\n        302,\n        270,\n        269,\n        300,\n        333\n    ],\n    [\n        335,\n        303,\n        271,\n        270,\n        301,\n        334\n    ],\n    [\n        336,\n        304,\n        272,\n        271,\n        302,\n        335\n    ],\n    [\n        337,\n        305,\n        273,\n        272,\n        303,\n        336\n    ],\n    [\n        338,\n        306,\n        274,\n        273,\n        304,\n        337\n    ],\n    [\n        339,\n        307,\n        275,\n        274,\n        305,\n        338\n    ],\n    [\n        340,\n        308,\n        276,\n        275,\n        306,\n        339\n    ],\n    [\n        341,\n        309,\n        277,\n        276,\n        307,\n        340\n    ],\n    [\n        342,\n        310,\n        278,\n        277,\n        308,\n        341\n    ],\n    [\n        343,\n        311,\n        279,\n        278,\n        309,\n        342\n    ],\n    [\n        344,\n        312,\n        280,\n        279,\n        310,\n        343\n    ],\n    [\n        345,\n        313,\n        281,\n        280,\n        311,\n        344\n    ],\n    [\n        346,\n        314,\n        282,\n        281,\n        312,\n        345\n    ],\n    [\n        347,\n        315,\n        283,\n        282,\n        313,\n        346\n    ],\n    [\n        348,\n        316,\n        284,\n        283,\n        314,\n        347\n    ],\n    [\n        349,\n        317,\n        285,\n        284,\n        315,\n        348\n    ],\n    [\n        350,\n        285,\n        316,\n        349\n    ],\n    [\n        352,\n        319,\n        286,\n        351\n    ],\n    [\n        353,\n        320,\n        287,\n        286,\n        318,\n        352\n    ],\n    [\n        354,\n        321,\n        288,\n        287,\n        319,\n        353\n    ],\n    [\n        355,\n        322,\n        289,\n        288,\n        320,\n        354\n    ],\n    [\n        356,\n        323,\n        290,\n        289,\n        321,\n        355\n    ],\n    [\n        357,\n        324,\n        291,\n        290,\n        322,\n        356\n    ],\n    [\n        358,\n        325,\n        292,\n        291,\n        323,\n        357\n    ],\n    [\n        359,\n        326,\n        293,\n        292,\n        324,\n        358\n    ],\n    [\n        360,\n        327,\n        294,\n        293,\n        325,\n        359\n    ],\n    [\n        361,\n        328,\n        295,\n        294,\n        326,\n        360\n    ],\n    [\n        362,\n        329,\n        296,\n        295,\n        327,\n        361\n    ],\n    [\n        363,\n        330,\n        297,\n        296,\n        328,\n        362\n    ],\n    [\n        364,\n        331,\n        298,\n        297,\n        329,\n        363\n    ],\n    [\n        365,\n        332,\n        299,\n        298,\n        330,\n        364\n    ],\n    [\n        366,\n        333,\n        300,\n        299,\n        331,\n        365\n    ],\n    [\n        367,\n        334,\n        301,\n        300,\n        332,\n        366\n    ],\n    [\n        368,\n        335,\n        302,\n        301,\n        333,\n        367\n    ],\n    [\n        369,\n        336,\n        303,\n        302,\n        334,\n        368\n    ],\n    [\n        370,\n        337,\n        304,\n        303,\n        335,\n        369\n    ],\n    [\n        371,\n        338,\n        305,\n        304,\n        336,\n        370\n    ],\n    [\n        372,\n        339,\n        306,\n        305,\n        337,\n        371\n    ],\n    [\n        373,\n        340,\n        307,\n        306,\n        338,\n        372\n    ],\n    [\n        374,\n        341,\n        308,\n        307,\n        339,\n        373\n    ],\n    [\n        375,\n        342,\n        309,\n        308,\n        340,\n        374\n    ],\n    [\n        376,\n        343,\n        310,\n        309,\n        341,\n        375\n    ],\n    [\n        377,\n        344,\n        311,\n        310,\n        342,\n        376\n    ],\n    [\n        378,\n        345,\n        312,\n        311,\n        343,\n        377\n    ],\n    [\n        379,\n        346,\n        313,\n        312,\n        344,\n        378\n    ],\n    [\n        380,\n        347,\n        314,\n        313,\n        345,\n        379\n    ],\n    [\n        381,\n        348,\n        315,\n        314,\n        346,\n        380\n    ],\n    [\n        382,\n        349,\n        316,\n        315,\n        347,\n        381\n    ],\n    [\n        383,\n        350,\n        317,\n        316,\n        348,\n        382\n    ],\n    [\n        384,\n        317,\n        349,\n        383\n    ],\n    [\n        386,\n        352,\n        318,\n        385\n    ],\n    [\n        387,\n        353,\n        319,\n        318,\n        351,\n        386\n    ],\n    [\n        388,\n        354,\n        320,\n        319,\n        352,\n        387\n    ],\n    [\n        389,\n        355,\n        321,\n        320,\n        353,\n        388\n    ],\n    [\n        390,\n        356,\n        322,\n        321,\n        354,\n        389\n    ],\n    [\n        391,\n        357,\n        323,\n        322,\n        355,\n        390\n    ],\n    [\n        392,\n        358,\n        324,\n        323,\n        356,\n        391\n    ],\n    [\n        393,\n        359,\n        325,\n        324,\n        357,\n        392\n    ],\n    [\n        394,\n        360,\n        326,\n        325,\n        358,\n        393\n    ],\n    [\n        395,\n        361,\n        327,\n        326,\n        359,\n        394\n    ],\n    [\n        396,\n        362,\n        328,\n        327,\n        360,\n        395\n    ],\n    [\n        397,\n        363,\n        329,\n        328,\n        361,\n        396\n    ],\n    [\n        398,\n        364,\n        330,\n        329,\n        362,\n        397\n    ],\n    [\n        399,\n        365,\n        331,\n        330,\n        363,\n        398\n    ],\n    [\n        400,\n        366,\n        332,\n        331,\n        364,\n        399\n    ],\n    [\n        401,\n        367,\n        333,\n        332,\n        365,\n        400\n    ],\n    [\n        402,\n        368,\n        334,\n        333,\n        366,\n        401\n    ],\n    [\n        403,\n        369,\n        335,\n        334,\n        367,\n        402\n    ],\n    [\n        404,\n        370,\n        336,\n        335,\n        368,\n        403\n    ],\n    [\n        405,\n        371,\n        337,\n        336,\n        369,\n        404\n    ],\n    [\n        406,\n        372,\n        338,\n        337,\n        370,\n        405\n    ],\n    [\n        407,\n        373,\n        339,\n        338,\n        371,\n        406\n    ],\n    [\n        408,\n        374,\n        340,\n        339,\n        372,\n        407\n    ],\n    [\n        409,\n        375,\n        341,\n        340,\n        373,\n        408\n    ],\n    [\n        410,\n        376,\n        342,\n        341,\n        374,\n        409\n    ],\n    [\n        411,\n        377,\n        343,\n        342,\n        375,\n        410\n    ],\n    [\n        412,\n        378,\n        344,\n        343,\n        376,\n        411\n    ],\n    [\n        413,\n        379,\n        345,\n        344,\n        377,\n        412\n    ],\n    [\n        414,\n        380,\n        346,\n        345,\n        378,\n        413\n    ],\n    [\n        415,\n        381,\n        347,\n        346,\n        379,\n        414\n    ],\n    [\n        416,\n        382,\n        348,\n        347,\n        380,\n        415\n    ],\n    [\n        417,\n        383,\n        349,\n        348,\n        381,\n        416\n    ],\n    [\n        418,\n        384,\n        350,\n        349,\n        382,\n        417\n    ],\n    [\n        419,\n        350,\n        383,\n        418\n    ],\n    [\n        421,\n        386,\n        351,\n        420\n    ],\n    [\n        422,\n        387,\n        352,\n        351,\n        385,\n        421\n    ],\n    [\n        423,\n        388,\n        353,\n        352,\n        386,\n        422\n    ],\n    [\n        424,\n        389,\n        354,\n        353,\n        387,\n        423\n    ],\n    [\n        425,\n        390,\n        355,\n        354,\n        388,\n        424\n    ],\n    [\n        426,\n        391,\n        356,\n        355,\n        389,\n        425\n    ],\n    [\n        427,\n        392,\n        357,\n        356,\n        390,\n        426\n    ],\n    [\n        428,\n        393,\n        358,\n        357,\n        391,\n        427\n    ],\n    [\n        429,\n        394,\n        359,\n        358,\n        392,\n        428\n    ],\n    [\n        430,\n        395,\n        360,\n        359,\n        393,\n        429\n    ],\n    [\n        431,\n        396,\n        361,\n        360,\n        394,\n        430\n    ],\n    [\n        432,\n        397,\n        362,\n        361,\n        395,\n        431\n    ],\n    [\n        433,\n        398,\n        363,\n        362,\n        396,\n        432\n    ],\n    [\n        434,\n        399,\n        364,\n        363,\n        397,\n        433\n    ],\n    [\n        435,\n        400,\n        365,\n        364,\n        398,\n        434\n    ],\n    [\n        436,\n        401,\n        366,\n        365,\n        399,\n        435\n    ],\n    [\n        437,\n        402,\n        367,\n        366,\n        400,\n        436\n    ],\n    [\n        438,\n        403,\n        368,\n        367,\n        401,\n        437\n    ],\n    [\n        439,\n        404,\n        369,\n        368,\n        402,\n        438\n    ],\n    [\n        440,\n        405,\n        370,\n        369,\n        403,\n        439\n    ],\n    [\n        441,\n        406,\n        371,\n        370,\n        404,\n        440\n    ],\n    [\n        442,\n        407,\n        372,\n        371,\n        405,\n        441\n    ],\n    [\n        443,\n        408,\n        373,\n        372,\n        406,\n        442\n    ],\n    [\n        444,\n        409,\n        374,\n        373,\n        407,\n        443\n    ],\n    [\n        445,\n        410,\n        375,\n        374,\n        408,\n        444\n    ],\n    [\n        446,\n        411,\n        376,\n        375,\n        409,\n        445\n    ],\n    [\n        447,\n        412,\n        377,\n        376,\n        410,\n        446\n    ],\n    [\n        448,\n        413,\n        378,\n        377,\n        411,\n        447\n    ],\n    [\n        449,\n        414,\n        379,\n        378,\n        412,\n        448\n    ],\n    [\n        450,\n        415,\n        380,\n        379,\n        413,\n        449\n    ],\n    [\n        451,\n        416,\n        381,\n        380,\n        414,\n        450\n    ],\n    [\n        452,\n        417,\n        382,\n        381,\n        415,\n        451\n    ],\n    [\n        453,\n        418,\n        383,\n        382,\n        416,\n        452\n    ],\n    [\n        454,\n        419,\n        384,\n        383,\n        417,\n        453\n    ],\n    [\n        455,\n        384,\n        418,\n        454\n    ],\n    [\n        457,\n        421,\n        385,\n        456\n    ],\n    [\n        458,\n        422,\n        386,\n        385,\n        420,\n        457\n    ],\n    [\n        459,\n        423,\n        387,\n        386,\n        421,\n        458\n    ],\n    [\n        460,\n        424,\n        388,\n        387,\n        422,\n        459\n    ],\n    [\n        461,\n        425,\n        389,\n        388,\n        423,\n        460\n    ],\n    [\n        462,\n        426,\n        390,\n        389,\n        424,\n        461\n    ],\n    [\n        463,\n        427,\n        391,\n        390,\n        425,\n        462\n    ],\n    [\n        464,\n        428,\n        392,\n        391,\n        426,\n        463\n    ],\n    [\n        465,\n        429,\n        393,\n        392,\n        427,\n        464\n    ],\n    [\n        466,\n        430,\n        394,\n        393,\n        428,\n        465\n    ],\n    [\n        467,\n        431,\n        395,\n        394,\n        429,\n        466\n    ],\n    [\n        468,\n        432,\n        396,\n        395,\n        430,\n        467\n    ],\n    [\n        469,\n        433,\n        397,\n        396,\n        431,\n        468\n    ],\n    [\n        470,\n        434,\n        398,\n        397,\n        432,\n        469\n    ],\n    [\n        471,\n        435,\n        399,\n        398,\n        433,\n        470\n    ],\n    [\n        472,\n        436,\n        400,\n        399,\n        434,\n        471\n    ],\n    [\n        473,\n        437,\n        401,\n        400,\n        435,\n        472\n    ],\n    [\n        474,\n        438,\n        402,\n        401,\n        436,\n        473\n    ],\n    [\n        475,\n        439,\n        403,\n        402,\n        437,\n        474\n    ],\n    [\n        476,\n        440,\n        404,\n        403,\n        438,\n        475\n    ],\n    [\n        477,\n        441,\n        405,\n        404,\n        439,\n        476\n    ],\n    [\n        478,\n        442,\n        406,\n        405,\n        440,\n        477\n    ],\n    [\n        479,\n        443,\n        407,\n        406,\n        441,\n        478\n    ],\n    [\n        480,\n        444,\n        408,\n        407,\n        442,\n        479\n    ],\n    [\n        481,\n        445,\n        409,\n        408,\n        443,\n        480\n    ],\n    [\n        482,\n        446,\n        410,\n        409,\n        444,\n        481\n    ],\n    [\n        483,\n        447,\n        411,\n        410,\n        445,\n        482\n    ],\n    [\n        484,\n        448,\n        412,\n        411,\n        446,\n        483\n    ],\n    [\n        485,\n        449,\n        413,\n        412,\n        447,\n        484\n    ],\n    [\n        486,\n        450,\n        414,\n        413,\n        448,\n        485\n    ],\n    [\n        487,\n        451,\n        415,\n        414,\n        449,\n        486\n    ],\n    [\n        488,\n        452,\n        416,\n        415,\n        450,\n        487\n    ],\n    [\n        489,\n        453,\n        417,\n        416,\n        451,\n        488\n    ],\n    [\n        490,\n        454,\n        418,\n        417,\n        452,\n        489\n    ],\n    [\n        491,\n        455,\n        419,\n        418,\n        453,\n        490\n    ],\n    [\n        492,\n        419,\n        454,\n        491\n    ],\n    [\n        494,\n        457,\n        420,\n        493\n    ],\n    [\n        495,\n        458,\n        421,\n        420,\n        456,\n        494\n    ],\n    [\n        496,\n        459,\n        422,\n        421,\n        457,\n        495\n    ],\n    [\n        497,\n        460,\n        423,\n        422,\n        458,\n        496\n    ],\n    [\n        498,\n        461,\n        424,\n        423,\n        459,\n        497\n    ],\n    [\n        499,\n        462,\n        425,\n        424,\n        460,\n        498\n    ],\n    [\n        500,\n        463,\n        426,\n        425,\n        461,\n        499\n    ],\n    [\n        501,\n        464,\n        427,\n        426,\n        462,\n        500\n    ],\n    [\n        502,\n        465,\n        428,\n        427,\n        463,\n        501\n    ],\n    [\n        503,\n        466,\n        429,\n        428,\n        464,\n        502\n    ],\n    [\n        504,\n        467,\n        430,\n        429,\n        465,\n        503\n    ],\n    [\n        505,\n        468,\n        431,\n        430,\n        466,\n        504\n    ],\n    [\n        506,\n        469,\n        432,\n        431,\n        467,\n        505\n    ],\n    [\n        507,\n        470,\n        433,\n        432,\n        468,\n        506\n    ],\n    [\n        508,\n        471,\n        434,\n        433,\n        469,\n        507\n    ],\n    [\n        509,\n        472,\n        435,\n        434,\n        470,\n        508\n    ],\n    [\n        510,\n        473,\n        436,\n        435,\n        471,\n        509\n    ],\n    [\n        511,\n        474,\n        437,\n        436,\n        472,\n        510\n    ],\n    [\n        512,\n        475,\n        438,\n        437,\n        473,\n        511\n    ],\n    [\n        513,\n        476,\n        439,\n        438,\n        474,\n        512\n    ],\n    [\n        514,\n        477,\n        440,\n        439,\n        475,\n        513\n    ],\n    [\n        515,\n        478,\n        441,\n        440,\n        476,\n        514\n    ],\n    [\n        516,\n        479,\n        442,\n        441,\n        477,\n        515\n    ],\n    [\n        517,\n        480,\n        443,\n        442,\n        478,\n        516\n    ],\n    [\n        518,\n        481,\n        444,\n        443,\n        479,\n        517\n    ],\n    [\n        519,\n        482,\n        445,\n        444,\n        480,\n        518\n    ],\n    [\n        520,\n        483,\n        446,\n        445,\n        481,\n        519\n    ],\n    [\n        521,\n        484,\n        447,\n        446,\n        482,\n        520\n    ],\n    [\n        522,\n        485,\n        448,\n        447,\n        483,\n        521\n    ],\n    [\n        523,\n        486,\n        449,\n        448,\n        484,\n        522\n    ],\n    [\n        524,\n        487,\n        450,\n        449,\n        485,\n        523\n    ],\n    [\n        525,\n        488,\n        451,\n        450,\n        486,\n        524\n    ],\n    [\n        526,\n        489,\n        452,\n        451,\n        487,\n        525\n    ],\n    [\n        527,\n        490,\n        453,\n        452,\n        488,\n        526\n    ],\n    [\n        528,\n        491,\n        454,\n        453,\n        489,\n        527\n    ],\n    [\n        529,\n        492,\n        455,\n        454,\n        490,\n        528\n    ],\n    [\n        530,\n        455,\n        491,\n        529\n    ],\n    [\n        532,\n        494,\n        456,\n        531\n    ],\n    [\n        533,\n        495,\n        457,\n        456,\n        493,\n        532\n    ],\n    [\n        534,\n        496,\n        458,\n        457,\n        494,\n        533\n    ],\n    [\n        535,\n        497,\n        459,\n        458,\n        495,\n        534\n    ],\n    [\n        536,\n        498,\n        460,\n        459,\n        496,\n        535\n    ],\n    [\n        537,\n        499,\n        461,\n        460,\n        497,\n        536\n    ],\n    [\n        538,\n        500,\n        462,\n        461,\n        498,\n        537\n    ],\n    [\n        539,\n        501,\n        463,\n        462,\n        499,\n        538\n    ],\n    [\n        540,\n        502,\n        464,\n        463,\n        500,\n        539\n    ],\n    [\n        541,\n        503,\n        465,\n        464,\n        501,\n        540\n    ],\n    [\n        542,\n        504,\n        466,\n        465,\n        502,\n        541\n    ],\n    [\n        543,\n        505,\n        467,\n        466,\n        503,\n        542\n    ],\n    [\n        544,\n        506,\n        468,\n        467,\n        504,\n        543\n    ],\n    [\n        545,\n        507,\n        469,\n        468,\n        505,\n        544\n    ],\n    [\n        546,\n        508,\n        470,\n        469,\n        506,\n        545\n    ],\n    [\n        547,\n        509,\n        471,\n        470,\n        507,\n        546\n    ],\n    [\n        548,\n        510,\n        472,\n        471,\n        508,\n        547\n    ],\n    [\n        549,\n        511,\n        473,\n        472,\n        509,\n        548\n    ],\n    [\n        550,\n        512,\n        474,\n        473,\n        510,\n        549\n    ],\n    [\n        551,\n        513,\n        475,\n        474,\n        511,\n        550\n    ],\n    [\n        552,\n        514,\n        476,\n        475,\n        512,\n        551\n    ],\n    [\n        553,\n        515,\n        477,\n        476,\n        513,\n        552\n    ],\n    [\n        554,\n        516,\n        478,\n        477,\n        514,\n        553\n    ],\n    [\n        555,\n        517,\n        479,\n        478,\n        515,\n        554\n    ],\n    [\n        556,\n        518,\n        480,\n        479,\n        516,\n        555\n    ],\n    [\n        557,\n        519,\n        481,\n        480,\n        517,\n        556\n    ],\n    [\n        558,\n        520,\n        482,\n        481,\n        518,\n        557\n    ],\n    [\n        559,\n        521,\n        483,\n        482,\n        519,\n        558\n    ],\n    [\n        560,\n        522,\n        484,\n        483,\n        520,\n        559\n    ],\n    [\n        561,\n        523,\n        485,\n        484,\n        521,\n        560\n    ],\n    [\n        562,\n        524,\n        486,\n        485,\n        522,\n        561\n    ],\n    [\n        563,\n        525,\n        487,\n        486,\n        523,\n        562\n    ],\n    [\n        564,\n        526,\n        488,\n        487,\n        524,\n        563\n    ],\n    [\n        565,\n        527,\n        489,\n        488,\n        525,\n        564\n    ],\n    [\n        566,\n        528,\n        490,\n        489,\n        526,\n        565\n    ],\n    [\n        567,\n        529,\n        491,\n        490,\n        527,\n        566\n    ],\n    [\n        568,\n        530,\n        492,\n        491,\n        528,\n        567\n    ],\n    [\n        569,\n        492,\n        529,\n        568\n    ],\n    [\n        571,\n        532,\n        493,\n        570\n    ],\n    [\n        572,\n        533,\n        494,\n        493,\n        531,\n        571\n    ],\n    [\n        573,\n        534,\n        495,\n        494,\n        532,\n        572\n    ],\n    [\n        574,\n        535,\n        496,\n        495,\n        533,\n        573\n    ],\n    [\n        575,\n        536,\n        497,\n        496,\n        534,\n        574\n    ],\n    [\n        576,\n        537,\n        498,\n        497,\n        535,\n        575\n    ],\n    [\n        577,\n        538,\n        499,\n        498,\n        536,\n        576\n    ],\n    [\n        578,\n        539,\n        500,\n        499,\n        537,\n        577\n    ],\n    [\n        579,\n        540,\n        501,\n        500,\n        538,\n        578\n    ],\n    [\n        580,\n        541,\n        502,\n        501,\n        539,\n        579\n    ],\n    [\n        581,\n        542,\n        503,\n        502,\n        540,\n        580\n    ],\n    [\n        582,\n        543,\n        504,\n        503,\n        541,\n        581\n    ],\n    [\n        583,\n        544,\n        505,\n        504,\n        542,\n        582\n    ],\n    [\n        584,\n        545,\n        506,\n        505,\n        543,\n        583\n    ],\n    [\n        585,\n        546,\n        507,\n        506,\n        544,\n        584\n    ],\n    [\n        586,\n        547,\n        508,\n        507,\n        545,\n        585\n    ],\n    [\n        587,\n        548,\n        509,\n        508,\n        546,\n        586\n    ],\n    [\n        588,\n        549,\n        510,\n        509,\n        547,\n        587\n    ],\n    [\n        589,\n        550,\n        511,\n        510,\n        548,\n        588\n    ],\n    [\n        590,\n        551,\n        512,\n        511,\n        549,\n        589\n    ],\n    [\n        591,\n        552,\n        513,\n        512,\n        550,\n        590\n    ],\n    [\n        592,\n        553,\n        514,\n        513,\n        551,\n        591\n    ],\n    [\n        593,\n        554,\n        515,\n        514,\n        552,\n        592\n    ],\n    [\n        594,\n        555,\n        516,\n        515,\n        553,\n        593\n    ],\n    [\n        595,\n        556,\n        517,\n        516,\n        554,\n        594\n    ],\n    [\n        596,\n        557,\n        518,\n        517,\n        555,\n        595\n    ],\n    [\n        597,\n        558,\n        519,\n        518,\n        556,\n        596\n    ],\n    [\n        598,\n        559,\n        520,\n        519,\n        557,\n        597\n    ],\n    [\n        599,\n        560,\n        521,\n        520,\n        558,\n        598\n    ],\n    [\n        600,\n        561,\n        522,\n        521,\n        559,\n        599\n    ],\n    [\n        601,\n        562,\n        523,\n        522,\n        560,\n        600\n    ],\n    [\n        602,\n        563,\n        524,\n        523,\n        561,\n        601\n    ],\n    [\n        603,\n        564,\n        525,\n        524,\n        562,\n        602\n    ],\n    [\n        604,\n        565,\n        526,\n        525,\n        563,\n        603\n    ],\n    [\n        605,\n        566,\n        527,\n        526,\n        564,\n        604\n    ],\n    [\n        606,\n        567,\n        528,\n        527,\n        565,\n        605\n    ],\n    [\n        607,\n        568,\n        529,\n        528,\n        566,\n        606\n    ],\n    [\n        608,\n        569,\n        530,\n        529,\n        567,\n        607\n    ],\n    [\n        609,\n        530,\n        568,\n        608\n    ],\n    [\n        611,\n        571,\n        531,\n        610\n    ],\n    [\n        612,\n        572,\n        532,\n        531,\n        570,\n        611\n    ],\n    [\n        613,\n        573,\n        533,\n        532,\n        571,\n        612\n    ],\n    [\n        614,\n        574,\n        534,\n        533,\n        572,\n        613\n    ],\n    [\n        615,\n        575,\n        535,\n        534,\n        573,\n        614\n    ],\n    [\n        616,\n        576,\n        536,\n        535,\n        574,\n        615\n    ],\n    [\n        617,\n        577,\n        537,\n        536,\n        575,\n        616\n    ],\n    [\n        618,\n        578,\n        538,\n        537,\n        576,\n        617\n    ],\n    [\n        619,\n        579,\n        539,\n        538,\n        577,\n        618\n    ],\n    [\n        620,\n        580,\n        540,\n        539,\n        578,\n        619\n    ],\n    [\n        621,\n        581,\n        541,\n        540,\n        579,\n        620\n    ],\n    [\n        622,\n        582,\n        542,\n        541,\n        580,\n        621\n    ],\n    [\n        623,\n        583,\n        543,\n        542,\n        581,\n        622\n    ],\n    [\n        624,\n        584,\n        544,\n        543,\n        582,\n        623\n    ],\n    [\n        625,\n        585,\n        545,\n        544,\n        583,\n        624\n    ],\n    [\n        626,\n        586,\n        546,\n        545,\n        584,\n        625\n    ],\n    [\n        627,\n        587,\n        547,\n        546,\n        585,\n        626\n    ],\n    [\n        628,\n        588,\n        548,\n        547,\n        586,\n        627\n    ],\n    [\n        629,\n        589,\n        549,\n        548,\n        587,\n        628\n    ],\n    [\n        630,\n        590,\n        550,\n        549,\n        588,\n        629\n    ],\n    [\n        631,\n        591,\n        551,\n        550,\n        589,\n        630\n    ],\n    [\n        632,\n        592,\n        552,\n        551,\n        590,\n        631\n    ],\n    [\n        633,\n        593,\n        553,\n        552,\n        591,\n        632\n    ],\n    [\n        634,\n        594,\n        554,\n        553,\n        592,\n        633\n    ],\n    [\n        635,\n        595,\n        555,\n        554,\n        593,\n        634\n    ],\n    [\n        636,\n        596,\n        556,\n        555,\n        594,\n        635\n    ],\n    [\n        637,\n        597,\n        557,\n        556,\n        595,\n        636\n    ],\n    [\n        638,\n        598,\n        558,\n        557,\n        596,\n        637\n    ],\n    [\n        639,\n        599,\n        559,\n        558,\n        597,\n        638\n    ],\n    [\n        640,\n        600,\n        560,\n        559,\n        598,\n        639\n    ],\n    [\n        641,\n        601,\n        561,\n        560,\n        599,\n        640\n    ],\n    [\n        642,\n        602,\n        562,\n        561,\n        600,\n        641\n    ],\n    [\n        643,\n        603,\n        563,\n        562,\n        601,\n        642\n    ],\n    [\n        644,\n        604,\n        564,\n        563,\n        602,\n        643\n    ],\n    [\n        645,\n        605,\n        565,\n        564,\n        603,\n        644\n    ],\n    [\n        646,\n        606,\n        566,\n        565,\n        604,\n        645\n    ],\n    [\n        647,\n        607,\n        567,\n        566,\n        605,\n        646\n    ],\n    [\n        648,\n        608,\n        568,\n        567,\n        606,\n        647\n    ],\n    [\n        649,\n        609,\n        569,\n        568,\n        607,\n        648\n    ],\n    [\n        650,\n        569,\n        608,\n        649\n    ],\n    [\n        651,\n        611,\n        570\n    ],\n    [\n        652,\n        612,\n        571,\n        570,\n        610,\n        651\n    ],\n    [\n        653,\n        613,\n        572,\n        571,\n        611,\n        652\n    ],\n    [\n        654,\n        614,\n        573,\n        572,\n        612,\n        653\n    ],\n    [\n        655,\n        615,\n        574,\n        573,\n        613,\n        654\n    ],\n    [\n        656,\n        616,\n        575,\n        574,\n        614,\n        655\n    ],\n    [\n        657,\n        617,\n        576,\n        575,\n        615,\n        656\n    ],\n    [\n        658,\n        618,\n        577,\n        576,\n        616,\n        657\n    ],\n    [\n        659,\n        619,\n        578,\n        577,\n        617,\n        658\n    ],\n    [\n        660,\n        620,\n        579,\n        578,\n        618,\n        659\n    ],\n    [\n        661,\n        621,\n        580,\n        579,\n        619,\n        660\n    ],\n    [\n        662,\n        622,\n        581,\n        580,\n        620,\n        661\n    ],\n    [\n        663,\n        623,\n        582,\n        581,\n        621,\n        662\n    ],\n    [\n        664,\n        624,\n        583,\n        582,\n        622,\n        663\n    ],\n    [\n        665,\n        625,\n        584,\n        583,\n        623,\n        664\n    ],\n    [\n        666,\n        626,\n        585,\n        584,\n        624,\n        665\n    ],\n    [\n        667,\n        627,\n        586,\n        585,\n        625,\n        666\n    ],\n    [\n        668,\n        628,\n        587,\n        586,\n        626,\n        667\n    ],\n    [\n        669,\n        629,\n        588,\n        587,\n        627,\n        668\n    ],\n    [\n        670,\n        630,\n        589,\n        588,\n        628,\n        669\n    ],\n    [\n        671,\n        631,\n        590,\n        589,\n        629,\n        670\n    ],\n    [\n        672,\n        632,\n        591,\n        590,\n        630,\n        671\n    ],\n    [\n        673,\n        633,\n        592,\n        591,\n        631,\n        672\n    ],\n    [\n        674,\n        634,\n        593,\n        592,\n        632,\n        673\n    ],\n    [\n        675,\n        635,\n        594,\n        593,\n        633,\n        674\n    ],\n    [\n        676,\n        636,\n        595,\n        594,\n        634,\n        675\n    ],\n    [\n        677,\n        637,\n        596,\n        595,\n        635,\n        676\n    ],\n    [\n        678,\n        638,\n        597,\n        596,\n        636,\n        677\n    ],\n    [\n        679,\n        639,\n        598,\n        597,\n        637,\n        678\n    ],\n    [\n        680,\n        640,\n        599,\n        598,\n        638,\n        679\n    ],\n    [\n        681,\n        641,\n        600,\n        599,\n        639,\n        680\n    ],\n    [\n        682,\n        642,\n        601,\n        600,\n        640,\n        681\n    ],\n    [\n        683,\n        643,\n        602,\n        601,\n        641,\n        682\n    ],\n    [\n        684,\n        644,\n        603,\n        602,\n        642,\n        683\n    ],\n    [\n        685,\n        645,\n        604,\n        603,\n        643,\n        684\n    ],\n    [\n        686,\n        646,\n        605,\n        604,\n        644,\n        685\n    ],\n    [\n        687,\n        647,\n        606,\n        605,\n        645,\n        686\n    ],\n    [\n        688,\n        648,\n        607,\n        606,\n        646,\n        687\n    ],\n    [\n        689,\n        649,\n        608,\n        607,\n        647,\n        688\n    ],\n    [\n        690,\n        650,\n        609,\n        608,\n        648,\n        689\n    ],\n    [\n        609,\n        649,\n        690\n    ],\n    [\n        691,\n        652,\n        611,\n        610\n    ],\n    [\n        692,\n        653,\n        612,\n        611,\n        651,\n        691\n    ],\n    [\n        693,\n        654,\n        613,\n        612,\n        652,\n        692\n    ],\n    [\n        694,\n        655,\n        614,\n        613,\n        653,\n        693\n    ],\n    [\n        695,\n        656,\n        615,\n        614,\n        654,\n        694\n    ],\n    [\n        696,\n        657,\n        616,\n        615,\n        655,\n        695\n    ],\n    [\n        697,\n        658,\n        617,\n        616,\n        656,\n        696\n    ],\n    [\n        698,\n        659,\n        618,\n        617,\n        657,\n        697\n    ],\n    [\n        699,\n        660,\n        619,\n        618,\n        658,\n        698\n    ],\n    [\n        700,\n        661,\n        620,\n        619,\n        659,\n        699\n    ],\n    [\n        701,\n        662,\n        621,\n        620,\n        660,\n        700\n    ],\n    [\n        702,\n        663,\n        622,\n        621,\n        661,\n        701\n    ],\n    [\n        703,\n        664,\n        623,\n        622,\n        662,\n        702\n    ],\n    [\n        704,\n        665,\n        624,\n        623,\n        663,\n        703\n    ],\n    [\n        705,\n        666,\n        625,\n        624,\n        664,\n        704\n    ],\n    [\n        706,\n        667,\n        626,\n        625,\n        665,\n        705\n    ],\n    [\n        707,\n        668,\n        627,\n        626,\n        666,\n        706\n    ],\n    [\n        708,\n        669,\n        628,\n        627,\n        667,\n        707\n    ],\n    [\n        709,\n        670,\n        629,\n        628,\n        668,\n        708\n    ],\n    [\n        710,\n        671,\n        630,\n        629,\n        669,\n        709\n    ],\n    [\n        711,\n        672,\n        631,\n        630,\n        670,\n        710\n    ],\n    [\n        712,\n        673,\n        632,\n        631,\n        671,\n        711\n    ],\n    [\n        713,\n        674,\n        633,\n        632,\n        672,\n        712\n    ],\n    [\n        714,\n        675,\n        634,\n        633,\n        673,\n        713\n    ],\n    [\n        715,\n        676,\n        635,\n        634,\n        674,\n        714\n    ],\n    [\n        716,\n        677,\n        636,\n        635,\n        675,\n        715\n    ],\n    [\n        717,\n        678,\n        637,\n        636,\n        676,\n        716\n    ],\n    [\n        718,\n        679,\n        638,\n        637,\n        677,\n        717\n    ],\n    [\n        719,\n        680,\n        639,\n        638,\n        678,\n        718\n    ],\n    [\n        720,\n        681,\n        640,\n        639,\n        679,\n        719\n    ],\n    [\n        721,\n        682,\n        641,\n        640,\n        680,\n        720\n    ],\n    [\n        722,\n        683,\n        642,\n        641,\n        681,\n        721\n    ],\n    [\n        723,\n        684,\n        643,\n        642,\n        682,\n        722\n    ],\n    [\n        724,\n        685,\n        644,\n        643,\n        683,\n        723\n    ],\n    [\n        725,\n        686,\n        645,\n        644,\n        684,\n        724\n    ],\n    [\n        726,\n        687,\n        646,\n        645,\n        685,\n        725\n    ],\n    [\n        727,\n        688,\n        647,\n        646,\n        686,\n        726\n    ],\n    [\n        728,\n        689,\n        648,\n        647,\n        687,\n        727\n    ],\n    [\n        729,\n        690,\n        649,\n        648,\n        688,\n        728\n    ],\n    [\n        650,\n        649,\n        689,\n        729\n    ],\n    [\n        730,\n        692,\n        652,\n        651\n    ],\n    [\n        731,\n        693,\n        653,\n        652,\n        691,\n        730\n    ],\n    [\n        732,\n        694,\n        654,\n        653,\n        692,\n        731\n    ],\n    [\n        733,\n        695,\n        655,\n        654,\n        693,\n        732\n    ],\n    [\n        734,\n        696,\n        656,\n        655,\n        694,\n        733\n    ],\n    [\n        735,\n        697,\n        657,\n        656,\n        695,\n        734\n    ],\n    [\n        736,\n        698,\n        658,\n        657,\n        696,\n        735\n    ],\n    [\n        737,\n        699,\n        659,\n        658,\n        697,\n        736\n    ],\n    [\n        738,\n        700,\n        660,\n        659,\n        698,\n        737\n    ],\n    [\n        739,\n        701,\n        661,\n        660,\n        699,\n        738\n    ],\n    [\n        740,\n        702,\n        662,\n        661,\n        700,\n        739\n    ],\n    [\n        741,\n        703,\n        663,\n        662,\n        701,\n        740\n    ],\n    [\n        742,\n        704,\n        664,\n        663,\n        702,\n        741\n    ],\n    [\n        743,\n        705,\n        665,\n        664,\n        703,\n        742\n    ],\n    [\n        744,\n        706,\n        666,\n        665,\n        704,\n        743\n    ],\n    [\n        745,\n        707,\n        667,\n        666,\n        705,\n        744\n    ],\n    [\n        746,\n        708,\n        668,\n        667,\n        706,\n        745\n    ],\n    [\n        747,\n        709,\n        669,\n        668,\n        707,\n        746\n    ],\n    [\n        748,\n        710,\n        670,\n        669,\n        708,\n        747\n    ],\n    [\n        749,\n        711,\n        671,\n        670,\n        709,\n        748\n    ],\n    [\n        750,\n        712,\n        672,\n        671,\n        710,\n        749\n    ],\n    [\n        751,\n        713,\n        673,\n        672,\n        711,\n        750\n    ],\n    [\n        752,\n        714,\n        674,\n        673,\n        712,\n        751\n    ],\n    [\n        753,\n        715,\n        675,\n        674,\n        713,\n        752\n    ],\n    [\n        754,\n        716,\n        676,\n        675,\n        714,\n        753\n    ],\n    [\n        755,\n        717,\n        677,\n        676,\n        715,\n        754\n    ],\n    [\n        756,\n        718,\n        678,\n        677,\n        716,\n        755\n    ],\n    [\n        757,\n        719,\n        679,\n        678,\n        717,\n        756\n    ],\n    [\n        758,\n        720,\n        680,\n        679,\n        718,\n        757\n    ],\n    [\n        759,\n        721,\n        681,\n        680,\n        719,\n        758\n    ],\n    [\n        760,\n        722,\n        682,\n        681,\n        720,\n        759\n    ],\n    [\n        761,\n        723,\n        683,\n        682,\n        721,\n        760\n    ],\n    [\n        762,\n        724,\n        684,\n        683,\n        722,\n        761\n    ],\n    [\n        763,\n        725,\n        685,\n        684,\n        723,\n        762\n    ],\n    [\n        764,\n        726,\n        686,\n        685,\n        724,\n        763\n    ],\n    [\n        765,\n        727,\n        687,\n        686,\n        725,\n        764\n    ],\n    [\n        766,\n        728,\n        688,\n        687,\n        726,\n        765\n    ],\n    [\n        767,\n        729,\n        689,\n        688,\n        727,\n        766\n    ],\n    [\n        690,\n        689,\n        728,\n        767\n    ],\n    [\n        768,\n        731,\n        692,\n        691\n    ],\n    [\n        769,\n        732,\n        693,\n        692,\n        730,\n        768\n    ],\n    [\n        770,\n        733,\n        694,\n        693,\n        731,\n        769\n    ],\n    [\n        771,\n        734,\n        695,\n        694,\n        732,\n        770\n    ],\n    [\n        772,\n        735,\n        696,\n        695,\n        733,\n        771\n    ],\n    [\n        773,\n        736,\n        697,\n        696,\n        734,\n        772\n    ],\n    [\n        774,\n        737,\n        698,\n        697,\n        735,\n        773\n    ],\n    [\n        775,\n        738,\n        699,\n        698,\n        736,\n        774\n    ],\n    [\n        776,\n        739,\n        700,\n        699,\n        737,\n        775\n    ],\n    [\n        777,\n        740,\n        701,\n        700,\n        738,\n        776\n    ],\n    [\n        778,\n        741,\n        702,\n        701,\n        739,\n        777\n    ],\n    [\n        779,\n        742,\n        703,\n        702,\n        740,\n        778\n    ],\n    [\n        780,\n        743,\n        704,\n        703,\n        741,\n        779\n    ],\n    [\n        781,\n        744,\n        705,\n        704,\n        742,\n        780\n    ],\n    [\n        782,\n        745,\n        706,\n        705,\n        743,\n        781\n    ],\n    [\n        783,\n        746,\n        707,\n        706,\n        744,\n        782\n    ],\n    [\n        784,\n        747,\n        708,\n        707,\n        745,\n        783\n    ],\n    [\n        785,\n        748,\n        709,\n        708,\n        746,\n        784\n    ],\n    [\n        786,\n        749,\n        710,\n        709,\n        747,\n        785\n    ],\n    [\n        787,\n        750,\n        711,\n        710,\n        748,\n        786\n    ],\n    [\n        788,\n        751,\n        712,\n        711,\n        749,\n        787\n    ],\n    [\n        789,\n        752,\n        713,\n        712,\n        750,\n        788\n    ],\n    [\n        790,\n        753,\n        714,\n        713,\n        751,\n        789\n    ],\n    [\n        791,\n        754,\n        715,\n        714,\n        752,\n        790\n    ],\n    [\n        792,\n        755,\n        716,\n        715,\n        753,\n        791\n    ],\n    [\n        793,\n        756,\n        717,\n        716,\n        754,\n        792\n    ],\n    [\n        794,\n        757,\n        718,\n        717,\n        755,\n        793\n    ],\n    [\n        795,\n        758,\n        719,\n        718,\n        756,\n        794\n    ],\n    [\n        796,\n        759,\n        720,\n        719,\n        757,\n        795\n    ],\n    [\n        797,\n        760,\n        721,\n        720,\n        758,\n        796\n    ],\n    [\n        798,\n        761,\n        722,\n        721,\n        759,\n        797\n    ],\n    [\n        799,\n        762,\n        723,\n        722,\n        760,\n        798\n    ],\n    [\n        800,\n        763,\n        724,\n        723,\n        761,\n        799\n    ],\n    [\n        801,\n        764,\n        725,\n        724,\n        762,\n        800\n    ],\n    [\n        802,\n        765,\n        726,\n        725,\n        763,\n        801\n    ],\n    [\n        803,\n        766,\n        727,\n        726,\n        764,\n        802\n    ],\n    [\n        804,\n        767,\n        728,\n        727,\n        765,\n        803\n    ],\n    [\n        729,\n        728,\n        766,\n        804\n    ],\n    [\n        805,\n        769,\n        731,\n        730\n    ],\n    [\n        806,\n        770,\n        732,\n        731,\n        768,\n        805\n    ],\n    [\n        807,\n        771,\n        733,\n        732,\n        769,\n        806\n    ],\n    [\n        808,\n        772,\n        734,\n        733,\n        770,\n        807\n    ],\n    [\n        809,\n        773,\n        735,\n        734,\n        771,\n        808\n    ],\n    [\n        810,\n        774,\n        736,\n        735,\n        772,\n        809\n    ],\n    [\n        811,\n        775,\n        737,\n        736,\n        773,\n        810\n    ],\n    [\n        812,\n        776,\n        738,\n        737,\n        774,\n        811\n    ],\n    [\n        813,\n        777,\n        739,\n        738,\n        775,\n        812\n    ],\n    [\n        814,\n        778,\n        740,\n        739,\n        776,\n        813\n    ],\n    [\n        815,\n        779,\n        741,\n        740,\n        777,\n        814\n    ],\n    [\n        816,\n        780,\n        742,\n        741,\n        778,\n        815\n    ],\n    [\n        817,\n        781,\n        743,\n        742,\n        779,\n        816\n    ],\n    [\n        818,\n        782,\n        744,\n        743,\n        780,\n        817\n    ],\n    [\n        819,\n        783,\n        745,\n        744,\n        781,\n        818\n    ],\n    [\n        820,\n        784,\n        746,\n        745,\n        782,\n        819\n    ],\n    [\n        821,\n        785,\n        747,\n        746,\n        783,\n        820\n    ],\n    [\n        822,\n        786,\n        748,\n        747,\n        784,\n        821\n    ],\n    [\n        823,\n        787,\n        749,\n        748,\n        785,\n        822\n    ],\n    [\n        824,\n        788,\n        750,\n        749,\n        786,\n        823\n    ],\n    [\n        825,\n        789,\n        751,\n        750,\n        787,\n        824\n    ],\n    [\n        826,\n        790,\n        752,\n        751,\n        788,\n        825\n    ],\n    [\n        827,\n        791,\n        753,\n        752,\n        789,\n        826\n    ],\n    [\n        828,\n        792,\n        754,\n        753,\n        790,\n        827\n    ],\n    [\n        829,\n        793,\n        755,\n        754,\n        791,\n        828\n    ],\n    [\n        830,\n        794,\n        756,\n        755,\n        792,\n        829\n    ],\n    [\n        831,\n        795,\n        757,\n        756,\n        793,\n        830\n    ],\n    [\n        832,\n        796,\n        758,\n        757,\n        794,\n        831\n    ],\n    [\n        833,\n        797,\n        759,\n        758,\n        795,\n        832\n    ],\n    [\n        834,\n        798,\n        760,\n        759,\n        796,\n        833\n    ],\n    [\n        835,\n        799,\n        761,\n        760,\n        797,\n        834\n    ],\n    [\n        836,\n        800,\n        762,\n        761,\n        798,\n        835\n    ],\n    [\n        837,\n        801,\n        763,\n        762,\n        799,\n        836\n    ],\n    [\n        838,\n        802,\n        764,\n        763,\n        800,\n        837\n    ],\n    [\n        839,\n        803,\n        765,\n        764,\n        801,\n        838\n    ],\n    [\n        840,\n        804,\n        766,\n        765,\n        802,\n        839\n    ],\n    [\n        767,\n        766,\n        803,\n        840\n    ],\n    [\n        841,\n        806,\n        769,\n        768\n    ],\n    [\n        842,\n        807,\n        770,\n        769,\n        805,\n        841\n    ],\n    [\n        843,\n        808,\n        771,\n        770,\n        806,\n        842\n    ],\n    [\n        844,\n        809,\n        772,\n        771,\n        807,\n        843\n    ],\n    [\n        845,\n        810,\n        773,\n        772,\n        808,\n        844\n    ],\n    [\n        846,\n        811,\n        774,\n        773,\n        809,\n        845\n    ],\n    [\n        847,\n        812,\n        775,\n        774,\n        810,\n        846\n    ],\n    [\n        848,\n        813,\n        776,\n        775,\n        811,\n        847\n    ],\n    [\n        849,\n        814,\n        777,\n        776,\n        812,\n        848\n    ],\n    [\n        850,\n        815,\n        778,\n        777,\n        813,\n        849\n    ],\n    [\n        851,\n        816,\n        779,\n        778,\n        814,\n        850\n    ],\n    [\n        852,\n        817,\n        780,\n        779,\n        815,\n        851\n    ],\n    [\n        853,\n        818,\n        781,\n        780,\n        816,\n        852\n    ],\n    [\n        854,\n        819,\n        782,\n        781,\n        817,\n        853\n    ],\n    [\n        855,\n        820,\n        783,\n        782,\n        818,\n        854\n    ],\n    [\n        856,\n        821,\n        784,\n        783,\n        819,\n        855\n    ],\n    [\n        857,\n        822,\n        785,\n        784,\n        820,\n        856\n    ],\n    [\n        858,\n        823,\n        786,\n        785,\n        821,\n        857\n    ],\n    [\n        859,\n        824,\n        787,\n        786,\n        822,\n        858\n    ],\n    [\n        860,\n        825,\n        788,\n        787,\n        823,\n        859\n    ],\n    [\n        861,\n        826,\n        789,\n        788,\n        824,\n        860\n    ],\n    [\n        862,\n        827,\n        790,\n        789,\n        825,\n        861\n    ],\n    [\n        863,\n        828,\n        791,\n        790,\n        826,\n        862\n    ],\n    [\n        864,\n        829,\n        792,\n        791,\n        827,\n        863\n    ],\n    [\n        865,\n        830,\n        793,\n        792,\n        828,\n        864\n    ],\n    [\n        866,\n        831,\n        794,\n        793,\n        829,\n        865\n    ],\n    [\n        867,\n        832,\n        795,\n        794,\n        830,\n        866\n    ],\n    [\n        868,\n        833,\n        796,\n        795,\n        831,\n        867\n    ],\n    [\n        869,\n        834,\n        797,\n        796,\n        832,\n        868\n    ],\n    [\n        870,\n        835,\n        798,\n        797,\n        833,\n        869\n    ],\n    [\n        871,\n        836,\n        799,\n        798,\n        834,\n        870\n    ],\n    [\n        872,\n        837,\n        800,\n        799,\n        835,\n        871\n    ],\n    [\n        873,\n        838,\n        801,\n        800,\n        836,\n        872\n    ],\n    [\n        874,\n        839,\n        802,\n        801,\n        837,\n        873\n    ],\n    [\n        875,\n        840,\n        803,\n        802,\n        838,\n        874\n    ],\n    [\n        804,\n        803,\n        839,\n        875\n    ],\n    [\n        876,\n        842,\n        806,\n        805\n    ],\n    [\n        877,\n        843,\n        807,\n        806,\n        841,\n        876\n    ],\n    [\n        878,\n        844,\n        808,\n        807,\n        842,\n        877\n    ],\n    [\n        879,\n        845,\n        809,\n        808,\n        843,\n        878\n    ],\n    [\n        880,\n        846,\n        810,\n        809,\n        844,\n        879\n    ],\n    [\n        881,\n        847,\n        811,\n        810,\n        845,\n        880\n    ],\n    [\n        882,\n        848,\n        812,\n        811,\n        846,\n        881\n    ],\n    [\n        883,\n        849,\n        813,\n        812,\n        847,\n        882\n    ],\n    [\n        884,\n        850,\n        814,\n        813,\n        848,\n        883\n    ],\n    [\n        885,\n        851,\n        815,\n        814,\n        849,\n        884\n    ],\n    [\n        886,\n        852,\n        816,\n        815,\n        850,\n        885\n    ],\n    [\n        887,\n        853,\n        817,\n        816,\n        851,\n        886\n    ],\n    [\n        888,\n        854,\n        818,\n        817,\n        852,\n        887\n    ],\n    [\n        889,\n        855,\n        819,\n        818,\n        853,\n        888\n    ],\n    [\n        890,\n        856,\n        820,\n        819,\n        854,\n        889\n    ],\n    [\n        891,\n        857,\n        821,\n        820,\n        855,\n        890\n    ],\n    [\n        892,\n        858,\n        822,\n        821,\n        856,\n        891\n    ],\n    [\n        893,\n        859,\n        823,\n        822,\n        857,\n        892\n    ],\n    [\n        894,\n        860,\n        824,\n        823,\n        858,\n        893\n    ],\n    [\n        895,\n        861,\n        825,\n        824,\n        859,\n        894\n    ],\n    [\n        896,\n        862,\n        826,\n        825,\n        860,\n        895\n    ],\n    [\n        897,\n        863,\n        827,\n        826,\n        861,\n        896\n    ],\n    [\n        898,\n        864,\n        828,\n        827,\n        862,\n        897\n    ],\n    [\n        899,\n        865,\n        829,\n        828,\n        863,\n        898\n    ],\n    [\n        900,\n        866,\n        830,\n        829,\n        864,\n        899\n    ],\n    [\n        901,\n        867,\n        831,\n        830,\n        865,\n        900\n    ],\n    [\n        902,\n        868,\n        832,\n        831,\n        866,\n        901\n    ],\n    [\n        903,\n        869,\n        833,\n        832,\n        867,\n        902\n    ],\n    [\n        904,\n        870,\n        834,\n        833,\n        868,\n        903\n    ],\n    [\n        905,\n        871,\n        835,\n        834,\n        869,\n        904\n    ],\n    [\n        906,\n        872,\n        836,\n        835,\n        870,\n        905\n    ],\n    [\n        907,\n        873,\n        837,\n        836,\n        871,\n        906\n    ],\n    [\n        908,\n        874,\n        838,\n        837,\n        872,\n        907\n    ],\n    [\n        909,\n        875,\n        839,\n        838,\n        873,\n        908\n    ],\n    [\n        840,\n        839,\n        874,\n        909\n    ],\n    [\n        910,\n        877,\n        842,\n        841\n    ],\n    [\n        911,\n        878,\n        843,\n        842,\n        876,\n        910\n    ],\n    [\n        912,\n        879,\n        844,\n        843,\n        877,\n        911\n    ],\n    [\n        913,\n        880,\n        845,\n        844,\n        878,\n        912\n    ],\n    [\n        914,\n        881,\n        846,\n        845,\n        879,\n        913\n    ],\n    [\n        915,\n        882,\n        847,\n        846,\n        880,\n        914\n    ],\n    [\n        916,\n        883,\n        848,\n        847,\n        881,\n        915\n    ],\n    [\n        917,\n        884,\n        849,\n        848,\n        882,\n        916\n    ],\n    [\n        918,\n        885,\n        850,\n        849,\n        883,\n        917\n    ],\n    [\n        919,\n        886,\n        851,\n        850,\n        884,\n        918\n    ],\n    [\n        920,\n        887,\n        852,\n        851,\n        885,\n        919\n    ],\n    [\n        921,\n        888,\n        853,\n        852,\n        886,\n        920\n    ],\n    [\n        922,\n        889,\n        854,\n        853,\n        887,\n        921\n    ],\n    [\n        923,\n        890,\n        855,\n        854,\n        888,\n        922\n    ],\n    [\n        924,\n        891,\n        856,\n        855,\n        889,\n        923\n    ],\n    [\n        925,\n        892,\n        857,\n        856,\n        890,\n        924\n    ],\n    [\n        926,\n        893,\n        858,\n        857,\n        891,\n        925\n    ],\n    [\n        927,\n        894,\n        859,\n        858,\n        892,\n        926\n    ],\n    [\n        928,\n        895,\n        860,\n        859,\n        893,\n        927\n    ],\n    [\n        929,\n        896,\n        861,\n        860,\n        894,\n        928\n    ],\n    [\n        930,\n        897,\n        862,\n        861,\n        895,\n        929\n    ],\n    [\n        931,\n        898,\n        863,\n        862,\n        896,\n        930\n    ],\n    [\n        932,\n        899,\n        864,\n        863,\n        897,\n        931\n    ],\n    [\n        933,\n        900,\n        865,\n        864,\n        898,\n        932\n    ],\n    [\n        934,\n        901,\n        866,\n        865,\n        899,\n        933\n    ],\n    [\n        935,\n        902,\n        867,\n        866,\n        900,\n        934\n    ],\n    [\n        936,\n        903,\n        868,\n        867,\n        901,\n        935\n    ],\n    [\n        937,\n        904,\n        869,\n        868,\n        902,\n        936\n    ],\n    [\n        938,\n        905,\n        870,\n        869,\n        903,\n        937\n    ],\n    [\n        939,\n        906,\n        871,\n        870,\n        904,\n        938\n    ],\n    [\n        940,\n        907,\n        872,\n        871,\n        905,\n        939\n    ],\n    [\n        941,\n        908,\n        873,\n        872,\n        906,\n        940\n    ],\n    [\n        942,\n        909,\n        874,\n        873,\n        907,\n        941\n    ],\n    [\n        875,\n        874,\n        908,\n        942\n    ],\n    [\n        943,\n        911,\n        877,\n        876\n    ],\n    [\n        944,\n        912,\n        878,\n        877,\n        910,\n        943\n    ],\n    [\n        945,\n        913,\n        879,\n        878,\n        911,\n        944\n    ],\n    [\n        946,\n        914,\n        880,\n        879,\n        912,\n        945\n    ],\n    [\n        947,\n        915,\n        881,\n        880,\n        913,\n        946\n    ],\n    [\n        948,\n        916,\n        882,\n        881,\n        914,\n        947\n    ],\n    [\n        949,\n        917,\n        883,\n        882,\n        915,\n        948\n    ],\n    [\n        950,\n        918,\n        884,\n        883,\n        916,\n        949\n    ],\n    [\n        951,\n        919,\n        885,\n        884,\n        917,\n        950\n    ],\n    [\n        952,\n        920,\n        886,\n        885,\n        918,\n        951\n    ],\n    [\n        953,\n        921,\n        887,\n        886,\n        919,\n        952\n    ],\n    [\n        954,\n        922,\n        888,\n        887,\n        920,\n        953\n    ],\n    [\n        955,\n        923,\n        889,\n        888,\n        921,\n        954\n    ],\n    [\n        956,\n        924,\n        890,\n        889,\n        922,\n        955\n    ],\n    [\n        957,\n        925,\n        891,\n        890,\n        923,\n        956\n    ],\n    [\n        958,\n        926,\n        892,\n        891,\n        924,\n        957\n    ],\n    [\n        959,\n        927,\n        893,\n        892,\n        925,\n        958\n    ],\n    [\n        960,\n        928,\n        894,\n        893,\n        926,\n        959\n    ],\n    [\n        961,\n        929,\n        895,\n        894,\n        927,\n        960\n    ],\n    [\n        962,\n        930,\n        896,\n        895,\n        928,\n        961\n    ],\n    [\n        963,\n        931,\n        897,\n        896,\n        929,\n        962\n    ],\n    [\n        964,\n        932,\n        898,\n        897,\n        930,\n        963\n    ],\n    [\n        965,\n        933,\n        899,\n        898,\n        931,\n        964\n    ],\n    [\n        966,\n        934,\n        900,\n        899,\n        932,\n        965\n    ],\n    [\n        967,\n        935,\n        901,\n        900,\n        933,\n        966\n    ],\n    [\n        968,\n        936,\n        902,\n        901,\n        934,\n        967\n    ],\n    [\n        969,\n        937,\n        903,\n        902,\n        935,\n        968\n    ],\n    [\n        970,\n        938,\n        904,\n        903,\n        936,\n        969\n    ],\n    [\n        971,\n        939,\n        905,\n        904,\n        937,\n        970\n    ],\n    [\n        972,\n        940,\n        906,\n        905,\n        938,\n        971\n    ],\n    [\n        973,\n        941,\n        907,\n        906,\n        939,\n        972\n    ],\n    [\n        974,\n        942,\n        908,\n        907,\n        940,\n        973\n    ],\n    [\n        909,\n        908,\n        941,\n        974\n    ],\n    [\n        975,\n        944,\n        911,\n        910\n    ],\n    [\n        976,\n        945,\n        912,\n        911,\n        943,\n        975\n    ],\n    [\n        977,\n        946,\n        913,\n        912,\n        944,\n        976\n    ],\n    [\n        978,\n        947,\n        914,\n        913,\n        945,\n        977\n    ],\n    [\n        979,\n        948,\n        915,\n        914,\n        946,\n        978\n    ],\n    [\n        980,\n        949,\n        916,\n        915,\n        947,\n        979\n    ],\n    [\n        981,\n        950,\n        917,\n        916,\n        948,\n        980\n    ],\n    [\n        982,\n        951,\n        918,\n        917,\n        949,\n        981\n    ],\n    [\n        983,\n        952,\n        919,\n        918,\n        950,\n        982\n    ],\n    [\n        984,\n        953,\n        920,\n        919,\n        951,\n        983\n    ],\n    [\n        985,\n        954,\n        921,\n        920,\n        952,\n        984\n    ],\n    [\n        986,\n        955,\n        922,\n        921,\n        953,\n        985\n    ],\n    [\n        987,\n        956,\n        923,\n        922,\n        954,\n        986\n    ],\n    [\n        988,\n        957,\n        924,\n        923,\n        955,\n        987\n    ],\n    [\n        989,\n        958,\n        925,\n        924,\n        956,\n        988\n    ],\n    [\n        990,\n        959,\n        926,\n        925,\n        957,\n        989\n    ],\n    [\n        991,\n        960,\n        927,\n        926,\n        958,\n        990\n    ],\n    [\n        992,\n        961,\n        928,\n        927,\n        959,\n        991\n    ],\n    [\n        993,\n        962,\n        929,\n        928,\n        960,\n        992\n    ],\n    [\n        994,\n        963,\n        930,\n        929,\n        961,\n        993\n    ],\n    [\n        995,\n        964,\n        931,\n        930,\n        962,\n        994\n    ],\n    [\n        996,\n        965,\n        932,\n        931,\n        963,\n        995\n    ],\n    [\n        997,\n        966,\n        933,\n        932,\n        964,\n        996\n    ],\n    [\n        998,\n        967,\n        934,\n        933,\n        965,\n        997\n    ],\n    [\n        999,\n        968,\n        935,\n        934,\n        966,\n        998\n    ],\n    [\n        1000,\n        969,\n        936,\n        935,\n        967,\n        999\n    ],\n    [\n        1001,\n        970,\n        937,\n        936,\n        968,\n        1000\n    ],\n    [\n        1002,\n        971,\n        938,\n        937,\n        969,\n        1001\n    ],\n    [\n        1003,\n        972,\n        939,\n        938,\n        970,\n        1002\n    ],\n    [\n        1004,\n        973,\n        940,\n        939,\n        971,\n        1003\n    ],\n    [\n        1005,\n        974,\n        941,\n        940,\n        972,\n        1004\n    ],\n    [\n        942,\n        941,\n        973,\n        1005\n    ],\n    [\n        1006,\n        976,\n        944,\n        943\n    ],\n    [\n        1007,\n        977,\n        945,\n        944,\n        975,\n        1006\n    ],\n    [\n        1008,\n        978,\n        946,\n        945,\n        976,\n        1007\n    ],\n    [\n        1009,\n        979,\n        947,\n        946,\n        977,\n        1008\n    ],\n    [\n        1010,\n        980,\n        948,\n        947,\n        978,\n        1009\n    ],\n    [\n        1011,\n        981,\n        949,\n        948,\n        979,\n        1010\n    ],\n    [\n        1012,\n        982,\n        950,\n        949,\n        980,\n        1011\n    ],\n    [\n        1013,\n        983,\n        951,\n        950,\n        981,\n        1012\n    ],\n    [\n        1014,\n        984,\n        952,\n        951,\n        982,\n        1013\n    ],\n    [\n        1015,\n        985,\n        953,\n        952,\n        983,\n        1014\n    ],\n    [\n        1016,\n        986,\n        954,\n        953,\n        984,\n        1015\n    ],\n    [\n        1017,\n        987,\n        955,\n        954,\n        985,\n        1016\n    ],\n    [\n        1018,\n        988,\n        956,\n        955,\n        986,\n        1017\n    ],\n    [\n        1019,\n        989,\n        957,\n        956,\n        987,\n        1018\n    ],\n    [\n        1020,\n        990,\n        958,\n        957,\n        988,\n        1019\n    ],\n    [\n        1021,\n        991,\n        959,\n        958,\n        989,\n        1020\n    ],\n    [\n        1022,\n        992,\n        960,\n        959,\n        990,\n        1021\n    ],\n    [\n        1023,\n        993,\n        961,\n        960,\n        991,\n        1022\n    ],\n    [\n        1024,\n        994,\n        962,\n        961,\n        992,\n        1023\n    ],\n    [\n        1025,\n        995,\n        963,\n        962,\n        993,\n        1024\n    ],\n    [\n        1026,\n        996,\n        964,\n        963,\n        994,\n        1025\n    ],\n    [\n        1027,\n        997,\n        965,\n        964,\n        995,\n        1026\n    ],\n    [\n        1028,\n        998,\n        966,\n        965,\n        996,\n        1027\n    ],\n    [\n        1029,\n        999,\n        967,\n        966,\n        997,\n        1028\n    ],\n    [\n        1030,\n        1000,\n        968,\n        967,\n        998,\n        1029\n    ],\n    [\n        1031,\n        1001,\n        969,\n        968,\n        999,\n        1030\n    ],\n    [\n        1032,\n        1002,\n        970,\n        969,\n        1000,\n        1031\n    ],\n    [\n        1033,\n        1003,\n        971,\n        970,\n        1001,\n        1032\n    ],\n    [\n        1034,\n        1004,\n        972,\n        971,\n        1002,\n        1033\n    ],\n    [\n        1035,\n        1005,\n        973,\n        972,\n        1003,\n        1034\n    ],\n    [\n        974,\n        973,\n        1004,\n        1035\n    ],\n    [\n        1036,\n        1007,\n        976,\n        975\n    ],\n    [\n        1037,\n        1008,\n        977,\n        976,\n        1006,\n        1036\n    ],\n    [\n        1038,\n        1009,\n        978,\n        977,\n        1007,\n        1037\n    ],\n    [\n        1039,\n        1010,\n        979,\n        978,\n        1008,\n        1038\n    ],\n    [\n        1040,\n        1011,\n        980,\n        979,\n        1009,\n        1039\n    ],\n    [\n        1041,\n        1012,\n        981,\n        980,\n        1010,\n        1040\n    ],\n    [\n        1042,\n        1013,\n        982,\n        981,\n        1011,\n        1041\n    ],\n    [\n        1043,\n        1014,\n        983,\n        982,\n        1012,\n        1042\n    ],\n    [\n        1044,\n        1015,\n        984,\n        983,\n        1013,\n        1043\n    ],\n    [\n        1045,\n        1016,\n        985,\n        984,\n        1014,\n        1044\n    ],\n    [\n        1046,\n        1017,\n        986,\n        985,\n        1015,\n        1045\n    ],\n    [\n        1047,\n        1018,\n        987,\n        986,\n        1016,\n        1046\n    ],\n    [\n        1048,\n        1019,\n        988,\n        987,\n        1017,\n        1047\n    ],\n    [\n        1049,\n        1020,\n        989,\n        988,\n        1018,\n        1048\n    ],\n    [\n        1050,\n        1021,\n        990,\n        989,\n        1019,\n        1049\n    ],\n    [\n        1051,\n        1022,\n        991,\n        990,\n        1020,\n        1050\n    ],\n    [\n        1052,\n        1023,\n        992,\n        991,\n        1021,\n        1051\n    ],\n    [\n        1053,\n        1024,\n        993,\n        992,\n        1022,\n        1052\n    ],\n    [\n        1054,\n        1025,\n        994,\n        993,\n        1023,\n        1053\n    ],\n    [\n        1055,\n        1026,\n        995,\n        994,\n        1024,\n        1054\n    ],\n    [\n        1056,\n        1027,\n        996,\n        995,\n        1025,\n        1055\n    ],\n    [\n        1057,\n        1028,\n        997,\n        996,\n        1026,\n        1056\n    ],\n    [\n        1058,\n        1029,\n        998,\n        997,\n        1027,\n        1057\n    ],\n    [\n        1059,\n        1030,\n        999,\n        998,\n        1028,\n        1058\n    ],\n    [\n        1060,\n        1031,\n        1000,\n        999,\n        1029,\n        1059\n    ],\n    [\n        1061,\n        1032,\n        1001,\n        1000,\n        1030,\n        1060\n    ],\n    [\n        1062,\n        1033,\n        1002,\n        1001,\n        1031,\n        1061\n    ],\n    [\n        1063,\n        1034,\n        1003,\n        1002,\n        1032,\n        1062\n    ],\n    [\n        1064,\n        1035,\n        1004,\n        1003,\n        1033,\n        1063\n    ],\n    [\n        1005,\n        1004,\n        1034,\n        1064\n    ],\n    [\n        1065,\n        1037,\n        1007,\n        1006\n    ],\n    [\n        1066,\n        1038,\n        1008,\n        1007,\n        1036,\n        1065\n    ],\n    [\n        1067,\n        1039,\n        1009,\n        1008,\n        1037,\n        1066\n    ],\n    [\n        1068,\n        1040,\n        1010,\n        1009,\n        1038,\n        1067\n    ],\n    [\n        1069,\n        1041,\n        1011,\n        1010,\n        1039,\n        1068\n    ],\n    [\n        1070,\n        1042,\n        1012,\n        1011,\n        1040,\n        1069\n    ],\n    [\n        1071,\n        1043,\n        1013,\n        1012,\n        1041,\n        1070\n    ],\n    [\n        1072,\n        1044,\n        1014,\n        1013,\n        1042,\n        1071\n    ],\n    [\n        1073,\n        1045,\n        1015,\n        1014,\n        1043,\n        1072\n    ],\n    [\n        1074,\n        1046,\n        1016,\n        1015,\n        1044,\n        1073\n    ],\n    [\n        1075,\n        1047,\n        1017,\n        1016,\n        1045,\n        1074\n    ],\n    [\n        1076,\n        1048,\n        1018,\n        1017,\n        1046,\n        1075\n    ],\n    [\n        1077,\n        1049,\n        1019,\n        1018,\n        1047,\n        1076\n    ],\n    [\n        1078,\n        1050,\n        1020,\n        1019,\n        1048,\n        1077\n    ],\n    [\n        1079,\n        1051,\n        1021,\n        1020,\n        1049,\n        1078\n    ],\n    [\n        1080,\n        1052,\n        1022,\n        1021,\n        1050,\n        1079\n    ],\n    [\n        1081,\n        1053,\n        1023,\n        1022,\n        1051,\n        1080\n    ],\n    [\n        1082,\n        1054,\n        1024,\n        1023,\n        1052,\n        1081\n    ],\n    [\n        1083,\n        1055,\n        1025,\n        1024,\n        1053,\n        1082\n    ],\n    [\n        1084,\n        1056,\n        1026,\n        1025,\n        1054,\n        1083\n    ],\n    [\n        1085,\n        1057,\n        1027,\n        1026,\n        1055,\n        1084\n    ],\n    [\n        1086,\n        1058,\n        1028,\n        1027,\n        1056,\n        1085\n    ],\n    [\n        1087,\n        1059,\n        1029,\n        1028,\n        1057,\n        1086\n    ],\n    [\n        1088,\n        1060,\n        1030,\n        1029,\n        1058,\n        1087\n    ],\n    [\n        1089,\n        1061,\n        1031,\n        1030,\n        1059,\n        1088\n    ],\n    [\n        1090,\n        1062,\n        1032,\n        1031,\n        1060,\n        1089\n    ],\n    [\n        1091,\n        1063,\n        1033,\n        1032,\n        1061,\n        1090\n    ],\n    [\n        1092,\n        1064,\n        1034,\n        1033,\n        1062,\n        1091\n    ],\n    [\n        1035,\n        1034,\n        1063,\n        1092\n    ],\n    [\n        1093,\n        1066,\n        1037,\n        1036\n    ],\n    [\n        1094,\n        1067,\n        1038,\n        1037,\n        1065,\n        1093\n    ],\n    [\n        1095,\n        1068,\n        1039,\n        1038,\n        1066,\n        1094\n    ],\n    [\n        1096,\n        1069,\n        1040,\n        1039,\n        1067,\n        1095\n    ],\n    [\n        1097,\n        1070,\n        1041,\n        1040,\n        1068,\n        1096\n    ],\n    [\n        1098,\n        1071,\n        1042,\n        1041,\n        1069,\n        1097\n    ],\n    [\n        1099,\n        1072,\n        1043,\n        1042,\n        1070,\n        1098\n    ],\n    [\n        1100,\n        1073,\n        1044,\n        1043,\n        1071,\n        1099\n    ],\n    [\n        1101,\n        1074,\n        1045,\n        1044,\n        1072,\n        1100\n    ],\n    [\n        1102,\n        1075,\n        1046,\n        1045,\n        1073,\n        1101\n    ],\n    [\n        1103,\n        1076,\n        1047,\n        1046,\n        1074,\n        1102\n    ],\n    [\n        1104,\n        1077,\n        1048,\n        1047,\n        1075,\n        1103\n    ],\n    [\n        1105,\n        1078,\n        1049,\n        1048,\n        1076,\n        1104\n    ],\n    [\n        1106,\n        1079,\n        1050,\n        1049,\n        1077,\n        1105\n    ],\n    [\n        1107,\n        1080,\n        1051,\n        1050,\n        1078,\n        1106\n    ],\n    [\n        1108,\n        1081,\n        1052,\n        1051,\n        1079,\n        1107\n    ],\n    [\n        1109,\n        1082,\n        1053,\n        1052,\n        1080,\n        1108\n    ],\n    [\n        1110,\n        1083,\n        1054,\n        1053,\n        1081,\n        1109\n    ],\n    [\n        1111,\n        1084,\n        1055,\n        1054,\n        1082,\n        1110\n    ],\n    [\n        1112,\n        1085,\n        1056,\n        1055,\n        1083,\n        1111\n    ],\n    [\n        1113,\n        1086,\n        1057,\n        1056,\n        1084,\n        1112\n    ],\n    [\n        1114,\n        1087,\n        1058,\n        1057,\n        1085,\n        1113\n    ],\n    [\n        1115,\n        1088,\n        1059,\n        1058,\n        1086,\n        1114\n    ],\n    [\n        1116,\n        1089,\n        1060,\n        1059,\n        1087,\n        1115\n    ],\n    [\n        1117,\n        1090,\n        1061,\n        1060,\n        1088,\n        1116\n    ],\n    [\n        1118,\n        1091,\n        1062,\n        1061,\n        1089,\n        1117\n    ],\n    [\n        1119,\n        1092,\n        1063,\n        1062,\n        1090,\n        1118\n    ],\n    [\n        1064,\n        1063,\n        1091,\n        1119\n    ],\n    [\n        1120,\n        1094,\n        1066,\n        1065\n    ],\n    [\n        1121,\n        1095,\n        1067,\n        1066,\n        1093,\n        1120\n    ],\n    [\n        1122,\n        1096,\n        1068,\n        1067,\n        1094,\n        1121\n    ],\n    [\n        1123,\n        1097,\n        1069,\n        1068,\n        1095,\n        1122\n    ],\n    [\n        1124,\n        1098,\n        1070,\n        1069,\n        1096,\n        1123\n    ],\n    [\n        1125,\n        1099,\n        1071,\n        1070,\n        1097,\n        1124\n    ],\n    [\n        1126,\n        1100,\n        1072,\n        1071,\n        1098,\n        1125\n    ],\n    [\n        1127,\n        1101,\n        1073,\n        1072,\n        1099,\n        1126\n    ],\n    [\n        1128,\n        1102,\n        1074,\n        1073,\n        1100,\n        1127\n    ],\n    [\n        1129,\n        1103,\n        1075,\n        1074,\n        1101,\n        1128\n    ],\n    [\n        1130,\n        1104,\n        1076,\n        1075,\n        1102,\n        1129\n    ],\n    [\n        1131,\n        1105,\n        1077,\n        1076,\n        1103,\n        1130\n    ],\n    [\n        1132,\n        1106,\n        1078,\n        1077,\n        1104,\n        1131\n    ],\n    [\n        1133,\n        1107,\n        1079,\n        1078,\n        1105,\n        1132\n    ],\n    [\n        1134,\n        1108,\n        1080,\n        1079,\n        1106,\n        1133\n    ],\n    [\n        1135,\n        1109,\n        1081,\n        1080,\n        1107,\n        1134\n    ],\n    [\n        1136,\n        1110,\n        1082,\n        1081,\n        1108,\n        1135\n    ],\n    [\n        1137,\n        1111,\n        1083,\n        1082,\n        1109,\n        1136\n    ],\n    [\n        1138,\n        1112,\n        1084,\n        1083,\n        1110,\n        1137\n    ],\n    [\n        1139,\n        1113,\n        1085,\n        1084,\n        1111,\n        1138\n    ],\n    [\n        1140,\n        1114,\n        1086,\n        1085,\n        1112,\n        1139\n    ],\n    [\n        1141,\n        1115,\n        1087,\n        1086,\n        1113,\n        1140\n    ],\n    [\n        1142,\n        1116,\n        1088,\n        1087,\n        1114,\n        1141\n    ],\n    [\n        1143,\n        1117,\n        1089,\n        1088,\n        1115,\n        1142\n    ],\n    [\n        1144,\n        1118,\n        1090,\n        1089,\n        1116,\n        1143\n    ],\n    [\n        1145,\n        1119,\n        1091,\n        1090,\n        1117,\n        1144\n    ],\n    [\n        1092,\n        1091,\n        1118,\n        1145\n    ],\n    [\n        1146,\n        1121,\n        1094,\n        1093\n    ],\n    [\n        1147,\n        1122,\n        1095,\n        1094,\n        1120,\n        1146\n    ],\n    [\n        1148,\n        1123,\n        1096,\n        1095,\n        1121,\n        1147\n    ],\n    [\n        1149,\n        1124,\n        1097,\n        1096,\n        1122,\n        1148\n    ],\n    [\n        1150,\n        1125,\n        1098,\n        1097,\n        1123,\n        1149\n    ],\n    [\n        1151,\n        1126,\n        1099,\n        1098,\n        1124,\n        1150\n    ],\n    [\n        1152,\n        1127,\n        1100,\n        1099,\n        1125,\n        1151\n    ],\n    [\n        1153,\n        1128,\n        1101,\n        1100,\n        1126,\n        1152\n    ],\n    [\n        1154,\n        1129,\n        1102,\n        1101,\n        1127,\n        1153\n    ],\n    [\n        1155,\n        1130,\n        1103,\n        1102,\n        1128,\n        1154\n    ],\n    [\n        1156,\n        1131,\n        1104,\n        1103,\n        1129,\n        1155\n    ],\n    [\n        1157,\n        1132,\n        1105,\n        1104,\n        1130,\n        1156\n    ],\n    [\n        1158,\n        1133,\n        1106,\n        1105,\n        1131,\n        1157\n    ],\n    [\n        1159,\n        1134,\n        1107,\n        1106,\n        1132,\n        1158\n    ],\n    [\n        1160,\n        1135,\n        1108,\n        1107,\n        1133,\n        1159\n    ],\n    [\n        1161,\n        1136,\n        1109,\n        1108,\n        1134,\n        1160\n    ],\n    [\n        1162,\n        1137,\n        1110,\n        1109,\n        1135,\n        1161\n    ],\n    [\n        1163,\n        1138,\n        1111,\n        1110,\n        1136,\n        1162\n    ],\n    [\n        1164,\n        1139,\n        1112,\n        1111,\n        1137,\n        1163\n    ],\n    [\n        1165,\n        1140,\n        1113,\n        1112,\n        1138,\n        1164\n    ],\n    [\n        1166,\n        1141,\n        1114,\n        1113,\n        1139,\n        1165\n    ],\n    [\n        1167,\n        1142,\n        1115,\n        1114,\n        1140,\n        1166\n    ],\n    [\n        1168,\n        1143,\n        1116,\n        1115,\n        1141,\n        1167\n    ],\n    [\n        1169,\n        1144,\n        1117,\n        1116,\n        1142,\n        1168\n    ],\n    [\n        1170,\n        1145,\n        1118,\n        1117,\n        1143,\n        1169\n    ],\n    [\n        1119,\n        1118,\n        1144,\n        1170\n    ],\n    [\n        1171,\n        1147,\n        1121,\n        1120\n    ],\n    [\n        1172,\n        1148,\n        1122,\n        1121,\n        1146,\n        1171\n    ],\n    [\n        1173,\n        1149,\n        1123,\n        1122,\n        1147,\n        1172\n    ],\n    [\n        1174,\n        1150,\n        1124,\n        1123,\n        1148,\n        1173\n    ],\n    [\n        1175,\n        1151,\n        1125,\n        1124,\n        1149,\n        1174\n    ],\n    [\n        1176,\n        1152,\n        1126,\n        1125,\n        1150,\n        1175\n    ],\n    [\n        1177,\n        1153,\n        1127,\n        1126,\n        1151,\n        1176\n    ],\n    [\n        1178,\n        1154,\n        1128,\n        1127,\n        1152,\n        1177\n    ],\n    [\n        1179,\n        1155,\n        1129,\n        1128,\n        1153,\n        1178\n    ],\n    [\n        1180,\n        1156,\n        1130,\n        1129,\n        1154,\n        1179\n    ],\n    [\n        1181,\n        1157,\n        1131,\n        1130,\n        1155,\n        1180\n    ],\n    [\n        1182,\n        1158,\n        1132,\n        1131,\n        1156,\n        1181\n    ],\n    [\n        1183,\n        1159,\n        1133,\n        1132,\n        1157,\n        1182\n    ],\n    [\n        1184,\n        1160,\n        1134,\n        1133,\n        1158,\n        1183\n    ],\n    [\n        1185,\n        1161,\n        1135,\n        1134,\n        1159,\n        1184\n    ],\n    [\n        1186,\n        1162,\n        1136,\n        1135,\n        1160,\n        1185\n    ],\n    [\n        1187,\n        1163,\n        1137,\n        1136,\n        1161,\n        1186\n    ],\n    [\n        1188,\n        1164,\n        1138,\n        1137,\n        1162,\n        1187\n    ],\n    [\n        1189,\n        1165,\n        1139,\n        1138,\n        1163,\n        1188\n    ],\n    [\n        1190,\n        1166,\n        1140,\n        1139,\n        1164,\n        1189\n    ],\n    [\n        1191,\n        1167,\n        1141,\n        1140,\n        1165,\n        1190\n    ],\n    [\n        1192,\n        1168,\n        1142,\n        1141,\n        1166,\n        1191\n    ],\n    [\n        1193,\n        1169,\n        1143,\n        1142,\n        1167,\n        1192\n    ],\n    [\n        1194,\n        1170,\n        1144,\n        1143,\n        1168,\n        1193\n    ],\n    [\n        1145,\n        1144,\n        1169,\n        1194\n    ],\n    [\n        1195,\n        1172,\n        1147,\n        1146\n    ],\n    [\n        1196,\n        1173,\n        1148,\n        1147,\n        1171,\n        1195\n    ],\n    [\n        1197,\n        1174,\n        1149,\n        1148,\n        1172,\n        1196\n    ],\n    [\n        1198,\n        1175,\n        1150,\n        1149,\n        1173,\n        1197\n    ],\n    [\n        1199,\n        1176,\n        1151,\n        1150,\n        1174,\n        1198\n    ],\n    [\n        1200,\n        1177,\n        1152,\n        1151,\n        1175,\n        1199\n    ],\n    [\n        1201,\n        1178,\n        1153,\n        1152,\n        1176,\n        1200\n    ],\n    [\n        1202,\n        1179,\n        1154,\n        1153,\n        1177,\n        1201\n    ],\n    [\n        1203,\n        1180,\n        1155,\n        1154,\n        1178,\n        1202\n    ],\n    [\n        1204,\n        1181,\n        1156,\n        1155,\n        1179,\n        1203\n    ],\n    [\n        1205,\n        1182,\n        1157,\n        1156,\n        1180,\n        1204\n    ],\n    [\n        1206,\n        1183,\n        1158,\n        1157,\n        1181,\n        1205\n    ],\n    [\n        1207,\n        1184,\n        1159,\n        1158,\n        1182,\n        1206\n    ],\n    [\n        1208,\n        1185,\n        1160,\n        1159,\n        1183,\n        1207\n    ],\n    [\n        1209,\n        1186,\n        1161,\n        1160,\n        1184,\n        1208\n    ],\n    [\n        1210,\n        1187,\n        1162,\n        1161,\n        1185,\n        1209\n    ],\n    [\n        1211,\n        1188,\n        1163,\n        1162,\n        1186,\n        1210\n    ],\n    [\n        1212,\n        1189,\n        1164,\n        1163,\n        1187,\n        1211\n    ],\n    [\n        1213,\n        1190,\n        1165,\n        1164,\n        1188,\n        1212\n    ],\n    [\n        1214,\n        1191,\n        1166,\n        1165,\n        1189,\n        1213\n    ],\n    [\n        1215,\n        1192,\n        1167,\n        1166,\n        1190,\n        1214\n    ],\n    [\n        1216,\n        1193,\n        1168,\n        1167,\n        1191,\n        1215\n    ],\n    [\n        1217,\n        1194,\n        1169,\n        1168,\n        1192,\n        1216\n    ],\n    [\n        1170,\n        1169,\n        1193,\n        1217\n    ],\n    [\n        1218,\n        1196,\n        1172,\n        1171\n    ],\n    [\n        1219,\n        1197,\n        1173,\n        1172,\n        1195,\n        1218\n    ],\n    [\n        1220,\n        1198,\n        1174,\n        1173,\n        1196,\n        1219\n    ],\n    [\n        1221,\n        1199,\n        1175,\n        1174,\n        1197,\n        1220\n    ],\n    [\n        1222,\n        1200,\n        1176,\n        1175,\n        1198,\n        1221\n    ],\n    [\n        1223,\n        1201,\n        1177,\n        1176,\n        1199,\n        1222\n    ],\n    [\n        1224,\n        1202,\n        1178,\n        1177,\n        1200,\n        1223\n    ],\n    [\n        1225,\n        1203,\n        1179,\n        1178,\n        1201,\n        1224\n    ],\n    [\n        1226,\n        1204,\n        1180,\n        1179,\n        1202,\n        1225\n    ],\n    [\n        1227,\n        1205,\n        1181,\n        1180,\n        1203,\n        1226\n    ],\n    [\n        1228,\n        1206,\n        1182,\n        1181,\n        1204,\n        1227\n    ],\n    [\n        1229,\n        1207,\n        1183,\n        1182,\n        1205,\n        1228\n    ],\n    [\n        1230,\n        1208,\n        1184,\n        1183,\n        1206,\n        1229\n    ],\n    [\n        1231,\n        1209,\n        1185,\n        1184,\n        1207,\n        1230\n    ],\n    [\n        1232,\n        1210,\n        1186,\n        1185,\n        1208,\n        1231\n    ],\n    [\n        1233,\n        1211,\n        1187,\n        1186,\n        1209,\n        1232\n    ],\n    [\n        1234,\n        1212,\n        1188,\n        1187,\n        1210,\n        1233\n    ],\n    [\n        1235,\n        1213,\n        1189,\n        1188,\n        1211,\n        1234\n    ],\n    [\n        1236,\n        1214,\n        1190,\n        1189,\n        1212,\n        1235\n    ],\n    [\n        1237,\n        1215,\n        1191,\n        1190,\n        1213,\n        1236\n    ],\n    [\n        1238,\n        1216,\n        1192,\n        1191,\n        1214,\n        1237\n    ],\n    [\n        1239,\n        1217,\n        1193,\n        1192,\n        1215,\n        1238\n    ],\n    [\n        1194,\n        1193,\n        1216,\n        1239\n    ],\n    [\n        1240,\n        1219,\n        1196,\n        1195\n    ],\n    [\n        1241,\n        1220,\n        1197,\n        1196,\n        1218,\n        1240\n    ],\n    [\n        1242,\n        1221,\n        1198,\n        1197,\n        1219,\n        1241\n    ],\n    [\n        1243,\n        1222,\n        1199,\n        1198,\n        1220,\n        1242\n    ],\n    [\n        1244,\n        1223,\n        1200,\n        1199,\n        1221,\n        1243\n    ],\n    [\n        1245,\n        1224,\n        1201,\n        1200,\n        1222,\n        1244\n    ],\n    [\n        1246,\n        1225,\n        1202,\n        1201,\n        1223,\n        1245\n    ],\n    [\n        1247,\n        1226,\n        1203,\n        1202,\n        1224,\n        1246\n    ],\n    [\n        1248,\n        1227,\n        1204,\n        1203,\n        1225,\n        1247\n    ],\n    [\n        1249,\n        1228,\n        1205,\n        1204,\n        1226,\n        1248\n    ],\n    [\n        1250,\n        1229,\n        1206,\n        1205,\n        1227,\n        1249\n    ],\n    [\n        1251,\n        1230,\n        1207,\n        1206,\n        1228,\n        1250\n    ],\n    [\n        1252,\n        1231,\n        1208,\n        1207,\n        1229,\n        1251\n    ],\n    [\n        1253,\n        1232,\n        1209,\n        1208,\n        1230,\n        1252\n    ],\n    [\n        1254,\n        1233,\n        1210,\n        1209,\n        1231,\n        1253\n    ],\n    [\n        1255,\n        1234,\n        1211,\n        1210,\n        1232,\n        1254\n    ],\n    [\n        1256,\n        1235,\n        1212,\n        1211,\n        1233,\n        1255\n    ],\n    [\n        1257,\n        1236,\n        1213,\n        1212,\n        1234,\n        1256\n    ],\n    [\n        1258,\n        1237,\n        1214,\n        1213,\n        1235,\n        1257\n    ],\n    [\n        1259,\n        1238,\n        1215,\n        1214,\n        1236,\n        1258\n    ],\n    [\n        1260,\n        1239,\n        1216,\n        1215,\n        1237,\n        1259\n    ],\n    [\n        1217,\n        1216,\n        1238,\n        1260\n    ],\n    [\n        1241,\n        1219,\n        1218\n    ],\n    [\n        1242,\n        1220,\n        1219,\n        1240\n    ],\n    [\n        1243,\n        1221,\n        1220,\n        1241\n    ],\n    [\n        1244,\n        1222,\n        1221,\n        1242\n    ],\n    [\n        1245,\n        1223,\n        1222,\n        1243\n    ],\n    [\n        1246,\n        1224,\n        1223,\n        1244\n    ],\n    [\n        1247,\n        1225,\n        1224,\n        1245\n    ],\n    [\n        1248,\n        1226,\n        1225,\n        1246\n    ],\n    [\n        1249,\n        1227,\n        1226,\n        1247\n    ],\n    [\n        1250,\n        1228,\n        1227,\n        1248\n    ],\n    [\n        1251,\n        1229,\n        1228,\n        1249\n    ],\n    [\n        1252,\n        1230,\n        1229,\n        1250\n    ],\n    [\n        1253,\n        1231,\n        1230,\n        1251\n    ],\n    [\n        1254,\n        1232,\n        1231,\n        1252\n    ],\n    [\n        1255,\n        1233,\n        1232,\n        1253\n    ],\n    [\n        1256,\n        1234,\n        1233,\n        1254\n    ],\n    [\n        1257,\n        1235,\n        1234,\n        1255\n    ],\n    [\n        1258,\n        1236,\n        1235,\n        1256\n    ],\n    [\n        1259,\n        1237,\n        1236,\n        1257\n    ],\n    [\n        1260,\n        1238,\n        1237,\n        1258\n    ],\n    [\n        1239,\n        1238,\n        1259\n    ]\n];\n","<script lang=\"ts\">\n\timport { extendHex, defineGrid, Point } from \"honeycomb-grid\";\n\n\timport Svg from \"./Svg.svelte\";\n\n\timport Hexagon from \"./Hexagon.svelte\";\n\n\timport { neighbors } from \"./neighbors\";\n\n\tconst r = 10;\n\n\tconst width = 1000;\n\tconst height = 1000;\n\n\tconst Hex = extendHex({\n\t\tsize: r,\n\t\torientation: \"flat\",\n\t\talive: false,\n\t\tneighbors: [] as number[],\n\t});\n\n\tconst W = width / Hex(0, 0).width();\n\tconst H = (height - 100) / Hex(0, 0).height();\n\n\tconst Grid = defineGrid(Hex);\n\t// let grid = Grid.rectangle({ width: W, height: H });\n\tlet grid = Grid.hexagon({ radius: 20 });\n\n\tconst gridWidth = grid.pointWidth();\n\tconst gridHeight = grid.pointHeight();\n\n\tgrid = grid.map((hex, i) => {\n\t\thex.alive = Math.random() > 0.95;\n\t\thex.neighbors = neighbors[i];\n\t\treturn hex;\n\t});\n\n\t// const n = grid.map((hex) => {\n\t// \treturn grid\n\t// \t\t.neighborsOf(hex)\n\t// \t\t.filter((f) => f)\n\t// \t\t.map((hex) => grid.indexOf(hex));\n\t// });\n\n\t// console.log(n);\n\n\tfunction clone<T>(x: T): T {\n\t\treturn JSON.parse(JSON.stringify(x)) as T;\n\t}\n\n\tfunction step() {\n\t\tconst prevGrid = clone(grid);\n\t\tgrid = grid.map((hex, i) => {\n\t\t\tconst prevHex = prevGrid[i];\n\t\t\tconst neighbors = prevHex.neighbors.map((n) => prevGrid[n]);\n\t\t\tconst aliveNeighbors = neighbors.filter((n) => n.alive);\n\t\t\tconst alive = prevHex.alive;\n\n\t\t\tif (!alive) {\n\t\t\t\tif ([2].includes(aliveNeighbors.length)) {\n\t\t\t\t\thex.alive = true;\n\t\t\t\t\treturn hex;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ([2, 4].includes(aliveNeighbors.length)) {\n\t\t\t\treturn hex;\n\t\t\t} else {\n\t\t\t\thex.alive = false;\n\t\t\t\treturn hex;\n\t\t\t}\n\t\t});\n\n\t}\n\n\tsetInterval(step, 400)\n</script>\n\n<main>\n\t<Svg {width} {height}>\n\t\t{#each grid.map( (hex) => ({ hex, point: hex.toPoint() }) ) as { hex, point }}\n\t\t\t<Hexagon\n\t\t\t\tactive={hex.alive}\n\t\t\t\ton:click={() => hex.alive = true}\n\t\t\t\t{r}\n\t\t\t\tx={point.x + width / 2}\n\t\t\t\ty={point.y + height / 2}\n\t\t\t/>\n\t\t{/each}\n\t</Svg>\n\t<!-- <button on:click={() => step()}>step</button> -->\n</main>\n\n<style>\n\t:global(body) {\n\t\tbackground: rgb(11, 4, 37);\n\t\theight: 100%;\n\n\t\tdisplay: grid;\n\t\tplace-items: center;\n\t}\n</style>\n","import App from './App.svelte';\nconst app = new App({\n    target: document.body,\n    props: {}\n});\nexport default app;\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","get_slot_context","definition","ctx","$$scope","tar","src","k","assign","slice","null_to_empty","value","insert","target","node","anchor","insertBefore","detach","parentNode","removeChild","svg_element","name","document","createElementNS","empty","data","createTextNode","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","current_component","set_current_component","component","bubble","callbacks","$$","type","call","this","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","seen_callbacks","Set","flushidx","flush","saved_component","length","update","pop","i","callback","has","add","clear","fragment","before_update","dirty","p","after_update","outroing","outros","transition_in","block","local","delete","transition_out","o","c","d","create_component","mount_component","customElement","on_mount","on_destroy","m","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","skip_bound","root","ready","ret","rest","hydrate","nodes","element","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","$on","index","indexOf","splice","$set","$$props","obj","$$set","keys","t","n","exports","split","r","prototype","toString","e","isObject","isNumber","isArray","isString","s","u","test","Error","toLowerCase","toUpperCase","includes","pointy","E","SE","SW","W","NW","NE","flat","S","N","x","y","q","h","f","isValidHex","distance","Math","max","nudge","lerp","round","get","min","cubeToCartesian","equals","Boolean","signedModulo","compassToNumberDirection","concat","orientation","g","isPointy","sort","toPoint","width","height","Hex","fromPoint","P","Grid","start","direction","onCreate","w","size","rStart","rEnd","radius","center","H","offset","O","j","ring","M","Point","C","ensureXY","subtract","multiply","divide","R","$","static","__isHoneycombHex","TypeError","Number","lastIndexOf","super","unshift","v","defineProperty","enumerable","configurable","writable","T","getOwnPropertySymbols","getOwnPropertyDescriptor","apply","G","arguments","getOwnPropertyDescriptors","defineProperties","z","V","I","X","Y","B","xRadius","sqrt","_","yRadius","A","origin","L","F","U","J","K","Q","abs","Z","tt","nt","rt","et","thirdCoordinate","it","st","normalizeRadiuses","cartesianToCube","cartesian","coordinates","corners","cube","isFlat","set","toCartesian","toCube","propertyIsEnumerable","D","isNaN","toJSON","ot","extendHex","some","pointToHex","parallelogram","triangle","hexagon","rectangle","spiral","hexesBetween","hexesInRange","neighborsOf","pointHeight","pointWidth","slot_ctx","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","lets","undefined","merged","len","active","hex","coords","PI","cos","sin","hexagonCoords","path","closed","coordsToPath","neighbors","alive","iterations","createElement","point","grid","defineGrid","random","setInterval","prevGrid","JSON","parse","stringify","clone","prevHex","aliveNeighbors","body"],"mappings":"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"}