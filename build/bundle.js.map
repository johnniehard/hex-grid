{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/Svg.svelte","../../node_modules/honeycomb-grid/dist/honeycomb.esm.min.js","../../src/hexagon.ts","../../src/Hexagon.svelte","../../src/neighbors_20.ts","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = append_empty_stylesheet(node).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.44.3' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<script lang=\"ts\">\n    export let width: number;\n    export let height: number;\n</script>\n\n<svg\n    width={`${width}px`}\n    height={`${height}px`}\n    viewBox={`0 0 ${width} ${height}`}\n>\n    <slot />\n</svg>\n\n<style>\n    svg {\n        display: block;\n        /* border: 1px solid white; */\n        max-width: 100%;\n        height: auto;\n    }\n</style>","\"undefined\"!=typeof globalThis?globalThis:\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self&&self;var t=function(t,n){return t(n={exports:{}},n.exports),n.exports}((function(t,n){\n/*! axis.js v1.2.1 | (c) 2016 @toddmotto | https://github.com/toddmotto/axis */\nt.exports=function(){var t={},n=\"Array Object String Date RegExp Function Boolean Number Null Undefined\".split(\" \");function r(){return Object.prototype.toString.call(this).slice(8,-1)}for(var e=n.length;e--;)t[\"is\"+n[e]]=function(t){return function(n){return r.call(n)===t}}(n[e]);return t}()})),n=t.isObject,r=t.isNumber,e=t.isArray,i=t.isString;function s(t,n){return n+t*(1&n)>>1}function o(t,n){return(t%n+n)%n}function u(t,n){if(!/^(N|S)?(E|W)?$/i.test(t))throw new Error(`Invalid compass direction: ${t}. Choose from E, SE, S, SW, W, NW, N or NE.`);if(n=n.toLowerCase(),t=t.toUpperCase(),\"pointy\"===n&&[\"N\",\"S\"].includes(t))throw new Error(`Direction ${t} is ambiguous for pointy hexes. Did you mean ${t}E or ${t}W?`);if(\"flat\"===n&&[\"E\",\"W\"].includes(t))throw new Error(`Direction ${t} is ambiguous for flat hexes. Did you mean N${t} or S${t}?`);return{pointy:{E:0,SE:1,SW:2,W:3,NW:4,NE:5},flat:{SE:0,S:1,SW:2,NW:3,N:4,NE:5}}[n][t]}function c(t,n){return r(t)||r(n)?r(t)?r(n)||(n=t):t=n:t=n=0,{x:t,y:n}}const a=[{q:1,r:0,s:-1},{q:0,r:1,s:-1},{q:-1,r:1,s:0},{q:-1,r:0,s:1},{q:0,r:-1,s:1},{q:1,r:-1,s:0}],h=[{q:2,r:-1,s:-1},{q:1,r:1,s:-2},{q:-1,r:2,s:-1},{q:-2,r:1,s:1},{q:-1,r:-1,s:2},{q:1,r:-2,s:1}],f={q:1e-6,r:1e-6,s:-2e-6};function l(t){return r(t)?this[t]:this[this.indexOf(t)]}function d({isValidHex:t}){return function(n,e){if(!t(e))return this;const i=r(n)?n:this.indexOf(n);return i<0?this.push(e):this[i]=e,this}}function x(t,n){const r=t.distance(n),e=1/Math.max(r,1);let i=[];for(let s=0;s<=r;s++){const r=t.nudge().lerp(n.nudge(),e*s).round();i.push(this.get(r))}return i}function y({isValidHex:t}){return function(n,r=0,e=!0){if(!t(n))throw new Error(`Invalid center hex: ${n}.`);if(!this.get(n))throw new Error(`Center hex with coordinates ${n} not present in grid.`);let i=[];for(let t=-r;t<=r;t++)for(let s=Math.max(-r,-t-r);s<=Math.min(r,-t+r);s++){const r=this.get(n.cubeToCartesian({q:n.q+t,r:n.r+s}));n.equals(r)&&!e||i.push(r)}return i.filter(Boolean)}}function p({isValidHex:t,signedModulo:n,compassToNumberDirection:r}){return function(e,s=\"all\",o=!1){if(!t(e))throw new Error(`Invalid hex: ${e}.`);const u=o?h:a;return\"all\"===s&&(s=[0,1,2,3,4,5]),[].concat(s).map(t=>{i(t)&&(t=r(t,e.orientation)),(t<0||t>5)&&(t=n(t,6));const{q:s,r:o}=u[t];return this.get(e.cubeToCartesian({q:e.q+s,r:e.r+o}))})}}function g(){if(0===this.length)return 0;const{0:t,length:n,[n-1]:r}=this[0].isPointy()?[...this].sort((t,n)=>n.s-t.s||t.q-n.q):[...this].sort((t,n)=>t.q-n.q);return r.toPoint().x-t.toPoint().x+this[0].width()}function b(){if(0===this.length)return 0;const{0:t,length:n,[n-1]:r}=this[0].isPointy()?[...this].sort((t,n)=>t.r-n.r):[...this].sort((t,n)=>n.s-t.s||t.r-n.r);return r.toPoint().y-t.toPoint().y+this[0].height()}function q({Hex:t}){return function(n,r){return t().fromPoint(n,r)}}function P({Grid:t,Hex:n}){return function({width:r,height:e,start:i,direction:s=1,onCreate:o=(()=>{})}){i=n(i);const[u,c,a]={1:[\"q\",\"r\",\"s\"],3:[\"r\",\"s\",\"q\"],5:[\"s\",\"q\",\"r\"]}[s],h=new t;h.width=r,h.height=e,h.start=i,h.direction=s;for(let t=0;t<r;t++)for(let r=0;r<e;r++){const e=n({[u]:t+i[u],[c]:r+i[c],[a]:-t-r+i[a]});o(e,h),h.push(e)}return h}}function w({Grid:t,Hex:n}){return function({size:r,start:e,direction:i=1,onCreate:s=(()=>{})}){e=n(e);const o={1:{rStart:()=>0,rEnd:t=>r-t},5:{rStart:t=>r-t,rEnd:()=>r+1}},{rStart:u,rEnd:c}=o[i],a=new t;a.size=r,a.start=e,a.direction=i;for(let t=0;t<r;t++)for(let r=u(t);r<c(t);r++){const i=n({q:t+e.q,r:r+e.r,s:-t-r+e.s});s(i,a),a.push(i)}return a}}function m({Grid:t,Hex:n}){return function({radius:r,center:e,onCreate:i=(()=>{})}){e=n(e);const s=new t;s.radius=r,s.center=e;for(let t=-r;t<=r;t++){const o=Math.max(-r,-t-r),u=Math.min(r,-t+r);for(let r=o;r<=u;r++){const o=n({q:t+e.q,r:r+e.r,s:-t-r+e.s});i(o,s),s.push(o)}}return s}}function H({Grid:t,Hex:n,compassToNumberDirection:r,signedModulo:e}){return function({width:o,height:u,start:c,direction:a=(n().isPointy()?0:1),onCreate:h=(()=>{})}){c=n(c),i(a)&&(a=r(a,c.orientation)),(a<0||a>5)&&(a=e(a,6));const[f,l,d]=[[\"q\",\"r\",\"s\"],[\"r\",\"q\",\"s\"],[\"r\",\"s\",\"q\"],[\"s\",\"r\",\"q\"],[\"s\",\"q\",\"r\"],[\"q\",\"s\",\"r\"]][a],[x,y]=c.isPointy()?[o,u]:[u,o],p=new t;p.width=o,p.height=u,p.start=c,p.direction=a;for(let t=0;t<y;t++){const r=s(c.offset,t);for(let e=-r;e<x-r;e++){const r=n({[f]:e+c[f],[l]:t+c[l],[d]:-e-t+c[d]});h(r,p),p.push(r)}}return p}}function O({Grid:t,Hex:n}){return function({radius:r,center:e,onCreate:i=(()=>{})}){e=n(e);const s=new t;s.radius=r,s.center=e;const{q:o,r:u,s:c}=e;let h=n({q:o,r:u-r,s:c+r});for(let t=0;t<6;t++)for(let e=0;e<r;e++){i(h,s),s.push(h);const{q:r,r:e,s:o}=a[t];h=n({q:h.q+r,r:h.r+e,s:h.s+o})}return s}}function j({Grid:t,Hex:n}){return function({radius:r,center:e,onCreate:i=(()=>{})}){e=n(e);let s=new t;i(e,s),s.push(e);for(let t=1;t<=r;t++)s=s.concat(this.ring({radius:t,center:e,onCreate:i}));return s.radius=r,s.center=e,s}}function M({Point:t}){return function(n,r){let e;return({x:e,y:r}=t(n,r)),t(this.x+e,this.y+r)}}function E({Point:t}){return function(n,r){let e;return({x:e,y:r}=t(n,r)),t(this.x-e,this.y-r)}}function C({Point:t}){return function(n,r){let e;return({x:e,y:r}=t(n,r)),t(this.x*e,this.y*r)}}function N({Point:t}){return function(n,r){let e;return({x:e,y:r}=t(n,r)),t(this.x/e,this.y/r)}}function S({ensureXY:t}){const i={add:M({Point:s}),subtract:E({Point:s}),multiply:C({Point:s}),divide:N({Point:s})};function s(s,o){let u;return u=r(s)?t(s,o):e(s)?t(...s):n(s)?t(s.x,s.y):t(0),Object.assign(Object.create(i),u)}return s}const R=S({ensureXY:c});class $ extends Array{static isValidHex(t){return!0===(t||{}).__isHoneycombHex}fill(){throw new TypeError(\"Grid.prototype.fill is not implemented\")}includes(t,n=0){return!!(this.indexOf(t,n)+1)}indexOf(t,n=0){const{length:r}=this;let e=Number(n);for(t=R(t),e=Math.max(e>=0?e:r+e,0);e<r;e++)if(this[e].equals(t))return e;return-1}lastIndexOf(t,n=this.length-1){const{length:r}=this;let e=Number(n);for(t=R(t),e=e>=0?Math.min(e,r-1):r+e;e>=0;e--)if(this[e].equals(t))return e;return-1}push(...t){return super.push(...t.filter($.isValidHex))}splice(t,n,...r){return null==n?super.splice(t):super.splice(t,n,...r.filter($.isValidHex))}unshift(...t){return super.unshift(...t.filter($.isValidHex))}}function v(t,n,r){return n in t?Object.defineProperty(t,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[n]=r,t}function T(t,n){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var e=Object.getOwnPropertySymbols(t);n&&(e=e.filter((function(n){return Object.getOwnPropertyDescriptor(t,n).enumerable}))),r.push.apply(r,e)}return r}function G(t){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?T(Object(r),!0).forEach((function(n){v(t,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):T(Object(r)).forEach((function(n){Object.defineProperty(t,n,Object.getOwnPropertyDescriptor(r,n))}))}return t}function D(t,n){if(null==t)return{};var r,e,i=function(t,n){if(null==t)return{};var r,e,i={},s=Object.keys(t);for(e=0;e<s.length;e++)r=s[e],n.indexOf(r)>=0||(i[r]=t[r]);return i}(t,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(t);for(e=0;e<s.length;e++)r=s[e],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(i[r]=t[r])}return i}function z({Hex:t}){return function(...n){return Object.assign(this,t(...n))}}function V(){return{x:this.x,y:this.y}}function W(){return{q:this.q,r:this.r,s:this.s}}function I({q:t,r:n}){let r,e;return this.isPointy()?(r=t+s(this.offset,n),e=n):(r=t,e=n+s(this.offset,t)),{x:r,y:e}}function X(){return\"pointy\"===this.orientation.toLowerCase()}function Y(){return\"flat\"===this.orientation.toLowerCase()}function B(){const{xRadius:t}=this.size;return this.isPointy()?t*Math.sqrt(3):2*t}function _(){const{yRadius:t}=this.size;return this.isPointy()?2*t:t*Math.sqrt(3)}function A({Point:t}){return function(){const n=this.width(),r=this.height(),{x:e,y:i}=this.origin;return this.isPointy()?[t(n-e,.25*r-i),t(n-e,.75*r-i),t(.5*n-e,r-i),t(0-e,.75*r-i),t(0-e,.25*r-i),t(.5*n-e,0-i)]:[t(n-e,.5*r-i),t(.75*n-e,r-i),t(.25*n-e,r-i),t(0-e,.5*r-i),t(.25*n-e,0-i),t(.75*n-e,0-i)]}}function L({Point:t}){return function(){const{x:n,y:r}=this.origin;return t(this.width()/2-n,this.height()/2-r)}}function k({Point:t}){return function(){const{q:n,r:r,size:e}=this,{xRadius:i,yRadius:s}=e;let o,u;return this.isPointy()?(o=i*Math.sqrt(3)*(n+r/2),u=3*s/2*r):(o=3*i/2*n,u=s*Math.sqrt(3)*(r+n/2)),t(o,u)}}function F({Point:t,Hex:n}){return function(r,e){const{xRadius:i,yRadius:s}=this.size;let o,u,c;return({x:o,y:e}=t(r,e).subtract(this.center())),this.isPointy()?(u=Math.sqrt(3)*o/(3*i)-e/(3*s),c=2/3*(e/s)):(u=2/3*(o/i),c=Math.sqrt(3)*e/(3*s)-o/(3*i)),n({q:u,r:c,s:-u-c}).round()}}function U({Hex:t,Point:n}){return function(r){const{x:e,y:i}=n(r);return t(this.x+e,this.y+i,G({},this))}}function J({Hex:t,Point:n}){return function(r){const{x:e,y:i}=n(r);return t(this.x-e,this.y-i,G({},this))}}function K({Point:t}){return function(n){if(null!=n&&(e(n)||r(n.x)&&r(n.y))){const{x:r,y:e}=t(n);return this.x===r&&this.y===e}return!1}}function Q(t){return Math.max(Math.abs(this.q-t.q),Math.abs(this.r-t.r),Math.abs(this.s-t.s))}function Z({Hex:t}){return function(){let{q:n,r:r,s:e}=this,i=Math.round(n),s=Math.round(r),o=Math.round(e);const u=Math.abs(n-i),c=Math.abs(r-s),a=Math.abs(e-o);return u>c&&u>a?i=-s-o:c>a?s=-i-o:o=-i-s,t(G(G({},this),{},{q:i,r:s,s:o}))}}function tt({Hex:t}){return function(n,r){const e=this.q*(1-r)+n.q*r,i=this.r*(1-r)+n.r*r;return t(G(G({},this),{},{q:e,r:i,s:-e-i}))}}function nt({Hex:t}){return function(){const{q:n,r:r,s:e}=f;return t(G(G({},this),{},{q:this.q+n,r:this.r+r,s:this.s+e}))}}function rt(){return`${this.x},${this.y}`}const et={thirdCoordinate:function(t,n){return-t-n}};const it=S({ensureXY:c}),st=function({ensureXY:t,normalizeRadiuses:i,Point:o}){return function(u={}){const c=function({Point:t}){return function(n,r){let e,i,o;return({x:e,y:r}=t(n,r)),this.isPointy()?(i=e-s(this.offset,r),o=r):(i=e,o=r-s(this.offset,e)),{q:i,r:o,s:-i-o}}}({Point:o}),a={__isHoneycombHex:!0,orientation:\"pointy\",origin:0,size:{xRadius:1,yRadius:1},offset:-1,get q(){return this.cartesianToCube(this).q},get r(){return this.cartesianToCube(this).r},get s(){return this.cartesianToCube(this).s},add:U({Hex:f,Point:o}),cartesian:V,cartesianToCube:c,center:L({Point:o}),coordinates:V,corners:A({Point:o}),cube:W,cubeToCartesian:I,distance:Q,equals:K({Point:o}),fromPoint:F({Point:o,Hex:f}),height:_,isFlat:Y,isPointy:X,lerp:tt({Hex:f}),nudge:nt({Hex:f}),round:Z({Hex:f}),set:z({Hex:f}),subtract:J({Hex:f,Point:o}),toCartesian:I,toCube:c,toPoint:k({Point:o}),toString:rt,width:B},h=Object.assign(a,u);function f(i,s,o={}){let u;if(n(i)){let{q:t,r:n,s:e}=i,c=D(i,[\"q\",\"r\",\"s\"]);if(r(t)||r(n)||r(e)){const r=t+n+e;if(Number.isNaN(r)||r>1e-12)throw new Error(`Cube coordinates must have a sum of 0. q: ${t}, r: ${n}, s: ${e}, sum: ${t+n+e}.`);({x:u,y:s}=h.cubeToCartesian({q:t,r:n,s:e}))}else({x:u,y:s}=i);o=c}else e(i)?([u,s]=i,o={}):u=i;return Object.assign(Object.create(h),Object.assign(o,t(u,s)))}return h.size=i(h.size,h.isPointy()),h.origin=o(h.origin),Object.assign(f,et,{toJSON:()=>u}),f}}({ensureXY:c,normalizeRadiuses:function(t,e){if(n(t)){if(r(t.xRadius)&&r(t.yRadius))return t;const{width:n,height:i}=t;if(r(n)&&r(i))return e?{xRadius:n/Math.sqrt(3),yRadius:i/2}:{xRadius:n/2,yRadius:i/Math.sqrt(3)}}if(r(t))return{xRadius:t,yRadius:t};throw new Error(`Invalid size: ${t}. Set it as a number or as an object containing width and height.`)},Point:it}),ot=function({extendHex:t,Grid:n,Point:i}){const{isValidHex:s}=n;return function(c=t()){function a(...t){return t=t.filter(Boolean),e(t[0])&&(0===t[0].length||t[0].some(t=>!r(t)))&&(t=t[0]),new n(...t.map(t=>c(t)))}return Object.assign(a,{Hex:c,isValidHex:s,pointToHex:q({Point:i,Hex:c}),parallelogram:P({Grid:n,Hex:c}),triangle:w({Grid:n,Hex:c}),hexagon:m({Grid:n,Hex:c}),rectangle:H({Grid:n,Hex:c,compassToNumberDirection:u,signedModulo:o}),ring:O({Grid:n,Hex:c}),spiral:j({Grid:n,Hex:c})}),Object.assign(n.prototype,{get:l,hexesBetween:x,hexesInRange:y({isValidHex:s}),neighborsOf:p({isValidHex:s,signedModulo:o,compassToNumberDirection:u}),pointHeight:b,pointWidth:g,set:d({isValidHex:s})}),a}}({extendHex:st,Grid:$,Point:it});export{it as Point,ot as defineGrid,st as extendHex};\n//# sourceMappingURL=honeycomb.esm.min.js.map\n","import { defineGrid, extendHex } from \"honeycomb-grid\";\nexport const ourHex = (r) => extendHex({\n    size: r,\n    orientation: \"flat\",\n    alive: false,\n    neighbors: [],\n});\nexport function gridSetup(hexRadius, gridRadius) {\n    const Hex = ourHex(hexRadius);\n    const Grid = defineGrid(Hex);\n    return Grid.hexagon({ radius: gridRadius });\n}\nexport function hexagonCoords(x, y, r) {\n    const coords = [];\n    for (let a = 0; a < 6; a += (Math.PI * 2) / 6) {\n        coords.push([x + Math.cos(a) * r, y + Math.sin(a) * r]);\n    }\n    return coords;\n}\nexport function coordsToPath(coords, closed = true) {\n    let path = \"\";\n    coords.forEach((c, i) => {\n        if (i === 0) {\n            path += `M ${c[0]} ${c[1]} `;\n        }\n        path += `L ${c[0]} ${c[1]} `;\n    });\n    if (closed) {\n        path += `L ${coords[0][0]} ${coords[0][1]} `;\n    }\n    return path;\n}\n","<script lang=\"ts\">\n    import { coordsToPath, hexagonCoords } from \"./hexagon\";\n\n    export let x: number;\n    export let y: number;\n    export let r: number;\n    export let showOutline: boolean = false;\n    export let active: boolean = false;\n\n    const hex = hexagonCoords(x, y, r);\n    const path = coordsToPath(hex);\n\n    $: classed = `${showOutline && 'outline'} ${active && 'active'}`\n</script>\n\n<path d={path} on:click on:mouseenter class={classed} />\n\n<style>\n    path {\n        fill: rgba(0, 0, 0, 0);\n    }\n\n    .outline {\n        stroke:rgb(253, 34, 154);\n        stroke-width: 2px;\n        stroke-opacity: 0.2;\n    }\n    \n    path:hover {\n        fill: rgb(253, 34, 154);\n    }\n    \n    .active {\n        fill: rgb(253, 34, 154);\n    }\n</style>\n","export const neighbors = [[22, 1, 21], [23, 2, 0, 22], [24, 3, 1, 23], [25, 4, 2, 24], [26, 5, 3, 25], [27, 6, 4, 26], [28, 7, 5, 27], [29, 8, 6, 28], [30, 9, 7, 29], [31, 10, 8, 30], [32, 11, 9, 31], [33, 12, 10, 32], [34, 13, 11, 33], [35, 14, 12, 34], [36, 15, 13, 35], [37, 16, 14, 36], [38, 17, 15, 37], [39, 18, 16, 38], [40, 19, 17, 39], [41, 20, 18, 40], [42, 19, 41], [44, 22, 0, 43], [45, 23, 1, 0, 21, 44], [46, 24, 2, 1, 22, 45], [47, 25, 3, 2, 23, 46], [48, 26, 4, 3, 24, 47], [49, 27, 5, 4, 25, 48], [50, 28, 6, 5, 26, 49], [51, 29, 7, 6, 27, 50], [52, 30, 8, 7, 28, 51], [53, 31, 9, 8, 29, 52], [54, 32, 10, 9, 30, 53], [55, 33, 11, 10, 31, 54], [56, 34, 12, 11, 32, 55], [57, 35, 13, 12, 33, 56], [58, 36, 14, 13, 34, 57], [59, 37, 15, 14, 35, 58], [60, 38, 16, 15, 36, 59], [61, 39, 17, 16, 37, 60], [62, 40, 18, 17, 38, 61], [63, 41, 19, 18, 39, 62], [64, 42, 20, 19, 40, 63], [65, 20, 41, 64], [67, 44, 21, 66], [68, 45, 22, 21, 43, 67], [69, 46, 23, 22, 44, 68], [70, 47, 24, 23, 45, 69], [71, 48, 25, 24, 46, 70], [72, 49, 26, 25, 47, 71], [73, 50, 27, 26, 48, 72], [74, 51, 28, 27, 49, 73], [75, 52, 29, 28, 50, 74], [76, 53, 30, 29, 51, 75], [77, 54, 31, 30, 52, 76], [78, 55, 32, 31, 53, 77], [79, 56, 33, 32, 54, 78], [80, 57, 34, 33, 55, 79], [81, 58, 35, 34, 56, 80], [82, 59, 36, 35, 57, 81], [83, 60, 37, 36, 58, 82], [84, 61, 38, 37, 59, 83], [85, 62, 39, 38, 60, 84], [86, 63, 40, 39, 61, 85], [87, 64, 41, 40, 62, 86], [88, 65, 42, 41, 63, 87], [89, 42, 64, 88], [91, 67, 43, 90], [92, 68, 44, 43, 66, 91], [93, 69, 45, 44, 67, 92], [94, 70, 46, 45, 68, 93], [95, 71, 47, 46, 69, 94], [96, 72, 48, 47, 70, 95], [97, 73, 49, 48, 71, 96], [98, 74, 50, 49, 72, 97], [99, 75, 51, 50, 73, 98], [100, 76, 52, 51, 74, 99], [101, 77, 53, 52, 75, 100], [102, 78, 54, 53, 76, 101], [103, 79, 55, 54, 77, 102], [104, 80, 56, 55, 78, 103], [105, 81, 57, 56, 79, 104], [106, 82, 58, 57, 80, 105], [107, 83, 59, 58, 81, 106], [108, 84, 60, 59, 82, 107], [109, 85, 61, 60, 83, 108], [110, 86, 62, 61, 84, 109], [111, 87, 63, 62, 85, 110], [112, 88, 64, 63, 86, 111], [113, 89, 65, 64, 87, 112], [114, 65, 88, 113], [116, 91, 66, 115], [117, 92, 67, 66, 90, 116], [118, 93, 68, 67, 91, 117], [119, 94, 69, 68, 92, 118], [120, 95, 70, 69, 93, 119], [121, 96, 71, 70, 94, 120], [122, 97, 72, 71, 95, 121], [123, 98, 73, 72, 96, 122], [124, 99, 74, 73, 97, 123], [125, 100, 75, 74, 98, 124], [126, 101, 76, 75, 99, 125], [127, 102, 77, 76, 100, 126], [128, 103, 78, 77, 101, 127], [129, 104, 79, 78, 102, 128], [130, 105, 80, 79, 103, 129], [131, 106, 81, 80, 104, 130], [132, 107, 82, 81, 105, 131], [133, 108, 83, 82, 106, 132], [134, 109, 84, 83, 107, 133], [135, 110, 85, 84, 108, 134], [136, 111, 86, 85, 109, 135], [137, 112, 87, 86, 110, 136], [138, 113, 88, 87, 111, 137], [139, 114, 89, 88, 112, 138], [140, 89, 113, 139], [142, 116, 90, 141], [143, 117, 91, 90, 115, 142], [144, 118, 92, 91, 116, 143], [145, 119, 93, 92, 117, 144], [146, 120, 94, 93, 118, 145], [147, 121, 95, 94, 119, 146], [148, 122, 96, 95, 120, 147], [149, 123, 97, 96, 121, 148], [150, 124, 98, 97, 122, 149], [151, 125, 99, 98, 123, 150], [152, 126, 100, 99, 124, 151], [153, 127, 101, 100, 125, 152], [154, 128, 102, 101, 126, 153], [155, 129, 103, 102, 127, 154], [156, 130, 104, 103, 128, 155], [157, 131, 105, 104, 129, 156], [158, 132, 106, 105, 130, 157], [159, 133, 107, 106, 131, 158], [160, 134, 108, 107, 132, 159], [161, 135, 109, 108, 133, 160], [162, 136, 110, 109, 134, 161], [163, 137, 111, 110, 135, 162], [164, 138, 112, 111, 136, 163], [165, 139, 113, 112, 137, 164], [166, 140, 114, 113, 138, 165], [167, 114, 139, 166], [169, 142, 115, 168], [170, 143, 116, 115, 141, 169], [171, 144, 117, 116, 142, 170], [172, 145, 118, 117, 143, 171], [173, 146, 119, 118, 144, 172], [174, 147, 120, 119, 145, 173], [175, 148, 121, 120, 146, 174], [176, 149, 122, 121, 147, 175], [177, 150, 123, 122, 148, 176], [178, 151, 124, 123, 149, 177], [179, 152, 125, 124, 150, 178], [180, 153, 126, 125, 151, 179], [181, 154, 127, 126, 152, 180], [182, 155, 128, 127, 153, 181], [183, 156, 129, 128, 154, 182], [184, 157, 130, 129, 155, 183], [185, 158, 131, 130, 156, 184], [186, 159, 132, 131, 157, 185], [187, 160, 133, 132, 158, 186], [188, 161, 134, 133, 159, 187], [189, 162, 135, 134, 160, 188], [190, 163, 136, 135, 161, 189], [191, 164, 137, 136, 162, 190], [192, 165, 138, 137, 163, 191], [193, 166, 139, 138, 164, 192], [194, 167, 140, 139, 165, 193], [195, 140, 166, 194], [197, 169, 141, 196], [198, 170, 142, 141, 168, 197], [199, 171, 143, 142, 169, 198], [200, 172, 144, 143, 170, 199], [201, 173, 145, 144, 171, 200], [202, 174, 146, 145, 172, 201], [203, 175, 147, 146, 173, 202], [204, 176, 148, 147, 174, 203], [205, 177, 149, 148, 175, 204], [206, 178, 150, 149, 176, 205], [207, 179, 151, 150, 177, 206], [208, 180, 152, 151, 178, 207], [209, 181, 153, 152, 179, 208], [210, 182, 154, 153, 180, 209], [211, 183, 155, 154, 181, 210], [212, 184, 156, 155, 182, 211], [213, 185, 157, 156, 183, 212], [214, 186, 158, 157, 184, 213], [215, 187, 159, 158, 185, 214], [216, 188, 160, 159, 186, 215], [217, 189, 161, 160, 187, 216], [218, 190, 162, 161, 188, 217], [219, 191, 163, 162, 189, 218], [220, 192, 164, 163, 190, 219], [221, 193, 165, 164, 191, 220], [222, 194, 166, 165, 192, 221], [223, 195, 167, 166, 193, 222], [224, 167, 194, 223], [226, 197, 168, 225], [227, 198, 169, 168, 196, 226], [228, 199, 170, 169, 197, 227], [229, 200, 171, 170, 198, 228], [230, 201, 172, 171, 199, 229], [231, 202, 173, 172, 200, 230], [232, 203, 174, 173, 201, 231], [233, 204, 175, 174, 202, 232], [234, 205, 176, 175, 203, 233], [235, 206, 177, 176, 204, 234], [236, 207, 178, 177, 205, 235], [237, 208, 179, 178, 206, 236], [238, 209, 180, 179, 207, 237], [239, 210, 181, 180, 208, 238], [240, 211, 182, 181, 209, 239], [241, 212, 183, 182, 210, 240], [242, 213, 184, 183, 211, 241], [243, 214, 185, 184, 212, 242], [244, 215, 186, 185, 213, 243], [245, 216, 187, 186, 214, 244], [246, 217, 188, 187, 215, 245], [247, 218, 189, 188, 216, 246], [248, 219, 190, 189, 217, 247], [249, 220, 191, 190, 218, 248], [250, 221, 192, 191, 219, 249], [251, 222, 193, 192, 220, 250], [252, 223, 194, 193, 221, 251], [253, 224, 195, 194, 222, 252], [254, 195, 223, 253], [256, 226, 196, 255], [257, 227, 197, 196, 225, 256], [258, 228, 198, 197, 226, 257], [259, 229, 199, 198, 227, 258], [260, 230, 200, 199, 228, 259], [261, 231, 201, 200, 229, 260], [262, 232, 202, 201, 230, 261], [263, 233, 203, 202, 231, 262], [264, 234, 204, 203, 232, 263], [265, 235, 205, 204, 233, 264], [266, 236, 206, 205, 234, 265], [267, 237, 207, 206, 235, 266], [268, 238, 208, 207, 236, 267], [269, 239, 209, 208, 237, 268], [270, 240, 210, 209, 238, 269], [271, 241, 211, 210, 239, 270], [272, 242, 212, 211, 240, 271], [273, 243, 213, 212, 241, 272], [274, 244, 214, 213, 242, 273], [275, 245, 215, 214, 243, 274], [276, 246, 216, 215, 244, 275], [277, 247, 217, 216, 245, 276], [278, 248, 218, 217, 246, 277], [279, 249, 219, 218, 247, 278], [280, 250, 220, 219, 248, 279], [281, 251, 221, 220, 249, 280], [282, 252, 222, 221, 250, 281], [283, 253, 223, 222, 251, 282], [284, 254, 224, 223, 252, 283], [285, 224, 253, 284], [287, 256, 225, 286], [288, 257, 226, 225, 255, 287], [289, 258, 227, 226, 256, 288], [290, 259, 228, 227, 257, 289], [291, 260, 229, 228, 258, 290], [292, 261, 230, 229, 259, 291], [293, 262, 231, 230, 260, 292], [294, 263, 232, 231, 261, 293], [295, 264, 233, 232, 262, 294], [296, 265, 234, 233, 263, 295], [297, 266, 235, 234, 264, 296], [298, 267, 236, 235, 265, 297], [299, 268, 237, 236, 266, 298], [300, 269, 238, 237, 267, 299], [301, 270, 239, 238, 268, 300], [302, 271, 240, 239, 269, 301], [303, 272, 241, 240, 270, 302], [304, 273, 242, 241, 271, 303], [305, 274, 243, 242, 272, 304], [306, 275, 244, 243, 273, 305], [307, 276, 245, 244, 274, 306], [308, 277, 246, 245, 275, 307], [309, 278, 247, 246, 276, 308], [310, 279, 248, 247, 277, 309], [311, 280, 249, 248, 278, 310], [312, 281, 250, 249, 279, 311], [313, 282, 251, 250, 280, 312], [314, 283, 252, 251, 281, 313], [315, 284, 253, 252, 282, 314], [316, 285, 254, 253, 283, 315], [317, 254, 284, 316], [319, 287, 255, 318], [320, 288, 256, 255, 286, 319], [321, 289, 257, 256, 287, 320], [322, 290, 258, 257, 288, 321], [323, 291, 259, 258, 289, 322], [324, 292, 260, 259, 290, 323], [325, 293, 261, 260, 291, 324], [326, 294, 262, 261, 292, 325], [327, 295, 263, 262, 293, 326], [328, 296, 264, 263, 294, 327], [329, 297, 265, 264, 295, 328], [330, 298, 266, 265, 296, 329], [331, 299, 267, 266, 297, 330], [332, 300, 268, 267, 298, 331], [333, 301, 269, 268, 299, 332], [334, 302, 270, 269, 300, 333], [335, 303, 271, 270, 301, 334], [336, 304, 272, 271, 302, 335], [337, 305, 273, 272, 303, 336], [338, 306, 274, 273, 304, 337], [339, 307, 275, 274, 305, 338], [340, 308, 276, 275, 306, 339], [341, 309, 277, 276, 307, 340], [342, 310, 278, 277, 308, 341], [343, 311, 279, 278, 309, 342], [344, 312, 280, 279, 310, 343], [345, 313, 281, 280, 311, 344], [346, 314, 282, 281, 312, 345], [347, 315, 283, 282, 313, 346], [348, 316, 284, 283, 314, 347], [349, 317, 285, 284, 315, 348], [350, 285, 316, 349], [352, 319, 286, 351], [353, 320, 287, 286, 318, 352], [354, 321, 288, 287, 319, 353], [355, 322, 289, 288, 320, 354], [356, 323, 290, 289, 321, 355], [357, 324, 291, 290, 322, 356], [358, 325, 292, 291, 323, 357], [359, 326, 293, 292, 324, 358], [360, 327, 294, 293, 325, 359], [361, 328, 295, 294, 326, 360], [362, 329, 296, 295, 327, 361], [363, 330, 297, 296, 328, 362], [364, 331, 298, 297, 329, 363], [365, 332, 299, 298, 330, 364], [366, 333, 300, 299, 331, 365], [367, 334, 301, 300, 332, 366], [368, 335, 302, 301, 333, 367], [369, 336, 303, 302, 334, 368], [370, 337, 304, 303, 335, 369], [371, 338, 305, 304, 336, 370], [372, 339, 306, 305, 337, 371], [373, 340, 307, 306, 338, 372], [374, 341, 308, 307, 339, 373], [375, 342, 309, 308, 340, 374], [376, 343, 310, 309, 341, 375], [377, 344, 311, 310, 342, 376], [378, 345, 312, 311, 343, 377], [379, 346, 313, 312, 344, 378], [380, 347, 314, 313, 345, 379], [381, 348, 315, 314, 346, 380], [382, 349, 316, 315, 347, 381], [383, 350, 317, 316, 348, 382], [384, 317, 349, 383], [386, 352, 318, 385], [387, 353, 319, 318, 351, 386], [388, 354, 320, 319, 352, 387], [389, 355, 321, 320, 353, 388], [390, 356, 322, 321, 354, 389], [391, 357, 323, 322, 355, 390], [392, 358, 324, 323, 356, 391], [393, 359, 325, 324, 357, 392], [394, 360, 326, 325, 358, 393], [395, 361, 327, 326, 359, 394], [396, 362, 328, 327, 360, 395], [397, 363, 329, 328, 361, 396], [398, 364, 330, 329, 362, 397], [399, 365, 331, 330, 363, 398], [400, 366, 332, 331, 364, 399], [401, 367, 333, 332, 365, 400], [402, 368, 334, 333, 366, 401], [403, 369, 335, 334, 367, 402], [404, 370, 336, 335, 368, 403], [405, 371, 337, 336, 369, 404], [406, 372, 338, 337, 370, 405], [407, 373, 339, 338, 371, 406], [408, 374, 340, 339, 372, 407], [409, 375, 341, 340, 373, 408], [410, 376, 342, 341, 374, 409], [411, 377, 343, 342, 375, 410], [412, 378, 344, 343, 376, 411], [413, 379, 345, 344, 377, 412], [414, 380, 346, 345, 378, 413], [415, 381, 347, 346, 379, 414], [416, 382, 348, 347, 380, 415], [417, 383, 349, 348, 381, 416], [418, 384, 350, 349, 382, 417], [419, 350, 383, 418], [421, 386, 351, 420], [422, 387, 352, 351, 385, 421], [423, 388, 353, 352, 386, 422], [424, 389, 354, 353, 387, 423], [425, 390, 355, 354, 388, 424], [426, 391, 356, 355, 389, 425], [427, 392, 357, 356, 390, 426], [428, 393, 358, 357, 391, 427], [429, 394, 359, 358, 392, 428], [430, 395, 360, 359, 393, 429], [431, 396, 361, 360, 394, 430], [432, 397, 362, 361, 395, 431], [433, 398, 363, 362, 396, 432], [434, 399, 364, 363, 397, 433], [435, 400, 365, 364, 398, 434], [436, 401, 366, 365, 399, 435], [437, 402, 367, 366, 400, 436], [438, 403, 368, 367, 401, 437], [439, 404, 369, 368, 402, 438], [440, 405, 370, 369, 403, 439], [441, 406, 371, 370, 404, 440], [442, 407, 372, 371, 405, 441], [443, 408, 373, 372, 406, 442], [444, 409, 374, 373, 407, 443], [445, 410, 375, 374, 408, 444], [446, 411, 376, 375, 409, 445], [447, 412, 377, 376, 410, 446], [448, 413, 378, 377, 411, 447], [449, 414, 379, 378, 412, 448], [450, 415, 380, 379, 413, 449], [451, 416, 381, 380, 414, 450], [452, 417, 382, 381, 415, 451], [453, 418, 383, 382, 416, 452], [454, 419, 384, 383, 417, 453], [455, 384, 418, 454], [457, 421, 385, 456], [458, 422, 386, 385, 420, 457], [459, 423, 387, 386, 421, 458], [460, 424, 388, 387, 422, 459], [461, 425, 389, 388, 423, 460], [462, 426, 390, 389, 424, 461], [463, 427, 391, 390, 425, 462], [464, 428, 392, 391, 426, 463], [465, 429, 393, 392, 427, 464], [466, 430, 394, 393, 428, 465], [467, 431, 395, 394, 429, 466], [468, 432, 396, 395, 430, 467], [469, 433, 397, 396, 431, 468], [470, 434, 398, 397, 432, 469], [471, 435, 399, 398, 433, 470], [472, 436, 400, 399, 434, 471], [473, 437, 401, 400, 435, 472], [474, 438, 402, 401, 436, 473], [475, 439, 403, 402, 437, 474], [476, 440, 404, 403, 438, 475], [477, 441, 405, 404, 439, 476], [478, 442, 406, 405, 440, 477], [479, 443, 407, 406, 441, 478], [480, 444, 408, 407, 442, 479], [481, 445, 409, 408, 443, 480], [482, 446, 410, 409, 444, 481], [483, 447, 411, 410, 445, 482], [484, 448, 412, 411, 446, 483], [485, 449, 413, 412, 447, 484], [486, 450, 414, 413, 448, 485], [487, 451, 415, 414, 449, 486], [488, 452, 416, 415, 450, 487], [489, 453, 417, 416, 451, 488], [490, 454, 418, 417, 452, 489], [491, 455, 419, 418, 453, 490], [492, 419, 454, 491], [494, 457, 420, 493], [495, 458, 421, 420, 456, 494], [496, 459, 422, 421, 457, 495], [497, 460, 423, 422, 458, 496], [498, 461, 424, 423, 459, 497], [499, 462, 425, 424, 460, 498], [500, 463, 426, 425, 461, 499], [501, 464, 427, 426, 462, 500], [502, 465, 428, 427, 463, 501], [503, 466, 429, 428, 464, 502], [504, 467, 430, 429, 465, 503], [505, 468, 431, 430, 466, 504], [506, 469, 432, 431, 467, 505], [507, 470, 433, 432, 468, 506], [508, 471, 434, 433, 469, 507], [509, 472, 435, 434, 470, 508], [510, 473, 436, 435, 471, 509], [511, 474, 437, 436, 472, 510], [512, 475, 438, 437, 473, 511], [513, 476, 439, 438, 474, 512], [514, 477, 440, 439, 475, 513], [515, 478, 441, 440, 476, 514], [516, 479, 442, 441, 477, 515], [517, 480, 443, 442, 478, 516], [518, 481, 444, 443, 479, 517], [519, 482, 445, 444, 480, 518], [520, 483, 446, 445, 481, 519], [521, 484, 447, 446, 482, 520], [522, 485, 448, 447, 483, 521], [523, 486, 449, 448, 484, 522], [524, 487, 450, 449, 485, 523], [525, 488, 451, 450, 486, 524], [526, 489, 452, 451, 487, 525], [527, 490, 453, 452, 488, 526], [528, 491, 454, 453, 489, 527], [529, 492, 455, 454, 490, 528], [530, 455, 491, 529], [532, 494, 456, 531], [533, 495, 457, 456, 493, 532], [534, 496, 458, 457, 494, 533], [535, 497, 459, 458, 495, 534], [536, 498, 460, 459, 496, 535], [537, 499, 461, 460, 497, 536], [538, 500, 462, 461, 498, 537], [539, 501, 463, 462, 499, 538], [540, 502, 464, 463, 500, 539], [541, 503, 465, 464, 501, 540], [542, 504, 466, 465, 502, 541], [543, 505, 467, 466, 503, 542], [544, 506, 468, 467, 504, 543], [545, 507, 469, 468, 505, 544], [546, 508, 470, 469, 506, 545], [547, 509, 471, 470, 507, 546], [548, 510, 472, 471, 508, 547], [549, 511, 473, 472, 509, 548], [550, 512, 474, 473, 510, 549], [551, 513, 475, 474, 511, 550], [552, 514, 476, 475, 512, 551], [553, 515, 477, 476, 513, 552], [554, 516, 478, 477, 514, 553], [555, 517, 479, 478, 515, 554], [556, 518, 480, 479, 516, 555], [557, 519, 481, 480, 517, 556], [558, 520, 482, 481, 518, 557], [559, 521, 483, 482, 519, 558], [560, 522, 484, 483, 520, 559], [561, 523, 485, 484, 521, 560], [562, 524, 486, 485, 522, 561], [563, 525, 487, 486, 523, 562], [564, 526, 488, 487, 524, 563], [565, 527, 489, 488, 525, 564], [566, 528, 490, 489, 526, 565], [567, 529, 491, 490, 527, 566], [568, 530, 492, 491, 528, 567], [569, 492, 529, 568], [571, 532, 493, 570], [572, 533, 494, 493, 531, 571], [573, 534, 495, 494, 532, 572], [574, 535, 496, 495, 533, 573], [575, 536, 497, 496, 534, 574], [576, 537, 498, 497, 535, 575], [577, 538, 499, 498, 536, 576], [578, 539, 500, 499, 537, 577], [579, 540, 501, 500, 538, 578], [580, 541, 502, 501, 539, 579], [581, 542, 503, 502, 540, 580], [582, 543, 504, 503, 541, 581], [583, 544, 505, 504, 542, 582], [584, 545, 506, 505, 543, 583], [585, 546, 507, 506, 544, 584], [586, 547, 508, 507, 545, 585], [587, 548, 509, 508, 546, 586], [588, 549, 510, 509, 547, 587], [589, 550, 511, 510, 548, 588], [590, 551, 512, 511, 549, 589], [591, 552, 513, 512, 550, 590], [592, 553, 514, 513, 551, 591], [593, 554, 515, 514, 552, 592], [594, 555, 516, 515, 553, 593], [595, 556, 517, 516, 554, 594], [596, 557, 518, 517, 555, 595], [597, 558, 519, 518, 556, 596], [598, 559, 520, 519, 557, 597], [599, 560, 521, 520, 558, 598], [600, 561, 522, 521, 559, 599], [601, 562, 523, 522, 560, 600], [602, 563, 524, 523, 561, 601], [603, 564, 525, 524, 562, 602], [604, 565, 526, 525, 563, 603], [605, 566, 527, 526, 564, 604], [606, 567, 528, 527, 565, 605], [607, 568, 529, 528, 566, 606], [608, 569, 530, 529, 567, 607], [609, 530, 568, 608], [611, 571, 531, 610], [612, 572, 532, 531, 570, 611], [613, 573, 533, 532, 571, 612], [614, 574, 534, 533, 572, 613], [615, 575, 535, 534, 573, 614], [616, 576, 536, 535, 574, 615], [617, 577, 537, 536, 575, 616], [618, 578, 538, 537, 576, 617], [619, 579, 539, 538, 577, 618], [620, 580, 540, 539, 578, 619], [621, 581, 541, 540, 579, 620], [622, 582, 542, 541, 580, 621], [623, 583, 543, 542, 581, 622], [624, 584, 544, 543, 582, 623], [625, 585, 545, 544, 583, 624], [626, 586, 546, 545, 584, 625], [627, 587, 547, 546, 585, 626], [628, 588, 548, 547, 586, 627], [629, 589, 549, 548, 587, 628], [630, 590, 550, 549, 588, 629], [631, 591, 551, 550, 589, 630], [632, 592, 552, 551, 590, 631], [633, 593, 553, 552, 591, 632], [634, 594, 554, 553, 592, 633], [635, 595, 555, 554, 593, 634], [636, 596, 556, 555, 594, 635], [637, 597, 557, 556, 595, 636], [638, 598, 558, 557, 596, 637], [639, 599, 559, 558, 597, 638], [640, 600, 560, 559, 598, 639], [641, 601, 561, 560, 599, 640], [642, 602, 562, 561, 600, 641], [643, 603, 563, 562, 601, 642], [644, 604, 564, 563, 602, 643], [645, 605, 565, 564, 603, 644], [646, 606, 566, 565, 604, 645], [647, 607, 567, 566, 605, 646], [648, 608, 568, 567, 606, 647], [649, 609, 569, 568, 607, 648], [650, 569, 608, 649], [651, 611, 570], [652, 612, 571, 570, 610, 651], [653, 613, 572, 571, 611, 652], [654, 614, 573, 572, 612, 653], [655, 615, 574, 573, 613, 654], [656, 616, 575, 574, 614, 655], [657, 617, 576, 575, 615, 656], [658, 618, 577, 576, 616, 657], [659, 619, 578, 577, 617, 658], [660, 620, 579, 578, 618, 659], [661, 621, 580, 579, 619, 660], [662, 622, 581, 580, 620, 661], [663, 623, 582, 581, 621, 662], [664, 624, 583, 582, 622, 663], [665, 625, 584, 583, 623, 664], [666, 626, 585, 584, 624, 665], [667, 627, 586, 585, 625, 666], [668, 628, 587, 586, 626, 667], [669, 629, 588, 587, 627, 668], [670, 630, 589, 588, 628, 669], [671, 631, 590, 589, 629, 670], [672, 632, 591, 590, 630, 671], [673, 633, 592, 591, 631, 672], [674, 634, 593, 592, 632, 673], [675, 635, 594, 593, 633, 674], [676, 636, 595, 594, 634, 675], [677, 637, 596, 595, 635, 676], [678, 638, 597, 596, 636, 677], [679, 639, 598, 597, 637, 678], [680, 640, 599, 598, 638, 679], [681, 641, 600, 599, 639, 680], [682, 642, 601, 600, 640, 681], [683, 643, 602, 601, 641, 682], [684, 644, 603, 602, 642, 683], [685, 645, 604, 603, 643, 684], [686, 646, 605, 604, 644, 685], [687, 647, 606, 605, 645, 686], [688, 648, 607, 606, 646, 687], [689, 649, 608, 607, 647, 688], [690, 650, 609, 608, 648, 689], [609, 649, 690], [691, 652, 611, 610], [692, 653, 612, 611, 651, 691], [693, 654, 613, 612, 652, 692], [694, 655, 614, 613, 653, 693], [695, 656, 615, 614, 654, 694], [696, 657, 616, 615, 655, 695], [697, 658, 617, 616, 656, 696], [698, 659, 618, 617, 657, 697], [699, 660, 619, 618, 658, 698], [700, 661, 620, 619, 659, 699], [701, 662, 621, 620, 660, 700], [702, 663, 622, 621, 661, 701], [703, 664, 623, 622, 662, 702], [704, 665, 624, 623, 663, 703], [705, 666, 625, 624, 664, 704], [706, 667, 626, 625, 665, 705], [707, 668, 627, 626, 666, 706], [708, 669, 628, 627, 667, 707], [709, 670, 629, 628, 668, 708], [710, 671, 630, 629, 669, 709], [711, 672, 631, 630, 670, 710], [712, 673, 632, 631, 671, 711], [713, 674, 633, 632, 672, 712], [714, 675, 634, 633, 673, 713], [715, 676, 635, 634, 674, 714], [716, 677, 636, 635, 675, 715], [717, 678, 637, 636, 676, 716], [718, 679, 638, 637, 677, 717], [719, 680, 639, 638, 678, 718], [720, 681, 640, 639, 679, 719], [721, 682, 641, 640, 680, 720], [722, 683, 642, 641, 681, 721], [723, 684, 643, 642, 682, 722], [724, 685, 644, 643, 683, 723], [725, 686, 645, 644, 684, 724], [726, 687, 646, 645, 685, 725], [727, 688, 647, 646, 686, 726], [728, 689, 648, 647, 687, 727], [729, 690, 649, 648, 688, 728], [650, 649, 689, 729], [730, 692, 652, 651], [731, 693, 653, 652, 691, 730], [732, 694, 654, 653, 692, 731], [733, 695, 655, 654, 693, 732], [734, 696, 656, 655, 694, 733], [735, 697, 657, 656, 695, 734], [736, 698, 658, 657, 696, 735], [737, 699, 659, 658, 697, 736], [738, 700, 660, 659, 698, 737], [739, 701, 661, 660, 699, 738], [740, 702, 662, 661, 700, 739], [741, 703, 663, 662, 701, 740], [742, 704, 664, 663, 702, 741], [743, 705, 665, 664, 703, 742], [744, 706, 666, 665, 704, 743], [745, 707, 667, 666, 705, 744], [746, 708, 668, 667, 706, 745], [747, 709, 669, 668, 707, 746], [748, 710, 670, 669, 708, 747], [749, 711, 671, 670, 709, 748], [750, 712, 672, 671, 710, 749], [751, 713, 673, 672, 711, 750], [752, 714, 674, 673, 712, 751], [753, 715, 675, 674, 713, 752], [754, 716, 676, 675, 714, 753], [755, 717, 677, 676, 715, 754], [756, 718, 678, 677, 716, 755], [757, 719, 679, 678, 717, 756], [758, 720, 680, 679, 718, 757], [759, 721, 681, 680, 719, 758], [760, 722, 682, 681, 720, 759], [761, 723, 683, 682, 721, 760], [762, 724, 684, 683, 722, 761], [763, 725, 685, 684, 723, 762], [764, 726, 686, 685, 724, 763], [765, 727, 687, 686, 725, 764], [766, 728, 688, 687, 726, 765], [767, 729, 689, 688, 727, 766], [690, 689, 728, 767], [768, 731, 692, 691], [769, 732, 693, 692, 730, 768], [770, 733, 694, 693, 731, 769], [771, 734, 695, 694, 732, 770], [772, 735, 696, 695, 733, 771], [773, 736, 697, 696, 734, 772], [774, 737, 698, 697, 735, 773], [775, 738, 699, 698, 736, 774], [776, 739, 700, 699, 737, 775], [777, 740, 701, 700, 738, 776], [778, 741, 702, 701, 739, 777], [779, 742, 703, 702, 740, 778], [780, 743, 704, 703, 741, 779], [781, 744, 705, 704, 742, 780], [782, 745, 706, 705, 743, 781], [783, 746, 707, 706, 744, 782], [784, 747, 708, 707, 745, 783], [785, 748, 709, 708, 746, 784], [786, 749, 710, 709, 747, 785], [787, 750, 711, 710, 748, 786], [788, 751, 712, 711, 749, 787], [789, 752, 713, 712, 750, 788], [790, 753, 714, 713, 751, 789], [791, 754, 715, 714, 752, 790], [792, 755, 716, 715, 753, 791], [793, 756, 717, 716, 754, 792], [794, 757, 718, 717, 755, 793], [795, 758, 719, 718, 756, 794], [796, 759, 720, 719, 757, 795], [797, 760, 721, 720, 758, 796], [798, 761, 722, 721, 759, 797], [799, 762, 723, 722, 760, 798], [800, 763, 724, 723, 761, 799], [801, 764, 725, 724, 762, 800], [802, 765, 726, 725, 763, 801], [803, 766, 727, 726, 764, 802], [804, 767, 728, 727, 765, 803], [729, 728, 766, 804], [805, 769, 731, 730], [806, 770, 732, 731, 768, 805], [807, 771, 733, 732, 769, 806], [808, 772, 734, 733, 770, 807], [809, 773, 735, 734, 771, 808], [810, 774, 736, 735, 772, 809], [811, 775, 737, 736, 773, 810], [812, 776, 738, 737, 774, 811], [813, 777, 739, 738, 775, 812], [814, 778, 740, 739, 776, 813], [815, 779, 741, 740, 777, 814], [816, 780, 742, 741, 778, 815], [817, 781, 743, 742, 779, 816], [818, 782, 744, 743, 780, 817], [819, 783, 745, 744, 781, 818], [820, 784, 746, 745, 782, 819], [821, 785, 747, 746, 783, 820], [822, 786, 748, 747, 784, 821], [823, 787, 749, 748, 785, 822], [824, 788, 750, 749, 786, 823], [825, 789, 751, 750, 787, 824], [826, 790, 752, 751, 788, 825], [827, 791, 753, 752, 789, 826], [828, 792, 754, 753, 790, 827], [829, 793, 755, 754, 791, 828], [830, 794, 756, 755, 792, 829], [831, 795, 757, 756, 793, 830], [832, 796, 758, 757, 794, 831], [833, 797, 759, 758, 795, 832], [834, 798, 760, 759, 796, 833], [835, 799, 761, 760, 797, 834], [836, 800, 762, 761, 798, 835], [837, 801, 763, 762, 799, 836], [838, 802, 764, 763, 800, 837], [839, 803, 765, 764, 801, 838], [840, 804, 766, 765, 802, 839], [767, 766, 803, 840], [841, 806, 769, 768], [842, 807, 770, 769, 805, 841], [843, 808, 771, 770, 806, 842], [844, 809, 772, 771, 807, 843], [845, 810, 773, 772, 808, 844], [846, 811, 774, 773, 809, 845], [847, 812, 775, 774, 810, 846], [848, 813, 776, 775, 811, 847], [849, 814, 777, 776, 812, 848], [850, 815, 778, 777, 813, 849], [851, 816, 779, 778, 814, 850], [852, 817, 780, 779, 815, 851], [853, 818, 781, 780, 816, 852], [854, 819, 782, 781, 817, 853], [855, 820, 783, 782, 818, 854], [856, 821, 784, 783, 819, 855], [857, 822, 785, 784, 820, 856], [858, 823, 786, 785, 821, 857], [859, 824, 787, 786, 822, 858], [860, 825, 788, 787, 823, 859], [861, 826, 789, 788, 824, 860], [862, 827, 790, 789, 825, 861], [863, 828, 791, 790, 826, 862], [864, 829, 792, 791, 827, 863], [865, 830, 793, 792, 828, 864], [866, 831, 794, 793, 829, 865], [867, 832, 795, 794, 830, 866], [868, 833, 796, 795, 831, 867], [869, 834, 797, 796, 832, 868], [870, 835, 798, 797, 833, 869], [871, 836, 799, 798, 834, 870], [872, 837, 800, 799, 835, 871], [873, 838, 801, 800, 836, 872], [874, 839, 802, 801, 837, 873], [875, 840, 803, 802, 838, 874], [804, 803, 839, 875], [876, 842, 806, 805], [877, 843, 807, 806, 841, 876], [878, 844, 808, 807, 842, 877], [879, 845, 809, 808, 843, 878], [880, 846, 810, 809, 844, 879], [881, 847, 811, 810, 845, 880], [882, 848, 812, 811, 846, 881], [883, 849, 813, 812, 847, 882], [884, 850, 814, 813, 848, 883], [885, 851, 815, 814, 849, 884], [886, 852, 816, 815, 850, 885], [887, 853, 817, 816, 851, 886], [888, 854, 818, 817, 852, 887], [889, 855, 819, 818, 853, 888], [890, 856, 820, 819, 854, 889], [891, 857, 821, 820, 855, 890], [892, 858, 822, 821, 856, 891], [893, 859, 823, 822, 857, 892], [894, 860, 824, 823, 858, 893], [895, 861, 825, 824, 859, 894], [896, 862, 826, 825, 860, 895], [897, 863, 827, 826, 861, 896], [898, 864, 828, 827, 862, 897], [899, 865, 829, 828, 863, 898], [900, 866, 830, 829, 864, 899], [901, 867, 831, 830, 865, 900], [902, 868, 832, 831, 866, 901], [903, 869, 833, 832, 867, 902], [904, 870, 834, 833, 868, 903], [905, 871, 835, 834, 869, 904], [906, 872, 836, 835, 870, 905], [907, 873, 837, 836, 871, 906], [908, 874, 838, 837, 872, 907], [909, 875, 839, 838, 873, 908], [840, 839, 874, 909], [910, 877, 842, 841], [911, 878, 843, 842, 876, 910], [912, 879, 844, 843, 877, 911], [913, 880, 845, 844, 878, 912], [914, 881, 846, 845, 879, 913], [915, 882, 847, 846, 880, 914], [916, 883, 848, 847, 881, 915], [917, 884, 849, 848, 882, 916], [918, 885, 850, 849, 883, 917], [919, 886, 851, 850, 884, 918], [920, 887, 852, 851, 885, 919], [921, 888, 853, 852, 886, 920], [922, 889, 854, 853, 887, 921], [923, 890, 855, 854, 888, 922], [924, 891, 856, 855, 889, 923], [925, 892, 857, 856, 890, 924], [926, 893, 858, 857, 891, 925], [927, 894, 859, 858, 892, 926], [928, 895, 860, 859, 893, 927], [929, 896, 861, 860, 894, 928], [930, 897, 862, 861, 895, 929], [931, 898, 863, 862, 896, 930], [932, 899, 864, 863, 897, 931], [933, 900, 865, 864, 898, 932], [934, 901, 866, 865, 899, 933], [935, 902, 867, 866, 900, 934], [936, 903, 868, 867, 901, 935], [937, 904, 869, 868, 902, 936], [938, 905, 870, 869, 903, 937], [939, 906, 871, 870, 904, 938], [940, 907, 872, 871, 905, 939], [941, 908, 873, 872, 906, 940], [942, 909, 874, 873, 907, 941], [875, 874, 908, 942], [943, 911, 877, 876], [944, 912, 878, 877, 910, 943], [945, 913, 879, 878, 911, 944], [946, 914, 880, 879, 912, 945], [947, 915, 881, 880, 913, 946], [948, 916, 882, 881, 914, 947], [949, 917, 883, 882, 915, 948], [950, 918, 884, 883, 916, 949], [951, 919, 885, 884, 917, 950], [952, 920, 886, 885, 918, 951], [953, 921, 887, 886, 919, 952], [954, 922, 888, 887, 920, 953], [955, 923, 889, 888, 921, 954], [956, 924, 890, 889, 922, 955], [957, 925, 891, 890, 923, 956], [958, 926, 892, 891, 924, 957], [959, 927, 893, 892, 925, 958], [960, 928, 894, 893, 926, 959], [961, 929, 895, 894, 927, 960], [962, 930, 896, 895, 928, 961], [963, 931, 897, 896, 929, 962], [964, 932, 898, 897, 930, 963], [965, 933, 899, 898, 931, 964], [966, 934, 900, 899, 932, 965], [967, 935, 901, 900, 933, 966], [968, 936, 902, 901, 934, 967], [969, 937, 903, 902, 935, 968], [970, 938, 904, 903, 936, 969], [971, 939, 905, 904, 937, 970], [972, 940, 906, 905, 938, 971], [973, 941, 907, 906, 939, 972], [974, 942, 908, 907, 940, 973], [909, 908, 941, 974], [975, 944, 911, 910], [976, 945, 912, 911, 943, 975], [977, 946, 913, 912, 944, 976], [978, 947, 914, 913, 945, 977], [979, 948, 915, 914, 946, 978], [980, 949, 916, 915, 947, 979], [981, 950, 917, 916, 948, 980], [982, 951, 918, 917, 949, 981], [983, 952, 919, 918, 950, 982], [984, 953, 920, 919, 951, 983], [985, 954, 921, 920, 952, 984], [986, 955, 922, 921, 953, 985], [987, 956, 923, 922, 954, 986], [988, 957, 924, 923, 955, 987], [989, 958, 925, 924, 956, 988], [990, 959, 926, 925, 957, 989], [991, 960, 927, 926, 958, 990], [992, 961, 928, 927, 959, 991], [993, 962, 929, 928, 960, 992], [994, 963, 930, 929, 961, 993], [995, 964, 931, 930, 962, 994], [996, 965, 932, 931, 963, 995], [997, 966, 933, 932, 964, 996], [998, 967, 934, 933, 965, 997], [999, 968, 935, 934, 966, 998], [1000, 969, 936, 935, 967, 999], [1001, 970, 937, 936, 968, 1000], [1002, 971, 938, 937, 969, 1001], [1003, 972, 939, 938, 970, 1002], [1004, 973, 940, 939, 971, 1003], [1005, 974, 941, 940, 972, 1004], [942, 941, 973, 1005], [1006, 976, 944, 943], [1007, 977, 945, 944, 975, 1006], [1008, 978, 946, 945, 976, 1007], [1009, 979, 947, 946, 977, 1008], [1010, 980, 948, 947, 978, 1009], [1011, 981, 949, 948, 979, 1010], [1012, 982, 950, 949, 980, 1011], [1013, 983, 951, 950, 981, 1012], [1014, 984, 952, 951, 982, 1013], [1015, 985, 953, 952, 983, 1014], [1016, 986, 954, 953, 984, 1015], [1017, 987, 955, 954, 985, 1016], [1018, 988, 956, 955, 986, 1017], [1019, 989, 957, 956, 987, 1018], [1020, 990, 958, 957, 988, 1019], [1021, 991, 959, 958, 989, 1020], [1022, 992, 960, 959, 990, 1021], [1023, 993, 961, 960, 991, 1022], [1024, 994, 962, 961, 992, 1023], [1025, 995, 963, 962, 993, 1024], [1026, 996, 964, 963, 994, 1025], [1027, 997, 965, 964, 995, 1026], [1028, 998, 966, 965, 996, 1027], [1029, 999, 967, 966, 997, 1028], [1030, 1000, 968, 967, 998, 1029], [1031, 1001, 969, 968, 999, 1030], [1032, 1002, 970, 969, 1000, 1031], [1033, 1003, 971, 970, 1001, 1032], [1034, 1004, 972, 971, 1002, 1033], [1035, 1005, 973, 972, 1003, 1034], [974, 973, 1004, 1035], [1036, 1007, 976, 975], [1037, 1008, 977, 976, 1006, 1036], [1038, 1009, 978, 977, 1007, 1037], [1039, 1010, 979, 978, 1008, 1038], [1040, 1011, 980, 979, 1009, 1039], [1041, 1012, 981, 980, 1010, 1040], [1042, 1013, 982, 981, 1011, 1041], [1043, 1014, 983, 982, 1012, 1042], [1044, 1015, 984, 983, 1013, 1043], [1045, 1016, 985, 984, 1014, 1044], [1046, 1017, 986, 985, 1015, 1045], [1047, 1018, 987, 986, 1016, 1046], [1048, 1019, 988, 987, 1017, 1047], [1049, 1020, 989, 988, 1018, 1048], [1050, 1021, 990, 989, 1019, 1049], [1051, 1022, 991, 990, 1020, 1050], [1052, 1023, 992, 991, 1021, 1051], [1053, 1024, 993, 992, 1022, 1052], [1054, 1025, 994, 993, 1023, 1053], [1055, 1026, 995, 994, 1024, 1054], [1056, 1027, 996, 995, 1025, 1055], [1057, 1028, 997, 996, 1026, 1056], [1058, 1029, 998, 997, 1027, 1057], [1059, 1030, 999, 998, 1028, 1058], [1060, 1031, 1000, 999, 1029, 1059], [1061, 1032, 1001, 1000, 1030, 1060], [1062, 1033, 1002, 1001, 1031, 1061], [1063, 1034, 1003, 1002, 1032, 1062], [1064, 1035, 1004, 1003, 1033, 1063], [1005, 1004, 1034, 1064], [1065, 1037, 1007, 1006], [1066, 1038, 1008, 1007, 1036, 1065], [1067, 1039, 1009, 1008, 1037, 1066], [1068, 1040, 1010, 1009, 1038, 1067], [1069, 1041, 1011, 1010, 1039, 1068], [1070, 1042, 1012, 1011, 1040, 1069], [1071, 1043, 1013, 1012, 1041, 1070], [1072, 1044, 1014, 1013, 1042, 1071], [1073, 1045, 1015, 1014, 1043, 1072], [1074, 1046, 1016, 1015, 1044, 1073], [1075, 1047, 1017, 1016, 1045, 1074], [1076, 1048, 1018, 1017, 1046, 1075], [1077, 1049, 1019, 1018, 1047, 1076], [1078, 1050, 1020, 1019, 1048, 1077], [1079, 1051, 1021, 1020, 1049, 1078], [1080, 1052, 1022, 1021, 1050, 1079], [1081, 1053, 1023, 1022, 1051, 1080], [1082, 1054, 1024, 1023, 1052, 1081], [1083, 1055, 1025, 1024, 1053, 1082], [1084, 1056, 1026, 1025, 1054, 1083], [1085, 1057, 1027, 1026, 1055, 1084], [1086, 1058, 1028, 1027, 1056, 1085], [1087, 1059, 1029, 1028, 1057, 1086], [1088, 1060, 1030, 1029, 1058, 1087], [1089, 1061, 1031, 1030, 1059, 1088], [1090, 1062, 1032, 1031, 1060, 1089], [1091, 1063, 1033, 1032, 1061, 1090], [1092, 1064, 1034, 1033, 1062, 1091], [1035, 1034, 1063, 1092], [1093, 1066, 1037, 1036], [1094, 1067, 1038, 1037, 1065, 1093], [1095, 1068, 1039, 1038, 1066, 1094], [1096, 1069, 1040, 1039, 1067, 1095], [1097, 1070, 1041, 1040, 1068, 1096], [1098, 1071, 1042, 1041, 1069, 1097], [1099, 1072, 1043, 1042, 1070, 1098], [1100, 1073, 1044, 1043, 1071, 1099], [1101, 1074, 1045, 1044, 1072, 1100], [1102, 1075, 1046, 1045, 1073, 1101], [1103, 1076, 1047, 1046, 1074, 1102], [1104, 1077, 1048, 1047, 1075, 1103], [1105, 1078, 1049, 1048, 1076, 1104], [1106, 1079, 1050, 1049, 1077, 1105], [1107, 1080, 1051, 1050, 1078, 1106], [1108, 1081, 1052, 1051, 1079, 1107], [1109, 1082, 1053, 1052, 1080, 1108], [1110, 1083, 1054, 1053, 1081, 1109], [1111, 1084, 1055, 1054, 1082, 1110], [1112, 1085, 1056, 1055, 1083, 1111], [1113, 1086, 1057, 1056, 1084, 1112], [1114, 1087, 1058, 1057, 1085, 1113], [1115, 1088, 1059, 1058, 1086, 1114], [1116, 1089, 1060, 1059, 1087, 1115], [1117, 1090, 1061, 1060, 1088, 1116], [1118, 1091, 1062, 1061, 1089, 1117], [1119, 1092, 1063, 1062, 1090, 1118], [1064, 1063, 1091, 1119], [1120, 1094, 1066, 1065], [1121, 1095, 1067, 1066, 1093, 1120], [1122, 1096, 1068, 1067, 1094, 1121], [1123, 1097, 1069, 1068, 1095, 1122], [1124, 1098, 1070, 1069, 1096, 1123], [1125, 1099, 1071, 1070, 1097, 1124], [1126, 1100, 1072, 1071, 1098, 1125], [1127, 1101, 1073, 1072, 1099, 1126], [1128, 1102, 1074, 1073, 1100, 1127], [1129, 1103, 1075, 1074, 1101, 1128], [1130, 1104, 1076, 1075, 1102, 1129], [1131, 1105, 1077, 1076, 1103, 1130], [1132, 1106, 1078, 1077, 1104, 1131], [1133, 1107, 1079, 1078, 1105, 1132], [1134, 1108, 1080, 1079, 1106, 1133], [1135, 1109, 1081, 1080, 1107, 1134], [1136, 1110, 1082, 1081, 1108, 1135], [1137, 1111, 1083, 1082, 1109, 1136], [1138, 1112, 1084, 1083, 1110, 1137], [1139, 1113, 1085, 1084, 1111, 1138], [1140, 1114, 1086, 1085, 1112, 1139], [1141, 1115, 1087, 1086, 1113, 1140], [1142, 1116, 1088, 1087, 1114, 1141], [1143, 1117, 1089, 1088, 1115, 1142], [1144, 1118, 1090, 1089, 1116, 1143], [1145, 1119, 1091, 1090, 1117, 1144], [1092, 1091, 1118, 1145], [1146, 1121, 1094, 1093], [1147, 1122, 1095, 1094, 1120, 1146], [1148, 1123, 1096, 1095, 1121, 1147], [1149, 1124, 1097, 1096, 1122, 1148], [1150, 1125, 1098, 1097, 1123, 1149], [1151, 1126, 1099, 1098, 1124, 1150], [1152, 1127, 1100, 1099, 1125, 1151], [1153, 1128, 1101, 1100, 1126, 1152], [1154, 1129, 1102, 1101, 1127, 1153], [1155, 1130, 1103, 1102, 1128, 1154], [1156, 1131, 1104, 1103, 1129, 1155], [1157, 1132, 1105, 1104, 1130, 1156], [1158, 1133, 1106, 1105, 1131, 1157], [1159, 1134, 1107, 1106, 1132, 1158], [1160, 1135, 1108, 1107, 1133, 1159], [1161, 1136, 1109, 1108, 1134, 1160], [1162, 1137, 1110, 1109, 1135, 1161], [1163, 1138, 1111, 1110, 1136, 1162], [1164, 1139, 1112, 1111, 1137, 1163], [1165, 1140, 1113, 1112, 1138, 1164], [1166, 1141, 1114, 1113, 1139, 1165], [1167, 1142, 1115, 1114, 1140, 1166], [1168, 1143, 1116, 1115, 1141, 1167], [1169, 1144, 1117, 1116, 1142, 1168], [1170, 1145, 1118, 1117, 1143, 1169], [1119, 1118, 1144, 1170], [1171, 1147, 1121, 1120], [1172, 1148, 1122, 1121, 1146, 1171], [1173, 1149, 1123, 1122, 1147, 1172], [1174, 1150, 1124, 1123, 1148, 1173], [1175, 1151, 1125, 1124, 1149, 1174], [1176, 1152, 1126, 1125, 1150, 1175], [1177, 1153, 1127, 1126, 1151, 1176], [1178, 1154, 1128, 1127, 1152, 1177], [1179, 1155, 1129, 1128, 1153, 1178], [1180, 1156, 1130, 1129, 1154, 1179], [1181, 1157, 1131, 1130, 1155, 1180], [1182, 1158, 1132, 1131, 1156, 1181], [1183, 1159, 1133, 1132, 1157, 1182], [1184, 1160, 1134, 1133, 1158, 1183], [1185, 1161, 1135, 1134, 1159, 1184], [1186, 1162, 1136, 1135, 1160, 1185], [1187, 1163, 1137, 1136, 1161, 1186], [1188, 1164, 1138, 1137, 1162, 1187], [1189, 1165, 1139, 1138, 1163, 1188], [1190, 1166, 1140, 1139, 1164, 1189], [1191, 1167, 1141, 1140, 1165, 1190], [1192, 1168, 1142, 1141, 1166, 1191], [1193, 1169, 1143, 1142, 1167, 1192], [1194, 1170, 1144, 1143, 1168, 1193], [1145, 1144, 1169, 1194], [1195, 1172, 1147, 1146], [1196, 1173, 1148, 1147, 1171, 1195], [1197, 1174, 1149, 1148, 1172, 1196], [1198, 1175, 1150, 1149, 1173, 1197], [1199, 1176, 1151, 1150, 1174, 1198], [1200, 1177, 1152, 1151, 1175, 1199], [1201, 1178, 1153, 1152, 1176, 1200], [1202, 1179, 1154, 1153, 1177, 1201], [1203, 1180, 1155, 1154, 1178, 1202], [1204, 1181, 1156, 1155, 1179, 1203], [1205, 1182, 1157, 1156, 1180, 1204], [1206, 1183, 1158, 1157, 1181, 1205], [1207, 1184, 1159, 1158, 1182, 1206], [1208, 1185, 1160, 1159, 1183, 1207], [1209, 1186, 1161, 1160, 1184, 1208], [1210, 1187, 1162, 1161, 1185, 1209], [1211, 1188, 1163, 1162, 1186, 1210], [1212, 1189, 1164, 1163, 1187, 1211], [1213, 1190, 1165, 1164, 1188, 1212], [1214, 1191, 1166, 1165, 1189, 1213], [1215, 1192, 1167, 1166, 1190, 1214], [1216, 1193, 1168, 1167, 1191, 1215], [1217, 1194, 1169, 1168, 1192, 1216], [1170, 1169, 1193, 1217], [1218, 1196, 1172, 1171], [1219, 1197, 1173, 1172, 1195, 1218], [1220, 1198, 1174, 1173, 1196, 1219], [1221, 1199, 1175, 1174, 1197, 1220], [1222, 1200, 1176, 1175, 1198, 1221], [1223, 1201, 1177, 1176, 1199, 1222], [1224, 1202, 1178, 1177, 1200, 1223], [1225, 1203, 1179, 1178, 1201, 1224], [1226, 1204, 1180, 1179, 1202, 1225], [1227, 1205, 1181, 1180, 1203, 1226], [1228, 1206, 1182, 1181, 1204, 1227], [1229, 1207, 1183, 1182, 1205, 1228], [1230, 1208, 1184, 1183, 1206, 1229], [1231, 1209, 1185, 1184, 1207, 1230], [1232, 1210, 1186, 1185, 1208, 1231], [1233, 1211, 1187, 1186, 1209, 1232], [1234, 1212, 1188, 1187, 1210, 1233], [1235, 1213, 1189, 1188, 1211, 1234], [1236, 1214, 1190, 1189, 1212, 1235], [1237, 1215, 1191, 1190, 1213, 1236], [1238, 1216, 1192, 1191, 1214, 1237], [1239, 1217, 1193, 1192, 1215, 1238], [1194, 1193, 1216, 1239], [1240, 1219, 1196, 1195], [1241, 1220, 1197, 1196, 1218, 1240], [1242, 1221, 1198, 1197, 1219, 1241], [1243, 1222, 1199, 1198, 1220, 1242], [1244, 1223, 1200, 1199, 1221, 1243], [1245, 1224, 1201, 1200, 1222, 1244], [1246, 1225, 1202, 1201, 1223, 1245], [1247, 1226, 1203, 1202, 1224, 1246], [1248, 1227, 1204, 1203, 1225, 1247], [1249, 1228, 1205, 1204, 1226, 1248], [1250, 1229, 1206, 1205, 1227, 1249], [1251, 1230, 1207, 1206, 1228, 1250], [1252, 1231, 1208, 1207, 1229, 1251], [1253, 1232, 1209, 1208, 1230, 1252], [1254, 1233, 1210, 1209, 1231, 1253], [1255, 1234, 1211, 1210, 1232, 1254], [1256, 1235, 1212, 1211, 1233, 1255], [1257, 1236, 1213, 1212, 1234, 1256], [1258, 1237, 1214, 1213, 1235, 1257], [1259, 1238, 1215, 1214, 1236, 1258], [1260, 1239, 1216, 1215, 1237, 1259], [1217, 1216, 1238, 1260], [1241, 1219, 1218], [1242, 1220, 1219, 1240], [1243, 1221, 1220, 1241], [1244, 1222, 1221, 1242], [1245, 1223, 1222, 1243], [1246, 1224, 1223, 1244], [1247, 1225, 1224, 1245], [1248, 1226, 1225, 1246], [1249, 1227, 1226, 1247], [1250, 1228, 1227, 1248], [1251, 1229, 1228, 1249], [1252, 1230, 1229, 1250], [1253, 1231, 1230, 1251], [1254, 1232, 1231, 1252], [1255, 1233, 1232, 1253], [1256, 1234, 1233, 1254], [1257, 1235, 1234, 1255], [1258, 1236, 1235, 1256], [1259, 1237, 1236, 1257], [1260, 1238, 1237, 1258], [1239, 1238, 1259]];\n","<script lang=\"ts\">\n\timport Svg from \"./Svg.svelte\";\n\timport Hexagon from \"./Hexagon.svelte\";\n\timport { neighbors } from \"./neighbors_20\";\n\timport { gridSetup, OurGrid } from \"./hexagon\";\n\timport clone from \"just-clone\";\n\n\tconst r = 10;\n\tconst width = 1000;\n\tconst height = 1000;\n\tconst birthRule = [2];\n\tconst survivalRule = [2, 4];\n\n\tlet grid: OurGrid;\n\tlet play = false;\n\tlet interval: ReturnType<typeof setInterval> | null = null;\n\tlet seed = [];\n\n\tclear();\n\n\t$: if (play) {\n\t\tinterval = setInterval(step, 200);\n\t} else if (interval !== null) {\n\t\tclearInterval(interval);\n\t\tinterval = null;\n\t}\n\n\tfunction life(inputGrid: OurGrid, birth: number[], survival: number[]) {\n\t\tconst prevGrid = clone(inputGrid);\n\t\tconst newGrid = inputGrid.map((hex, i) => {\n\t\t\tconst prevHex = prevGrid[i];\n\t\t\tconst neighbors = prevHex.neighbors.map((n) => prevGrid[n]);\n\t\t\tconst aliveNeighbors = neighbors.filter((n) => n.alive);\n\t\t\tconst alive = prevHex.alive;\n\n\t\t\tif (!alive) {\n\t\t\t\tif (birth.includes(aliveNeighbors.length)) {\n\t\t\t\t\thex.alive = true;\n\t\t\t\t\treturn hex;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (survival.includes(aliveNeighbors.length)) {\n\t\t\t\treturn hex;\n\t\t\t} else {\n\t\t\t\thex.alive = false;\n\t\t\t\treturn hex;\n\t\t\t}\n\t\t});\n\n\t\treturn newGrid;\n\t}\n\n\tfunction step() {\n\t\tgrid = life(grid, birthRule, survivalRule);\n\t}\n\n\tfunction togglePlay() {\n\t\tplay = !play;\n\t}\n\n\tfunction clear(clearSeed = true) {\n\t\tplay = false;\n\t\tgrid = gridSetup(r, 20);\n\t\tseed = clearSeed ? [] : seed;\n\t\tgrid = grid.map((hex, i) => {\n\t\t\thex.neighbors = neighbors[i];\n\t\t\treturn hex;\n\t\t});\n\t}\n\n\tfunction setSeed(seed: number[]) {\n\t\tgrid = grid.map((hex, i) => {\n\t\t\thex.alive = seed.includes(i);\n\t\t\treturn hex;\n\t\t});\n\t}\n\n\tfunction reset() {\n\t\tclear(false);\n\t\tsetSeed(seed);\n\t}\n</script>\n\n<main>\n\t<Svg {width} {height}>\n\t\t{#each grid.map( (hex) => ({ hex, point: hex.toPoint() }) ) as { hex, point }, i}\n\t\t\t<Hexagon\n\t\t\t\tactive={hex.alive}\n\t\t\t\tshowOutline={!play}\n\t\t\t\ton:click={() => {\n\t\t\t\t\thex.alive = !hex.alive;\n\t\t\t\t\tif (!play) {\n\t\t\t\t\t\tif (hex.alive) {\n\t\t\t\t\t\t\tseed = [...seed, i];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tseed = seed.filter((s) => s !== i);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\t{r}\n\t\t\t\tx={point.x + width / 2}\n\t\t\t\ty={point.y + height / 2}\n\t\t\t/>\n\t\t{/each}\n\t</Svg>\n\t<button on:click={togglePlay}>{play ? \"stop\" : \"play\"}</button>\n\t<button on:click={() => clear()}>clear</button>\n\t<button on:click={reset}>reset</button>\n</main>\n\n<style>\n\t:global(body) {\n\t\tbackground: rgb(11, 4, 37);\n\t\theight: 100%;\n\n\t\tdisplay: grid;\n\t\tplace-items: center;\n\t}\n</style>\n","import App from './App.svelte';\nconst app = new App({\n    target: document.body,\n    props: {}\n});\nexport default app;\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","get_slot_context","definition","ctx","$$scope","tar","src","k","assign","slice","null_to_empty","value","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","svg_element","createElementNS","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","current_component","set_current_component","component","bubble","callbacks","$$","type","call","this","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","seen_callbacks","Set","flushidx","flush","saved_component","length","update","pop","i","callback","has","add","clear","fragment","before_update","dirty","p","after_update","outroing","outros","transition_in","block","local","delete","transition_out","o","c","d","create_component","mount_component","customElement","on_mount","on_destroy","m","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","$on","index","indexOf","splice","$set","$$props","obj","$$set","keys","slot_ctx","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","lets","undefined","merged","len","Math","max","width","height","t","n","exports","split","r","prototype","toString","e","isObject","isNumber","isArray","isString","s","u","test","Error","toLowerCase","toUpperCase","includes","pointy","E","SE","SW","W","NW","NE","flat","S","N","x","y","q","h","f","isValidHex","distance","nudge","lerp","round","get","min","cubeToCartesian","equals","Boolean","signedModulo","compassToNumberDirection","concat","orientation","g","isPointy","sort","toPoint","Hex","fromPoint","P","Grid","start","direction","onCreate","w","size","rStart","rEnd","radius","center","H","offset","O","j","ring","M","Point","C","ensureXY","subtract","multiply","divide","R","$","static","__isHoneycombHex","TypeError","Number","lastIndexOf","super","unshift","v","defineProperty","enumerable","configurable","writable","T","getOwnPropertySymbols","getOwnPropertyDescriptor","apply","G","arguments","getOwnPropertyDescriptors","defineProperties","z","V","I","X","Y","B","xRadius","sqrt","_","yRadius","A","origin","L","F","U","J","K","Q","abs","Z","tt","nt","rt","et","thirdCoordinate","it","st","normalizeRadiuses","cartesianToCube","cartesian","coordinates","corners","cube","isFlat","set","toCartesian","toCube","propertyIsEnumerable","D","isNaN","toJSON","ot","extendHex","some","pointToHex","parallelogram","triangle","hexagon","rectangle","spiral","hexesBetween","hexesInRange","neighborsOf","pointHeight","pointWidth","gridSetup","hexRadius","gridRadius","alive","neighbors","ourHex","defineGrid","showOutline","active","hex","coords","PI","cos","sin","hexagonCoords","path","closed","coordsToPath","classed","iterations","wholeText","point","birthRule","survivalRule","grid","play","interval","seed","step","inputGrid","birth","survival","prevGrid","clone","newGrid","prevHex","aliveNeighbors","life","clearSeed","setInterval","clearInterval","setSeed","body"],"mappings":"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"}